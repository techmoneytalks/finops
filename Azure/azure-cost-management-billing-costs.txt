Tell us about your PDF experience.

Cost Management documentation

Microsoft Cost Management is a suite of FinOps tools that help organizations analyze,
monitor and optimize their Microsoft Cloud costs.

Reporting + analytics

OVERVIEW

Overview


QUICKSTART

Start analyzing costs


HOW-TO GUIDE

Analyze unexpected costs
Use Cost analysis for common tasks
Connect with Power BI


Monitoring

HOW-TO GUIDE

Use cost alerts
Create a budget
Configure anomaly alerts
Reservation utilization alerts
Subscribe to scheduled alerts


Optimization

HOW-TO GUIDE

Act on recommendations



Save with savings plans
Save with reservations
Manage Azure Hybrid Benefit for SQL


Pricing + estimation

REFERENCE

Pricing calculator
TCO calculator
Azure Migrate


Cost allocation

HOW-TO GUIDE

Enable tag inheritance
Split shared costs


Automation + extensibility

OVERVIEW

Overview


HOW-TO GUIDE

Choose a cost details solution
Automation for partners



What is Microsoft Cost Management

Article
06/16/2023


Microsoft Cost Management is a suite of FinOps tools that help organizations analyze,
monitor, and optimize their Microsoft Cloud costs. Cost Management is available toanyone with access to a billing account, subscription, resource group, or managementgroup. You can access Cost Management within the billing and resource managementexperiences or separately as a standalone tool optimized for FinOps teams who managecost across multiple scopes. You can also automate and extend native capabilities orenrich your own tools and processes with cost to maximize organizational visibility andaccountability with all stakeholders and realize your optimization and efficiency goalsfaster.

A few examples of what you can do in Cost Management include:

Report on and analyze costs in the Azure portal, Microsoft 365 admin center, orPower BI.
Monitor costs proactively with budget, anomaly, reservation utilization, andscheduled alerts.
Enable tag inheritance and split shared costs with cost allocation rules.
Automate business processes or integrate cost into external tools by exportingdata.


How charges are processed

To understand how Cost Management works, you should first understand theCommerce system. At its core, Microsoft Commerce is a data pipeline that underpins allMicrosoft commercial transactions, whether consumer or commercial. While there aremany inputs and connections to this pipeline, like the sign-up and Marketplacepurchase experiences, this article focuses on the components that help you monitor,
allocate, and optimize your costs.

Diagram showing the Commerce data pipeline.



From the left, your Azure, Microsoft 365, Dynamics 365, and Power Platform services areall pushing data into the Commerce data pipeline. Each service publishes data on adifferent cadence. In general, if data for one service is slower than another, it's due tohow frequently those services are publishing their usage and charges.

As the data makes its way through the pipeline, the rating system applies discountsbased on your specific price sheet and generates “rated usage,” which includes priceand quantity for each cost record. It's the basis for what you see in Cost Managementand it's covered later. At the end of the month, credits are applied and the invoice ispublished. This process starts 72 hours after your billing period ends, which is usuallythe last day of the calendar month for most accounts. For example, if your billing periodends on March 31, charges will be finalized on April 4 at midnight.

Important

Credits are applied like a gift card or other payment instrument before the invoiceis generated. While credit status is tracked as new charges flow into the datapipeline, credits aren’t explicitly applied to these charges until the end of themonth.

Everything up to this point makes up the billing process where charges are finalized,
discounts are applied, and invoices are published. Billing account and billing profileowners may be familiar with this process as part of the Billing experience within theAzure portal or Microsoft 365 admin center. The Billing experience allows you to reviewcredits, manage your billing address and payment methods, pay invoices, and more –
everything related to managing your billing relationship with Microsoft.

The anomaly detection model identifies anomalies daily based on normalizedusage (not rated usage).
The cost allocation engine applies tag inheritance and splits shared costs.
AWS cost and usage reports are pulled based on any connectors for AWS you mayhave configured.
Azure Advisor cost recommendations are pulled in to enable cost savings insightsfor subscriptions and resource groups.
Cost alerts are sent out for budgets, anomalies, scheduled alerts, and more basedon the configured settings.


Lastly, cost details are made available from cost analysis in the Azure portal andpublished to your storage account via scheduled exports.

How Cost Management and Billing relate


Cost Management is a set of FinOps tools that enable you to analyze, manage, andoptimize your costs.

Billing provides all the tools you need to manage your billing account and payinvoices.

While Cost Management is available from within the Billing experience, CostManagement is also available from every subscription, resource group, andmanagement group in the Azure portal to ensure everyone has full visibility into thecosts they’re responsible for and can optimize their workloads to maximize efficiency.
Cost Management is also available independently to streamline the process formanaging cost across multiple billing accounts, subscriptions, resource groups, and/ormanagement groups.

Diagram showing how billing organization relates to Cost Management.


What data is included in Cost Management andBilling?

Within the Billing experience, you can manage all the products, subscriptions, andrecurring purchases you use; review your credits and commitments; and view and payyour invoices. Invoices are available online or as PDFs and include all billed charges andany applicable taxes. Credits are applied to the total invoice amount when invoices aregenerated. This invoicing process happens in parallel to Cost Management dataprocessing, which means Cost Management doesn't include credits, taxes, and somepurchases, like support charges in non-MCA accounts.

Classic Cloud Solution Provider (CSP) and sponsorship subscriptions aren't supported inCost Management. These subscriptions will be supported after they transition toMicrosoft Customer Agreement.


For more information about supported offers, what data is included, or how data isrefreshed and retained in Cost Management, see Understand Cost Management data.

Estimate your cloud costs

During your cloud journey, there are many tools available to help you understandpricing:

The Total Cost of Ownership (TCO) calculator should be your first stop if you’recurious about how much it would cost to move your existing on-premisesinfrastructure to the cloud.
Azure Migrate is a free tool that helps you analyze your on-premises workloadsand plan your cloud migration.
The Azure pricing calculator helps you estimate the cost of creating new orexpanding existing deployments. In this tool, you're able to explore variousconfigurations of many different Azure services as you identify which SKUs andhow much usage keeps you within your desired price range. For more information,
see the pricing details for each of the services you use.
The Virtual Machine Selector Tool is your one-stop-shop for finding the bestVMs for your intended solution.
The Azure Hybrid Benefit savings calculator helps you estimate the savings ofusing your existing Windows Server and SQL Server licenses on Azure.


Report on and analyze costs

Cost Management and Billing include several tools to help you understand, report on,
and analyze your invoiced Microsoft Cloud and AWS costs.

Cost analysis is a tool for ad-hoc cost exploration. Get quick answers withlightweight insights and analytics.
Power BI is an advanced solution to build moreextensive dashboards and complex reports or combine costs with other data.
Power BI is available for billing accounts and billing profiles.
Exports and the Cost Details API enable you to integrate cost details into externalsystems or business processes.
Connectors for AWS enable you to ingest your AWS cost details into Azure tofacilitate managing Azure and AWS costs together. After configured, the connectoralso enables other capabilities, like budget and scheduled alerts.


For more information, see Get started with reporting.




Organize and allocate costs

Organizing and allocating costs are critical to ensuring invoices are routed to the correctbusiness units and can be further split for internal billing, also known as chargeback. Thefirst step to allocating cloud costs is organizing subscriptions and resources in a waythat facilitates natural reporting and chargeback. Microsoft offers the following optionsto organize resources and subscriptions:

MCA billing profiles and invoice sections are used to group subscriptions intoinvoices. Each billing profile represents a separate invoice that can be billed to adifferent business unit and each invoice section is segmented separately withinthose invoices. You can also view costs by billing profile or invoice section in costsanalysis.
EA departments and enrollment accounts are conceptually similar to invoicesections, as groups of subscriptions, but they aren't represented within the invoicePDF. They're included within the cost details backing each invoice, however. Youcan also view costs by department or enrollment account in costs analysis.
Management groups also allow grouping subscriptions together, but offer a fewkey differences:
Management group access is inherited down to the subscriptions andresources.
Management groups can be layered into multiple levels and subscriptions canbe placed at any level.
Management groups aren't included in cost details.
All historical costs are returned for management groups based on thesubscriptions currently within that hierarchy. When a subscription moves, allhistorical cost moves.
Azure Policy supports management groups and they can have rules assigned toautomate compliance reporting for your cost governance strategy.



Subscriptions and resource groups are the lowest level at which you can organizeyour cloud solutions. At Microsoft, every product – sometimes even limited to asingle region – is managed within its own subscription. It simplifies costgovernance but requires more overhead for subscription management. Mostorganizations use subscriptions for business units and separating dev/test fromproduction or other environments, then use resource groups for the products. Itcomplicates cost management because resource group owners don't have a wayto manage cost across resource groups. On the other hand, it's a straightforwardway to understand who's responsible for most resource-based charges. Keep inmind that not all charges come from resources and some don't have resourcegroups or subscriptions associated with them. It also changes as you move to MCAbilling accounts.



Resource tags are the only way to add your own business context to cost detailsand are perhaps the most flexible way to map resources to applications, businessunits, environments, owners, etc. For more information, see How tags are used incost and usage data for limitations and important considerations.


Once your resources and subscriptions are organized using the subscription hierarchyand have the necessary metadata (tags) to facilitate further allocation, use the followingtools in Cost Management to streamline cost reporting:

Tag inheritance simplifies the application of tags by copying subscription andresource group tags down to the resources in cost data. These tags aren't saved onthe resources themselves. The change only happens within Cost Management andisn't available to other services, like Azure Policy.
Cost allocation offers the ability to “move” or split shared costs from onesubscription, resource group, or tag to another subscription, resource group, ortag. Cost allocation doesn't change the invoice. The goal of cost allocation is toreduce overhead and more accurately report on where charges are ultimatelycoming from (albeit indirectly), which should drive more complete accountability.


How you organize and allocate costs plays a huge role in how people within yourorganization can manage and optimize costs. Be sure to plan ahead and revisit yourallocation strategy yearly.

Monitor costs with alerts

Cost Management and Billing offer many different types of emails and alerts to keepyou informed and help you proactively manage your account and incurred costs.

Budget alerts notify recipients when cost exceeds a predefined cost or forecastamount. Budgets can be visualized in cost analysis and are available on everyscope supported by Cost Management. Subscription and resource group budgetscan also be configured to notify an action group to take automated actions toreduce or even stop further charges.
Anomaly alertsnotify recipients when an unexpected change in daily usage hasbeen detected. It can be a spike or a dip. Anomaly detection is only available forsubscriptions and can be viewed within the cost analysis preview. Anomaly alertscan be configured from the cost alerts page.
Scheduled alerts notify recipients about the latest costs on a daily, weekly, ormonthly schedule based on a saved cost view. Alert emails include a visual chartrepresentation of the view and can optionally include a CSV file. Views areconfigured in cost analysis, but recipients don't require access to cost in order toview the email, chart, or linked CSV.



EA commitment balance alerts are automatically sent to any notification contactsconfigured on the EA billing account when the balance is 90% or 100% used.
Invoice alerts can be configured for MCA billing profiles and Microsoft OnlineServices Program (MOSP) subscriptions. For details, see View and download yourAzure invoice.


For for information, see Monitor usage and spending with cost alerts.

Optimize costs

Microsoft offers a wide range of tools for optimizing your costs. Some of these tools areavailable outside the Cost Management and Billing experience, but are included forcompleteness.

There are many free services available in Azure. Be sure to pay close attention tothe constraints. Different services are free indefinitely, for 12 months, or 30 days.
Some are free up to a specific amount of usage and some may have dependencieson other services that aren't free.
Azure Advisor cost recommendations should be your first stop when interested inoptimizing existing resources. Advisor recommendations are updated daily and arebased on your usage patterns. Advisor is available for subscriptions and resourcegroups. Management group users can also see recommendations but they need toselect the desired subscriptions. Billing users can only see recommendations forsubscriptions they have resource access to.
Azure savings plans save you money when you have consistent usage of Azurecompute resources. A savings plan can significantly reduce your resource costs byup to 65% from pay-as-you-go prices.
Azure reservations help you save up to 72% compared to pay-as-you-go ratesby precommitting to specific usage amounts for a set time duration.
Azure Hybrid Benefit helps you significantly reduce costs by using on-premisesWindows Server and SQL Server licenses or RedHat and SUSE Linux subscriptionson Azure.


For other options, see Azure benefits and incentives.

Next steps

For other options, see Azure benefits and incentives.


Enable preview features in CostManagement Labs

Article
05/25/2023


Cost Management Labs is an experience in the Azure portal where you can get a sneakpeek at what's coming in Cost Management. You can engage directly with us to sharefeedback and help us better understand how you use the service, so we can delivermore tuned and optimized experiences.

This article explains how to explore preview features and provides a list of the recentpreviews you might be interested in.

Explore preview features

You can explore preview features from the Cost Management overview.

1. On the Cost Management overview page, select the Try preview command at thetop of the page.
2. From there, enable the features you'd like to use and select Close at the bottom ofthe page.



Screenshot showing the Cost Management labs preview options.
3. To see the features enabled, close and reopen Cost Management. You can reopenCost Management by selecting the link in the notification in the top-right corner.
Screenshot showing the Reopen Cost Management notification.


If you're interested in getting preview features even earlier:


1. Navigate to Cost Management.
2. Select Go to preview portal.


Or, you can go directly to the Azure preview portal.

It's the same experience as the public portal, except with new improvements andpreview features. Every change in Cost Management is available in the preview portal aweek before it's in the full Azure portal.

We encourage you to try out the preview features available in Cost Management Labsand share your feedback. It's your chance to influence the future direction of CostManagement. To provide feedback, use the Report a bug link in the Try preview menu.
It's a direct way to communicate with the Cost Management engineering team.

Remember preview features across sessions

Cost Management now remembers preview features across sessions in the previewportal. Select the preview features you're interested in from the Try preview menu andyou'll see them enabled by default the next time you visit the portal. There's no need toenable the option – preview features are remembered automatically.

Total KPI tooltip

View more details about what costs are included and not included in the Cost analysispreview. You can enable this option from the Try Preview menu.

The Total KPI tooltip can be enabled from the Try preview menu in the Azure portal.
Use the How would you rate the cost analysis preview? option at the bottom of thepage to share feedback about the preview.

Cloud Solution Provider (CSP) partners can view a breakdown of costs by customer andsubscription in the Cost analysis preview. Note this view is only available for MicrosoftPartner Agreement (MPA) billing accounts and billing profiles.

The Customers view can be enabled from the Try preview menu in the Azure portal.
Use the How would you rate the cost analysis preview? option at the bottom of thepage to share feedback about the preview.

Anomaly detection alerts

Get notified by email when a cost anomaly is detected on your subscription.


Anomaly detection is available for Azure global subscriptions in the cost analysispreview.

Here's an example of a cost anomaly shown in cost analysis:

Screenshot showing an example cost anomaly.


To configure anomaly alerts:

1. Open the cost analysis preview.
2. Navigate to Cost alerts and select Add > Add Anomaly alert.


Screenshot showing Add anomaly alert navigation.


For more information about anomaly detection and how to configure alerts, see Identifyanomalies and unexpected changes in cost.

Anomaly detection is now available by default in Azure global.




Recent and pinned views in the cost analysispreview

Cost analysis is your tool for interactive analytics and insights. You've seen the additionof new views and capabilities, like anomaly detection, in the cost analysis preview.
However, classic cost analysis is still the best tool for quick data exploration with simplefiltering and grouping. While these capabilities are coming to the preview, we'reintroducing a new experience that allows you to select which view you want to startwith. Whether that is a preview view, a built-in view, or a custom view you created.

The first time you open the cost analysis preview, you see a list of all views. When youreturn, you see a list of the recently used views to help you get back to where you leftoff quicker than ever. You can pin any view or even rename or subscribe to alerts foryour saved views.

Recent and pinned views are available by default in the cost analysis preview. Use theHow would you rate the cost analysis preview? option at the bottom of the page toshare feedback.

Grouping SQL databases and elastic pools

Get an at-a-glance view of your total SQL costs by grouping SQL databases and elasticpools. They're shown under their parent server in the cost analysis preview. This featureis enabled by default.

Understanding what you're being charged for can be complicated. The best place tostart for many people is the Resources view in the cost analysis preview. It showsresources that are incurring cost. But even a straightforward list of resources can be hardto follow when a single deployment includes multiple, related resources. To helpsummarize your resource costs, we're trying to group related resources together. So,
we're changing cost analysis to show child resources.

Many Azure services use nested or child resources. SQL servers have databases, storageaccounts have containers, and virtual networks have subnets. Most of the childresources are only used to configure services, but sometimes the resources have theirown usage and charges. SQL databases are perhaps the most common example.

SQL databases are deployed as part of a SQL server instance, but usage is tracked at thedatabase level. Additionally, you might also have charges on the parent server, like forMicrosoft Defender for Cloud. To get the total cost for your SQL deployment in classiccost analysis, you need to manually sum up the cost of the server and each individual


database. As an example, you can see the aepool elastic pool at the top of the followinglist and the treyanalyticsengine server lower down on the first page. What you don't seeis another database even lower in the list. You can imagine how troubling this situationwould be when you need the total cost of a large server instance with many databases.

Here's an example showing classic cost analysis where multiple related resource costsaren't grouped.

Screenshot showing classic cost analysis where multiple related resource costs aren't grouped.


In the cost analysis preview, the child resources are grouped together under their parentresource. The grouping shows a quick, at-a-glance view of your deployment and its totalcost. Using the same subscription, you can now see all three charges grouped togetherunder the server, offering a one-line summary for your total server costs.

Here's an example showing grouped resource costs with the Grouping SQL databasesand elastic pools preview option enabled.


Screenshot showing grouped resource costs.


You might also notice the change in row count. Classic cost analysis shows 53 rowswhere every resource is broken out on its own. The cost analysis preview only shows 25rows. The difference is that the individual resources are being grouped together, makingit easier to get an at-a-glance cost summary.

In addition to SQL servers, you also see other services with child resources, like AppService, Synapse, and VNet gateways. Each is similarly shown grouped together in thecost analysis preview.

Grouping SQL databases and elastic pools is available by default in the cost analysispreview.

Group related resources in the cost analysispreview

Group related resources, like disks under VMs or web apps under App Service plans, byadding a “cm-resource-parent” tag to the child resources with a value of the parentresource ID. Wait 24 hours for tags to be available in usage and your resources aregrouped. Leave feedback to let us know how we can improve this experience further foryou.

Some resources have related dependencies that aren't explicit children or nested underthe logical parent in Azure Resource Manager. Examples include disks used by a virtualmachine or web apps assigned to an App Service plan. Unfortunately, Cost Management


isn't aware of these relationships and can't group them automatically. This experimentalfeature uses tags to summarize the total cost of your related resources together. You seea single row with the parent resource. When you expand the parent resource, you seeeach linked resource listed individually with their respective cost.

As an example, let's say you have an Azure Virtual Desktop host pool configured withtwo VMs. Tagging the VMs and corresponding network/disk resources groups themunder the host pool, giving you the total cost of the session host VMs in your host pooldeployment. This example gets even more interesting if you want to also include thecost of any cloud solutions made available via your host pool.

Screenshot of the cost analysis preview showing VMs and disks grouped under an Azure Virtual Desktop host pool.


Before you link resources together, think about how you'd like to see them grouped.
You can only link a resource to one parent and cost analysis only supports one level ofgrouping today.

Once you know which resources you'd like to group, use the following steps to tag yourresources:

1. Open the resource that you want to be the parent.
2. Select Properties in the resource menu.
3. Find the Resource ID property and copy its value.
4. Open All resources or the resource group that has the resources you want to link.
5. Select the checkboxes for every resource you want to link and then select theAssign tags command.
6. Specify a tag key of "cm-resource-parent" (make sure it's typed correctly) andpaste the resource ID from step 3.
7. Wait 24 hours for new usage to be sent to Cost Management with the tags. (Keepin mind resources must be actively running with charges for tags to be updated inCost Management.)
8. Open the Resources view in the cost analysis preview.


Wait for the tags to load in the Resources view and you should now see your logicalparent resource with its linked children. If you don't see them grouped yet, check thetags on the linked resources to ensure they're set. If not, check again in 24 hours.

Grouping related resources is available by default in the cost analysis preview.




Charts in the cost analysis preview

Charts in the cost analysis preview include a chart of daily or monthly charges for thespecified date range.

Screenshot showing a chart in cost analysis preview.


Charts are enabled on the Try preview page in the Azure portal. Use the How wouldyou rate the cost analysis preview? Option at the bottom of the page to share feedbackabout the preview.

Forecast in the cost analysis preview

Show the forecast for the current period at the top of the cost analysis preview.

The Forecast KPI can be enabled from the Try preview page in the Azure portal. Usethe How would you rate the cost analysis preview? option at the bottom of the page toshare feedback about the preview.

Cost savings insights in the cost analysispreview

Cost insights surface important details about your subscriptions, like potential anomaliesor top cost contributors. To support your cost optimization goals, cost insights nowinclude the total cost savings available from Azure Advisor for your subscription.


Cost savings insights are available by default for all subscriptions in the cost analysispreview.

View cost for your resources

Cost analysis is available from every management group, subscription, resource group,
and billing scope in the Azure portal and the Microsoft 365 admin center. To make costdata more readily accessible for resource owners, you can now find a View cost link atthe top-right of every resource overview screen, in Essentials. Select the link to openclassic cost analysis with a resource filter applied.

The view cost link is enabled by default in the Azure preview portal.

Streamlined menu

Cost Management includes a central management screen for all configuration settings.
Some of the settings are also available directly from the Cost Management menucurrently. Enabling the Streamlined menu option removes configuration settings fromthe menu.

In the following image, the left menu is classic cost analysis. The right menu is thestreamlined menu.


Screenshot showing the Streamlined menu in cost analysis preview.


You can enable Streamlined menu on the Try preview page in the Azure portal. Feelfree to share your feedback. As an experimental feature, we need your feedback to


determine whether to release or remove the preview.

Open config items in the menu

Cost Management includes a central management view for all configuration settings.
Currently, selecting a setting opens the configuration page outside of the CostManagement menu.

Screenshot showing configuration items after the Open config items in the menu option is selected.


Open config items in the menu is an experimental option to open the configurationpage in the Cost Management menu. The option makes it easier to switch to othermenu items with one selection. The feature works best with the streamlined menu.

You can enable Open config items in the menu on the Try preview page in the Azureportal.

Share your feedback about the feature. As an experimental feature, we need yourfeedback to determine whether to release or remove the preview.

Change scope from menu

If you manage many subscriptions, resource groups, or management groups and needto switch between them often, you might want to include the Change scope from menuoption.


Screenshot showing the Change scope option added to the menu after selecting the Change menu from scope preview option.


It allows changing the scope from the menu for quicker navigation. To enable thefeature, navigate to the Cost Management Labs preview page in the Azure portal.

Share your feedback about the feature. As an experimental feature, we need yourfeedback to determine whether to release or remove the preview.

Reservation utilization alerts

Azure reservations can provide cost savings by committing to one-year or three-yearplans. However, reservations can sometimes go unutilized or underutilized, resulting infinancial losses. As a billing account or reservation user, you can review the utilizationpercentage of your reservation purchases in the Azure portal, but you might miss outimportant changes. By enabling reservation utilization alerts, you solve this by receivingemail notifications whenever any of your reservations exhibit low utilization. This allowsyou to take prompt action and optimize your reservation purchases for maximumefficiency.

The alert email provides essential information including top unutilized reservations anda hyperlink to the list of reservations. By promptly optimizing your reservationpurchases, you can avoid financial losses and ensure that your investments are


delivering the expected cost savings. For more information, see Reservation utilizationalerts.

Screenshot showing Create alert rule.


How to share feedback

We're always listening and making constant improvements based on your feedback, sowe welcome it. Here are a few ways to share your feedback with the team:

If you have a problem or are seeing data that doesn't make sense, submit asupport request. It's the fastest way to investigate and resolve data issues andmajor bugs.
For feature requests, you can share ideas and vote up others in the CostManagement feedback forum.
Take advantage of the How would you rate… prompts in the Azure portal to let usknow how each experience is working for you. We monitor the feedbackproactively to identify and prioritize changes. You see either a blue option in thebottom-right corner of the page or a banner at the top.


Next steps

Learn about what's new in Cost Management.


Manage AWS costs and usage in Azure

Article
04/06/2023


After you've set up and configured AWS Cost and Usage report integration for CostManagement, you're ready to start managing your AWS costs and usage. This articlehelps you understand how to use cost analysis and budgets in Cost Management tomanage your AWS costs and usage.

If you haven't already configured the integration, see Set up and configure AWS Usagereport integration.

Before you begin: If you're unfamiliar with cost analysis, see the Explore and analyzecosts with Cost analysis quickstart. And, if you're unfamiliar with budgets in Azure, seethe Create and manage budgets tutorial.

View AWS costs in cost analysis

AWS costs are available in Cost Analysis in the following scopes:

AWS linked accounts under a management group
AWS linked account costs
AWS consolidated account costs


The next sections describe how to use the scopes so that you see cost and usage datafor each one.

View AWS linked accounts under a management group

Viewing costs by using the management group scope is the only way to see aggregatedcosts coming from different Azure subscriptions and AWS linked accounts. Using amanagement group provides a cross-cloud view to view costs from Azure and AWStogether.

In cost analysis, open the scope picker and select the management group that holdsyour AWS linked accounts. Here's an example image in the Azure portal:


Example of the Select scope view with linked accounts under a management group


Here's an example showing the management group cost in cost analysis, grouped byProvider (Azure and AWS).

Example showing Azure and AWS costs for a quarter in cost analysis


Note


Management groups aren't currently supported for Microsoft Customer Agreement(MCA) customers. MCA customers can create the connector and view their AWSdata. However, MCA customers can't view their Azure costs and AWS costs togetherunder a management group.

View AWS linked account costs

To view AWS link account costs, open the scope picker and select the AWS linkedaccount. Note that linked accounts are associated to a management group, as definedin the AWS connector.

Here's an example that shows selecting an AWS linked account scope.

Example of the Select scope view that shows AWS linked accounts


View AWS consolidated account costs

To view AWS consolidated account costs, open the scope picker and select the AWSconsolidated account. Here's an example that shows selecting an AWS consolidatedaccount scope.


Example of the Select scope view with consolidated accounts


This scope provides an aggregated view of all AWS linked accounts associated with theAWS consolidated account. Here's an example showing costs for an AWS consolidatedaccount, grouped by service name.

Example showing AWS consolidated costs in cost analysis





Dimensions available for filtering and grouping

The following table describes dimensions available to group and filter by in costanalysis.

DimensionAmazon CUR headerScopesCommentsAvailabilityzonelineitem/AvailabilityZoneAllLocationproduct/RegionAllMeterAllMetercategorylineItem/ProductCodeAllMetersubcategorylineitem/UsageTypeAllOperationlineItem/OperationAllResourcelineItem/ResourceIdAllResourcetypeproduct/instanceTypeAllIf product/instanceType is null,
lineItem/UsageType is used.
ResourceGuidN/AAllAzure meter GUID.
Service nameproduct/ProductNameAllIf product/ProductName is null,
lineItem/ProductCode is used.
Service tierSubscriptionIDlineItem/UsageAccountIdConsolidatedaccount andmanagementgroupSubscriptionnameN/AConsolidatedaccount andmanagementgroupAccount names are collected usingthe AWS Organization API.
TagresourceTagsAllThe user: prefix is removed fromuser-defined tags to allow cross-
cloud tags. The aws: prefix is leftintact.
Billingaccount IDbill/PayerAccountIdManagementgroup


DimensionAmazon CUR headerScopesCommentsBillingaccountnameN/AManagementgroupAccount names are collected usingthe AWS Organization API.
ProviderN/AManagementgroupEither AWS or Azure.

Set budgets on AWS scopes

Use budgets to proactively manage costs and drive accountability in your organization.
Budgets are set on the AWS consolidated account and AWS linked account scopes.
Here's an example of budgets for an AWS consolidated account shown in CostManagement:

Example showing budgets for an AWS consolidated account


AWS data collection process

After setting up the AWS connector, data collection and discovery processes start. Itmight take few hours to collect all usage data. The duration depends on:

The time needed to process the CUR files that are in the AWS S3 bucket.
The time needed to create the AWS Consolidated account and AWS Linkedaccount scopes.
The time and frequency of AWS are writing the Cost and Usage Report files in theS3 bucket


AWS integration pricing

Each AWS connector gets 90 free trial days.


The list price is 1% of your AWS monthly costs. Each month you are charged based onyour invoiced costs from the previous month.

Accessing AWS APIs may incur additional costs on AWS.

AWS integration limitations

Budgets in Cost Management don't support management groups with multiplecurrencies. Management groups with multiple currencies won't see a budgetevaluation. An error message is shown if you select a management group that hasmultiple currencies when you create a budget.
Cloud connectors don't support AWS GovCloud (US), AWS Gov, or AWS China.
Cost Management shows AWS usage costs only. Tax, support, refunds, RI, credits orany other charge types aren't supported yet.


Troubleshooting AWS integration

Use the following troubleshooting information to resolve common problems.

No permission to AWS Linked accounts

Error code: Unauthorized

There are two ways to get permissions to access AWS linked accounts costs:

Get access to the management group that has the AWS Linked accounts.
Have someone give you permission to the AWS linked account.


By default, the AWS connector creator is the owner of all the objects that the connectorcreated. Including, the AWS consolidated account and the AWS linked account.

In order to be able to Verify the connector settings you will need at least a contributorrole, reader can not Verify connector settings

Collection failed with AssumeRole

Error code: FailedToAssumeRole

This error means that Cost Management is unable to call the AWS AssumeRole API. Thisproblem can happen because of an issue with the role definition. Verify that thefollowing conditions are true:


The external ID is the same as the one in the role definition and the connectordefinition.
The role type is set to Another AWS account Belonging to you or 3rd party.
The Require MFA choice is cleared.
The trusted AWS account in the AWS Role is 432263259397.


Collection failed with Access Denied - CUR reportdefinitions

Error code: AccessDeniedReportDefinitions

This error means that Cost Management is unable to see the Cost and Usage reportdefinitions. This permission is used to validate that the CUR is defined as expected byCost Management. See Create a Cost and Usage report in AWS.

Collection failed with Access Denied - List reports

Error code: AccessDeniedListReports

This error means that Cost Management is unable to list the object in the S3 bucketwhere the CUR is located. AWS IAM policy requires a permission on the bucket and onthe objects in the bucket. See Create a role and policy in AWS.

Collection failed with Access Denied - Download report

Error code: AccessDeniedDownloadReport

This error means that Cost Management is unable to access and download the CUR filesstored in the Amazon S3 bucket. Make sure that the AWS JSON policy attached to therole resembles the example shown at the bottom of the Create a role and policy in AWSsection.

Collection failed since we did not find the Cost and UsageReport

Error code: FailedToFindReport

This error means that Cost Management can't find the Cost and Usage report that wasdefined in the connector. Make sure it isn't deleted and that the AWS JSON policyattached to the role resembles the example shown at the bottom of the Create a roleand policy in AWS section.




Unable to create or verify connector due to Cost andUsage Report definitions mismatch

Error code: ReportIsNotValid

This error relates to the definition of AWS Cost and Usage Report, we require specificsettings for this report, see the requirements in Create a Cost and Usage report in AWS.

Internal error when creating connector

Error code: Create connector - Failed to create connector <ConnectorName>. Reason:
Internal error. Please verify that the correct AWS properties were provided.

This error can occur when your AWS connector and subscription are in differentmanagement groups. The AWS connector and subscription need to be in the samemanagement group.

Next steps

If you haven't already configured your Azure environment with managementgroups, see Initial setup of management groups.



How to optimize your cloud investmentwith Cost Management

Article
12/08/2022


Cost Management gives you the tools to plan for, analyze and reduce your spending tomaximize your cloud investment. This document provides you with a methodicalapproach to cost management and highlights the tools available to you as you addressyour organization's cost challenges. Azure makes it easy to build and deploy cloudsolutions. However, it's important that those solutions are optimized to minimize thecost to your organization. Following the principles outlined in this document and usingour tools will help to make sure your organization is prepared for success.

Methodology

Cost management is an organizational problem and should be an ongoing practice thatbegins before you spend money on cloud resources. To successfully implement costmanagement and optimize costs, your organization must:

Be prepared with the proper tools for success
Be accountable for costs
Take appropriate action to optimize spending


Three key groups, outlined below, must be aligned in your organization to make surethat you successfully manage costs.

Finance - People responsible for approving budget requests across theorganization based on cloud spending forecasts. They pay the corresponding billand assign costs to various teams to drive accountability.
Managers - Business decision makers in an organization that need to understandcloud spending to find the best spending results.
App teams - Engineers managing cloud resources on a day-to-day basis,
developing services to meet the organization's needs. These teams need theflexibility to deliver the most value in their defined budgets.


Key principles

Use the principles outlined below to position your organization for success in cloud costmanagement.


To learn more, watch the Cost Management setting up for success video. To watchother videos, visit the Cost Management YouTube channel.

https://www.youtube-nocookie.com/embed/dVuwITdSAZ4
Planning

Comprehensive, up-front planning allows you to tailor cloud usage to your specificbusiness requirements. Ask yourself:

What business problem am I solving?
What usage patterns do I expect from my resources?


Your answers will help you select the offerings that are right for you. They determine theinfrastructure to use and how it's used to maximize your Azure efficiency.

Visibility

When structured well, Cost Management helps you to inform people about the Azurecosts they're responsible for or for the money they spend. Azure has services designedto give you insight into where your money is spent. Take advantage of these tools. Theycan help you find resources that are underused, remove waste, and maximize cost-
saving opportunities.

Accountability

Attribute costs in your organization to make sure that people responsible areaccountable for their team's spending. To fully understand your organization's Azurespending, you should organize your resources to maximize insight into cost attribution.
Good organization helps to manage and reduce costs and hold people accountable forefficient spending in your organization.

Optimization

Act to reduce your spending. Make the most of it based on the findings gatheredthrough planning and increasing cost visibility. You might consider purchase andlicensing optimizations along with infrastructure deployment changes that are discussedin detail later in this document.

Iteration


Everyone in your organization must engage in the cost management lifecycle. Theyneed to stay involved on an ongoing basis to optimize costs. Be rigorous about thisiterative process and make it a key tenet of responsible cloud governance in yourorganization.

Key principles diagram showing visibility, accountability, and optimization


Plan with cost in mind

Before you deploy cloud resources, assess the following items:

The Azure offer that best meets your needs
The resources you plan to use
How much they might cost


Azure provides tools to assist you in the assessment process. The tools can give you agood idea of the investment required to enable your workloads. Then you can select thebest configuration for your situation.

Azure onboarding options

The first step in maximizing your experience within Cost Management is to investigateand decide which Azure offer is best for you. Think about how you plan to use Azure inthe future. Also consider how you want your billing model configured. Consider thefollowing questions when making your decision:

How long do I plan to use Azure? Am I testing, or do I plan to build longer-terminfrastructure?
How do I want to pay for Azure? Should I prepay for a reduced price or getinvoiced at the end of the month?


To learn more about the various options, visit How to buy Azure. Several of the mostcommon billing models are identified below.

Free


12 months of popular free services
$200 credit in your billing currency to explore services for 30 days
25+ services are always free


Pay as you go

No minimums or commitments
Competitive Pricing
Pay only for what you use
Cancel anytime


Enterprise Agreement

Options for up-front Azure Prepayment (previously called monetary commitment)
Access to reduced Azure pricing


Azure in CSP

CSP partners are the first point of contact for their customers’ needs and thecenter of the customer relationship
CSP partners provision new customers, order subscriptions, manage subscriptions,
and perform admin tasks on behalf of their customers
CSP partners bundle services with unique solutions or resell Azure while controllingthe pricing, terms and billing


Estimate the cost of your solution

Before you deploy any infrastructure, assess how much your solution will cost. Theassessment will help you create a budget for your organization for the workload, up-
front. Then you can use a budget over time to benchmark the validity of your initialestimation. And you can compare it with the actual cost of your deployed solution.

Azure pricing calculator

The Azure pricing calculator allows you to mix and match different combinations ofAzure services to see an estimate of the costs. You can implement your solution usingdifferent ways in Azure - each might influence your overall spending. Thinking earlyabout all of the infrastructure needs of your cloud deployment helps you use the toolmost effectively. It can help you get a solid estimate of your estimated spending inAzure.


For more information, see the Azure pricing calculator.

Azure Migrate

Azure Migrate is a service that assesses your organization's current workloads in on-
premises datacenters. It gives you insight into what you might need from an Azurereplacement solution. First, Migrate analyzes your on-premises machines to determinewhether migration is feasible. Then, it recommends VM sizing in Azure to maximizeperformance. Finally, it also creates a cost estimate for an Azure-based solution.

For more information, see Azure Migrate.

Analyze and manage your costs

Keep informed about how your organization's costs evolve over time. Use the followingtechniques to properly understand and manage your spending.

Organize resources to maximize cost insights andaccountability

A well-planned organizational structure for your Azure billing and resource hierarchieshelps to give you a good understanding and control over costs as you create your cloudinfrastructure. Watch the video Setting up entity hierarchies to gain a betterunderstanding of the organizational tools that are available and how to take advantageof them. To watch other videos, visit the Cost Management YouTube channel.

https://www.youtube-nocookie.com/embed/n3TLRaYJ1NY
As you evaluate and create a hierarchy that meets your needs, ask yourself the followingquestions.

Which billing hierarchy is available to me and what are the different scopes that I can use?

Identify the billing arrangement for your organization by determining your Azure offertype. The available scopes for each Azure billing arrangement are documented atUnderstand and work with scopes.

If I have multiple teams, how should I organize my subscriptions and resource groups?

Creating a subscription or resource group for each team is a common practice. They canhelp you to differentiate costs and hold teams accountable. However, costs are boundto the subscription or resource group.


If you already have teams with multiple subscriptions, consider grouping thesubscriptions into management groups to analyze the costs together. Managementgroups, subscriptions, and resource groups are all part of the Azure RBAC hierarchy. Usethem collectively for access control in your teams.

Resources can span across multiple scopes, especially when they're shared by multipleteams or workloads. Consider identifying resources with tags. Tags are discussed furtherin the next section.

Do I have Development and Production environments?

Consider creating Dev/Test subscriptions for your development environments to takeadvantage of reduced pricing. If the workloads span multiple teams or Azure scopes,
consider using tags to identify them.

Tag shared resources

Tags are a effective way to understand costs that span across multiple teams and Azurescopes. For example, you might have a resource like an email server that many teamsuse. You can put a shared resource, like the email server, in a subscription that'sdedicated to shared resources or put it in an existing subscription. If you put it in anexisting subscription, the subscription owner might not want its cost accruing to theirteam every month. For this example, you can use a tag to identify the resource as beingshared.

Similarly, you might also have web apps or environments, such as Test or Production,
that use resources across multiple subscriptions owned by different teams. To betterunderstand the full cost of the workloads, tag the resources that they use. When tagsare applied properly, you can apply them as a filter in cost analysis to better understandtrends.

After you plan for resource tagging, you can configure an Azure Policy definition toenforce tagging on resources. Watch the How to review tag policies with CostManagement video to understand the tools available that help you enforce scalableresource tagging. To watch other videos, visit the Cost Management YouTube channel.

https://www.youtube-nocookie.com/embed/nHQYcYGKuyw
Use cost analysis

Cost analysis allows you to analyze your organizational costs in-depth by slicing anddicing your costs using standard resource properties. Consider the following common


questions as a guide for your analysis. Answering these questions on a regular basis willhelp you stay more informed and enable more cost-conscious decisions.

Estimated costs for the current month – How much have I incurred so far thismonth? Will I stay under my budget?
Investigate anomalies – Do routine checks to make sure that costs stay within areasonable range of normal usage. What are the trends? Are there any outliers?
Invoice reconciliation - Is my latest invoiced cost more than the previous month?
How did spending habits change month-over-month?
Internal chargeback - Now that I know how much I'm being charged, how shouldthose charges be broken down for my organization?


For more information, see cost analysis.

Export billing data on a schedule

Do you need to import your billing data into an external system, like a dashboard orfinancial system? Set up automated exports to Azure Storage and avoid manuallydownloading files every month. You can then easily set up automatic integrations withother systems to keep your billing data in sync.

For more information about exporting billing data, see Create and manage exporteddata.

Create budgets

After you've identified and analyzed your spending patterns, it's important to beginsetting limits for yourself and your teams. Budgets give you the ability to set either acost or usage-based budget with many thresholds and alerts. Make sure to review thebudgets that you create regularly to see your budget burn-down progress and makechanges as needed. Budgets also allow you to configure an automation trigger when agiven budget threshold is reached. For example, you can configure your service to shutdown VMs. Or you can move your infrastructure to a different pricing tier in response toa budget trigger.

For more information, see Create budgets.

For more information about budget-based automation, see Budget Based Automation.

Act to optimize

Use the following ways to optimize spending.




Cut out waste

After you've deployed your infrastructure in Azure, it's important to make sure it is beingused. The easiest way to start saving immediately is to review your resources andremove any that aren't being used. From there, you should determine if your resourcesare being used as efficiently as possible.

Azure Advisor

Azure Advisor is a service that, among other things, identifies virtual machines with lowutilization from a CPU or network usage standpoint. From there, you can decide toeither shut down or resize the machine based on the estimated cost to continue runningthe machines. Advisor also provides recommendations for reserved instance purchases.
The recommendations are based on your last 30 days of virtual machine usage. Whenacted on, the recommendations can help you reduce your spending.

For more information, see Azure Advisor.

Size your VMs properly

VM sizing has a significant impact on your overall Azure cost. The number of VMsneeded in Azure might not equate to what you currently have deployed in an on-
premises datacenter. Make sure your choose the right size for the workloads that youplan to run.

For more information, see Azure IaaS: proper sizing and cost.

Use purchase discounts

Azure has many discounts that your organization should take advantage of to savemoney.

Azure savings plan for compute

Azure savings plan for compute is our most flexible savings plan. It lets you save up to65 percent on pay-as-you-go prices and applies to a broad range of compute servicesacross subscriptions, resource groups, management groups or entire Azure accounts.
You select an hourly compute commitment for a one-year or three-year term. Thelonger the commitment, the more savings you earn. You can pay monthly for noadditional cost, and Azure automatically applies the largest savings to your account.


For more information, see Azure savings plan for compute.

Azure Reservations

Azure Reservations allow you to prepay for one-year or three-years of virtual machine orSQL Database compute capacity. Pre-paying will allow you to get a discount on theresources you use. Azure reservations can significantly reduce your virtual machine orSQL database compute costs — up to 72 percent on pay-as-you-go prices with one-
year or three-year upfront commitment. Reservations provide a billing discount anddon't affect the runtime state of your virtual machines or SQL databases.

For more information, see What are Azure Reservations?.

Use Azure Hybrid Benefit

If you already have Windows Server or SQL Server licenses in your on-premisesdeployments, you can use the Azure Hybrid Benefit program to save in Azure. With theWindows Server benefit, each license covers the cost of the OS (up to two virtualmachines), and you only pay for base compute costs. You can use existing SQL Serverlicenses to save up to 55 percent on vCore-based SQL Database options. Optionsinclude SQL Server in Azure Virtual Machines and SQL Server Integration Services.

For more information, see Azure Hybrid Benefit savings calculator.

Other resources

Azure also has a service that allows you to build services that take advantage of surpluscapacity in Azure for reduced rates. For more information, see Use low priority VMs withBatch.

Next steps

If you're new to Cost Management, read What is Cost Management? to learn howit helps monitor and control Azure spending and to optimize resource use.



Understand Cost Management data

Article
02/24/2023


This article helps you better understand Azure cost and usage data that's included inCost Management. It explains how frequently data is processed, collected, shown, andclosed. You're billed for Azure usage monthly. Although billing cycles are monthlyperiods, cycle start and end dates vary by subscription type. How often CostManagement receives usage data varies based on different factors. Such factors includehow long it takes to process the data and how frequently Azure services emit usage tothe billing system.

Cost Management includes all usage and purchases, including reservations and third-
party offerings for Enterprise Agreement (EA) accounts. Microsoft Customer Agreementaccounts and individual subscriptions with pay-as-you-go rates only include usage fromAzure and Marketplace services. Support and other costs aren't included. Costs areestimated until an invoice is generated and don't factor in credits. Cost Managementalso includes costs associated with New Commerce products like Microsoft 365 andDynamics 365 that are invoiced along with Azure. Currently, only Partners can purchaseNew Commerce non-Azure products.

If you have a new subscription, you can't immediately use Cost Management features. Itmight take up to 48 hours before you can use all Cost Management features.

Supported Microsoft Azure offers

The following information shows the currently supported Microsoft Azure offers inCost Management. An Azure offer is the type of the Azure subscription that you have.
Data is available in Cost Management starting on the Data available from date.
Summarized data in cost analysis is only available for the last 13 months. If asubscription changes offers, costs before the offer change date aren't available.

CategoryOffer nameQuota IDOffer numberDataavailablefromAzureGovernmentAzureGovernmentEnterpriseEnterpriseAgreement_2014-
09-01MS-AZR-USGOV-
0017PMay2014¹


CategoryOffer nameQuota IDOffer numberDataavailablefromAzureGovernmentAzureGovernmentPay-As-You-
GoPayAsYouGo_2014-09-01MS-AZR-USGOV-
0003POctober2, 2018EnterpriseAgreement (EA)
EnterpriseDev/TestMSDNDevTest_2014-09-01MS-AZR-0148PMay2014¹
EnterpriseAgreement (EA)
MicrosoftAzureEnterpriseEnterpriseAgreement_2014-
09-01MS-AZR-0017PMay2014¹
MicrosoftCustomerAgreementMicrosoftAzure PlanEnterpriseAgreement_2014-
09-01N/AMarch2019²
MicrosoftCustomerAgreementMicrosoftAzure Planfor Dev/TestMSDNDevTest_2014-09-01N/AMarch2019²
MicrosoftCustomerAgreementsupported bypartnersMicrosoftAzure PlanCSP_2015-05-01,
CSP_MG_2017-12-01, andCSPDEVTEST_2018-05-01⁴N/AOctober2019MicrosoftDeveloperNetwork(MSDN)
MSDNPlatforms³
MSDN_2014-09-01MS-AZR-0062POctober2, 2018Pay-As-You-GoPay-As-You-
GoPayAsYouGo_2014-09-01MS-AZR-0003POctober2, 2018Pay-As-You-GoPay-As-You-
Go Dev/TestMSDNDevTest_2014-09-01MS-AZR-0023POctober2, 2018Pay-As-You-GoMicrosoftCloudPartnerProgramMPN_2014-09-01MS-AZR-0025POctober2, 2018Pay-As-You-GoFree Trial³FreeTrial_2014-09-01MS-AZR-0044POctober2, 2018Pay-As-You-GoAzure inOpen³
AzureInOpen_2014-09-01MS-AZR-0111POctober2, 2018


CategoryOffer nameQuota IDOffer numberDataavailablefromPay-As-You-GoAzure Pass³AzurePass_2014-09-01MS-AZR-0120P,
MS-AZR-0122P -
MS-AZR-0125P,
MS-AZR-0128P -
MS-AZR-0130POctober2, 2018Visual StudioVisual StudioEnterprise –
MPN³
MPN_2014-09-01MS-AZR-0029POctober2, 2018Visual StudioVisual StudioProfessional³
MSDN_2014-09-01MS-AZR-0059POctober2, 2018Visual StudioVisual StudioTestProfessional³
MSDNDevTest_2014-09-01MS-AZR-0060POctober2, 2018Visual StudioVisual StudioEnterprise³
MSDN_2014-09-01MS-AZR-0063POctober2, 2018Visual StudioVisual StudioEnterprise:
BizSpark³
MSDN_2014-09-01MS-AZR-0064POctober2, 2018

¹ For data before May 2014, visit the Azure Enterprise portal.

² Microsoft Customer Agreements started in March 2019 and don't have any historicaldata before this point.

³ Historical data for credit-based and pay-in-advance subscriptions might not match yourinvoice. See Historical data may not match invoice below.

⁴ Quota IDs are the same across Microsoft Customer Agreement and classic subscriptionoffers. Classic CSP subscriptions are not supported.

The following offers aren't supported yet:

CategoryOffer nameQuota IDOffernumberAzure GermanyAzure Germany Pay-As-You-GoPayAsYouGo_2014-09-
01MS-AZR-
DE-0003PCloud SolutionProvider (CSP)
Microsoft AzureCSP_2015-05-01MS-AZR-
0145P


CategoryOffer nameQuota IDOffernumberCloud SolutionProvider (CSP)
Azure Government CSPCSP_2015-05-01MS-AZR-
USGOV-
0145PCloud SolutionProvider (CSP)
Azure Germany in CSP forMicrosoft Cloud GermanyCSP_2015-05-01MS-AZR-
DE-0145PPay-As-You-GoAzure for Students StarterDreamSpark_2015-02-
01MS-AZR-
0144PPay-As-You-GoAzure for Students³AzureForStudents_2018-
01-01MS-AZR-
0170PPay-As-You-GoMicrosoft Azure SponsorshipSponsored_2016-01-01MS-AZR-
0036PSupport PlansStandard supportDefault_2014-09-01MS-AZR-
0041PSupport PlansProfessional Direct supportDefault_2014-09-01MS-AZR-
0042PSupport PlansDeveloper supportDefault_2014-09-01MS-AZR-
0043PSupport PlansGermany support planDefault_2014-09-01MS-AZR-
DE-0043PSupport PlansAzure Government StandardSupportDefault_2014-09-01MS-AZR-
USGOV-
0041PSupport PlansAzure Government Pro-DirectSupportDefault_2014-09-01MS-AZR-
USGOV-
0042PSupport PlansAzure Government DeveloperSupportDefault_2014-09-01MS-AZR-
USGOV-
0043P

Free trial to pay-as-you-go upgrade

For information about the availability of free tier services after you upgrade to pay-as-
you-go pricing from a Free trial, see the Azure free account FAQ.

Determine your offer type


If you don't see data for a subscription and you want to determine if your subscriptionfalls under the supported offers, you can validate that your subscription is supported. Tovalidate an Azure subscription is supported, sign in to the Azure portal. Then select AllServices in the left menu pane. In the list of services, select Subscriptions. In thesubscription list menu, select the subscription that you want to verify. Your subscriptionis shown on the Overview tab and you can see the Offer and Offer ID. The followingimage shows an example.

Example of the Subscription Overview tab showing Offer and Offer ID


Costs included in Cost Management

The following tables show data that's included or isn't in Cost Management. All costs areestimated until an invoice is generated. Costs shown don't include free and prepaidcredits.

IncludedNot includedAzure service usage⁵Support charges - For more information, seeInvoice terms explained.
Marketplace offering usage⁶Taxes - For more information, see Invoiceterms explained.
Marketplace purchases⁶Credits - For more information, see Invoiceterms explained.
Reservation purchases⁷Amortization of reservation purchases⁷


IncludedNot includedNew Commerce non-Azure products (Microsoft365 and Dynamics 365) ⁸

⁵ Azure service usage is based on reservation and negotiated prices.

⁶ Marketplace purchases aren't available for MSDN and Visual Studio offers at this time.

⁷ Reservation purchases are only available for Enterprise Agreement (EA) and MicrosoftCustomer Agreement accounts at this time.

⁸ Only available for specific offers.

How tags are used in cost and usage data

Cost Management receives tags as part of each usage record submitted by theindividual services. The following constraints apply to these tags:

Tags must be applied directly to resources and aren't implicitly inherited from theparent resource group.
Resource tags are only supported for resources deployed to resource groups.
Some deployed resources may not support tags or may not include tags in usagedata.
Resource tags are only included in usage data while the tag is applied – tags aren'tapplied to historical data.
Resource tags are only available in Cost Management after the data is refreshed.
Resource tags are only available in Cost Management when the resource isactive/running and producing usage records. For example, when a VM isdeallocated.
Managing tags requires contributor access to each resource or the tag contributorRBAC role.
Managing tag policies requires either owner or policy contributor access to amanagement group, subscription, or resource group.


If you don't see a specific tag in Cost Management, consider the following questions:

Was the tag applied directly to the resource?
Was the tag applied more than 24 hours ago?
Does the resource type support tags? Some resource types don't support tags inusage data. See Tags support for Azure resources for the full list of what issupported.



Here are a few tips for working with tags:

Plan ahead and define a tagging strategy that allows you to break down costs byorganization, application, environment, and so on.
Group and allocate costs using tag inheritance to apply resource group andsubscription tags to child resource usage records. If you were using Azure policy toenforce tagging for cost reporting, consider enabling the tag inheritance settingfor easier management and more flexibility.
Use the Tags API with either Query or UsageDetails to get all cost based on thecurrent tags.


Cost and usage data updates and retention

Cost and usage data is typically available in Cost Management within 8-24 hours. Keepthe following points in mind as you review costs:

Each Azure service (such as Storage, Compute, and SQL) emits usage at differentintervals – You might see data for some services sooner than others.
Estimated charges for the current billing period are updated six times per day.
Estimated charges for the current billing period can change as you incur moreusage.
Each update is cumulative and includes all the line items and information from theprevious update.
Azure finalizes or closes the current billing period up to 72 hours (three calendardays) after the billing period ends.
During the open month (uninvoiced) period, cost management data should beconsidered an estimate only. In some cases, charges may be latent in arriving tothe system after the usage actually occurred.


The following examples illustrate how billing periods could end:

Enterprise Agreement (EA) subscriptions – If the billing month ends on March 31,
estimated charges are updated up to 72 hours later. In this example, by midnight(UTC) April 4.
Pay-as-you-go subscriptions – If the billing month ends on May 15, then theestimated charges might get updated up to 72 hours later. In this example, bymidnight (UTC) May 19.


After your billing period ends and your invoice is created, it can take up to 48 hourslater for the usage data to get finalized. If the usage file isn't ready, you'll see a messageon the Invoices page in the Azure portal stating Your usage and charges file is notready. After the usage file is available, you can download it.


Once cost and usage data becomes available in Cost Management, it will be retained forat least seven years. Only the last 13 months are available from the portal. For historicaldata before 13 months, please use Exports or the Cost Details API.

Rerated data

Whether you use the Cost Management APIs, Power BI, or the Azure portal to retrievedata, expect the current billing period's charges to get rerated. Charges might changeuntil the invoice is closed.

Cost rounding

Costs shown in Cost Management are rounded. Costs returned by the Query API aren'trounded. For example:

Cost analysis in the portal - Charges are rounded using standard rounding rules:
values more than 0.5 and higher are rounded up, otherwise costs are roundeddown. Rounding occurs only when values are shown. Rounding doesn't happenduring data processing and aggregation. For example, cost analysis aggregatescosts as follows:
Charge 1: $0.004
Charge 2: $0.004
Aggregate charge rendered: 0.004 + 0.004 = 0.008. The charge shown is $0.01.



Query API - Charges are shown at eight decimal places and rounding doesn'toccur.


Historical data might not match invoice

Historical data for credit-based and pay-in-advance offers might not match your invoice.
Some Azure pay-as-you-go, MSDN, and Visual Studio offers can have Azure credits andadvanced payments applied to the invoice. The historical data shown in CostManagement is based on your estimated consumption charges only. Cost Managementhistorical data doesn't include payments and credits. Historical data shown for thefollowing offers may not match exactly with your invoice.

Azure for Students (MS-AZR-0170P)
Azure in Open (MS-AZR-0111P)
Azure Pass (MS-AZR-0120P, MS-AZR-0123P, MS-AZR-0125P, MS-AZR-0128P, MS-
AZR-0129P)
Free Trial (MS-AZR-0044P)



MSDN (MS-AZR-0062P)
Visual Studio (MS-AZR-0029P, MS-AZR-0059P, MS-AZR-0060P, MS-AZR-0063P,
MS-AZR-0064P)


Next steps

If you haven't already completed the first quickstart for Cost Management, read itat Start analyzing costs.



Understand and work with scopes

Article
05/10/2023


This article helps you understand billing and resource management scopes available inAzure and how to use the scopes in Cost Management and APIs.

Scopes

A scope is a node in the Azure resource hierarchy where Azure AD users access andmanage services. Most Azure resources are created and deployed into resource groups,
which are part of subscriptions. Microsoft also offers two hierarchies above Azuresubscriptions that have specialized roles to manage billing data:

Billing data, such as payments and invoices
Cloud services, such as cost and policy governance


Scopes are where you manage billing data, have roles specific to payments, viewinvoices, and conduct general account management. Billing and account roles aremanaged separately from roles used for resource management, which use Azure RBAC.
To clearly distinguish the intent of the separate scopes, including the access controldifferences, they're referred to as billing scopes and Azure RBAC scopes, respectively.

To learn more about scopes, watch the Cost Management setting up hierarchiesvideo. To watch other videos, visit the Cost Management YouTube channel.

https://www.youtube-nocookie.com/embed/n3TLRaYJ1NY
How Cost Management uses scopes

Cost Management works at all scopes above resources to allow organizations tomanage costs at the level at which they have access, whether that's the entire billingaccount or a single resource group. Although billing scopes differ based on yourMicrosoft agreement (subscription type), the Azure RBAC scopes don't.

Azure RBAC scopes

Azure supports three scopes for resource management. Each scope supports managingaccess and governance, including but not limited to, cost management.

Management groups - Hierarchical containers, used to organize Azuresubscriptions. A management group tree can support up to six levels of depth. The





limit doesn't include the Root level or the subscription level.

Resource type: Microsoft.Management/managementGroups


Subscriptions - Primary containers for Azure resources.

Resource type: Microsoft.Resources/subscriptions


Resource groups - Logical groupings of related resources for an Azure solutionthat share the same lifecycle. For example resources that are deployed and deletedtogether.

Resource type: Microsoft.Resources/subscriptions/resourceGroups




Management groups allow you to organize subscriptions into a hierarchy. For example,
you might create a logical organization hierarchy using management groups. Then, giveteams subscriptions for production and dev/test workloads. And then create resourcegroups in the subscriptions to manage each subsystem or component.

Creating an organizational hierarchy allows cost and policy compliance to roll uporganizationally. Then, each leader can view and analyze their current costs. And thenthey can create budgets to curb bad spending patterns and optimize costs with Advisorrecommendations at the lowest level.

Granting access to view costs and optionally manage cost configuration, such asbudgets and exports, is done on governance scopes using Azure RBAC. You use AzureRBAC to grant Azure AD users and groups access to do a predefined set of actions. Theactions are defined in a role on a specific scope and lower. For instance, a role assignedto a management group scope also grants the same permissions to nestedsubscriptions and resource groups.

Cost Management supports the following built-in roles for each of the following scopes:

Owner – Can view costs and manage everything, including cost configuration.
Contributor – Can view costs and manage everything, including cost configuration,
but excluding access control.
Reader – Can view everything, including cost data and configuration, but can'tmake any changes.
Cost Management Contributor – Can view costs, manage cost configuration, andview recommendations.
Cost Management Reader – Can view cost data, cost configuration, and viewrecommendations.


Cost Management Contributor is the recommended least-privilege role. The role allowspeople to create and manage budgets and exports to more effectively monitor and


report on costs. Cost Management Contributors might also require more roles tosupport complex cost management scenarios. Consider the following scenarios:

Reporting on resource usage – Cost Management shows cost in the Azure portal.
It includes usage as it pertains to cost in the full usage patterns. This report canalso show API and download charges, but you may also want to drill into detailedusage metrics in Azure Monitor to get a deeper understanding. Consider grantingMonitoring Reader on any scope where you also need to report detailed usagemetrics.
Act when budgets are exceeded – Cost Management Contributors also needaccess to create and manage action groups to automatically react to overages.
Consider granting Monitoring Contributor to a resource group that contains theaction group to use when budget thresholds are exceeded. Automating specificactions requires more roles for the specific services used, such as Automation andAzure Functions.
Schedule cost data export – Cost Management Contributors also need access tomanage storage accounts to schedule an export to copy data into a storageaccount. Consider granting Storage Account Contributor to a resource group thatcontains the storage account where cost data is exported.
Viewing cost-saving recommendations – Cost Management Readers and CostManagement Contributors have access to view cost recommendations by default.
However, access to act on the cost recommendations requires access to individualresources. Consider granting a service-specific role if you want to act on a cost-
based recommendation.


Note

Management groups aren't currently supported in Cost Management features forMicrosoft Customer Agreement subscriptions. The Cost Details API also doesn'tsupport management groups for either EA or MCA customers.

Management groups are only supported if they contain up to 3,000 EnterpriseAgreement (EA), Pay-as-you-go (PAYG), or Microsoft internal subscriptions. Managementgroups with more than 3,000 subscriptions or subscriptions with other offer types, likeMicrosoft Customer Agreement or Azure Active Directory subscriptions, can't view costs.

If you have a mix of subscriptions, move the unsupported subscriptions to a separatearm of the management group hierarchy to enable Cost Management for the supportedsubscriptions. As an example, create two management groups under the rootmanagement group: Azure AD and My Org. Move your Azure AD subscription to the


Azure AD management group and then view and manage costs using the My Orgmanagement group.

Feature behavior for each role

The following table shows how Cost Management features are used by each role. Thefollowing behavior is applicable to all Azure RBAC scopes.

Feature/RoleOwnerContributorReaderCostManagementReaderCostManagementContributorCost Analysis /
Forecast /
Query / CostDetails APIRead onlyRead onlyRead onlyRead onlyRead onlyShared viewsCreate, Read,
Update,
DeleteCreate, Read,
Update,
DeleteRead onlyRead onlyCreate, Read,
Update,
DeleteBudgetsCreate, Read,
Update,
DeleteCreate, Read,
Update,
DeleteRead onlyRead onlyCreate, Read,
Update,
DeleteAlertsRead, UpdateRead, UpdateRead onlyRead onlyRead, UpdateExportsCreate, Read,
Update,
DeleteCreate, Read,
Update,
DeleteRead onlyRead onlyCreate, Read,
Update,
DeleteCost AllocationrulesFeature notavailable forAzure RBACscopesFeature notavailable forAzure RBACscopesFeature notavailable forAzure RBACscopesFeature notavailable forAzure RBACscopesFeature notavailable forAzure RBACscopes

Enterprise Agreement scopes

Enterprise Agreement (EA) billing accounts, also called enrollments, have the followingscopes:

Billing account - Represents an EA enrollment. Invoices are generated at thisscope. Purchases that aren't usage-based, such as Marketplace and reservations,
are only available at this scope. They aren't represented in departments orenrollment accounts. Reservation usage, along with all other usage, is applied toindividual resources. Usage rolls-up to subscriptions within the billing account. To





see reservation costs broken down to each resource, switch to view Amortizedcost in cost analysis.

Resource type: Microsoft.Billing/billingAccounts (accountType = Enrollment)


Department - Optional grouping of enrollment accounts.

Resource type: Billing/billingAccounts/departments


Enrollment account - Represents a single account owner. Doesn't support grantingaccess to multiple people.

Resource type: Microsoft.Billing/billingAccounts/enrollmentAccounts




Although governance scopes are bound to a single directory, EA billing scopes aren't.
An EA billing account may have subscriptions across any number of Azure ADdirectories.

EA billing scopes support the following roles:

Enterprise admin – Can manage billing account settings and access, can view allcosts, and can manage cost configuration. For example, budgets and exports.
Enterprise read-only user – Can view billing account settings, cost data, and costconfiguration. Can manage budgets and exports.
Department admin – Can manage department settings, such as cost center, andcan access, view all costs, and manage cost configuration. For example, budgetsand exports. The DA view charges billing account setting must be enabled fordepartment admins and read-only users to see costs. If DA view charges option isdisabled, department users can't see costs at any level, even if they're an accountor subscription owner.
Department read-only user – Can view department settings, cost data, and costconfiguration. Can manage budgets and exports. If DA view charges option isdisabled, department users can't see costs at any level, even if they're an accountor subscription owner.
Account owner – Can manage enrollment account settings (such as cost center),
view all costs, and manage cost configuration (such as budgets and exports) forthe enrollment account. The AO view charges billing account setting must beenabled for account owners and Azure RBAC users to see costs.


EA billing account users don't have direct access to invoices. Invoices are available froman external volume licensing system.

Azure subscriptions are nested under enrollment accounts. Billing users have access tocost data for the subscriptions and resource groups that are under their respective


scopes. They don't have access to see or manage resources in the Azure portal. Userscan view costs by navigating to Cost Management + Billing in the Azure portal list ofservices. Then, they can filter costs to the specific subscriptions and resource groupsthey need to report on.

Billing users don't have access to management groups because they don't fall explicitlyunder a specific billing account. Access must be granted to management groupsexplicitly. Management groups roll-up costs from all nested subscriptions. However,
they only include usage-based purchases. They don't include purchases such asreservations and third-party Marketplace offerings. To view these costs, use the EAbilling account.

Feature behavior for each role

The following tables show how Cost Management features can be utilized by each role.

Enrollment scope

Feature/RoleEnterprise AdminEnterprise Read-OnlyCost Analysis / Forecast / Query / CostDetails APIRead onlyRead onlyShared ViewsCreate, Read, Update,
DeleteCreate, Read, Update,
DeleteBudgets/Reservation utilization alertsCreate, Read, Update,
DeleteCreate, Read, Update,
DeleteAlertsRead, UpdateRead, UpdateExportsCreate, Read, Update,
DeleteCreate, Read, Update,
DeleteCost Allocation RulesCreate, Read, Update,
DeleteCreate, Read, Update,
Delete

Department scope

Feature/RoleEnterpriseAdminEnterpriseRead OnlyDepartment Admin(only if "DA viewcharges" setting ison)
Department ReadOnly (only if "DAview charges"
setting is on)


Feature/RoleEnterpriseAdminEnterpriseRead OnlyDepartment Admin(only if "DA viewcharges" setting ison)
Department ReadOnly (only if "DAview charges"
setting is on)
Cost Analysis /
Forecast /
Query / CostDetails APIRead onlyRead onlyRead onlyRead onlyShared ViewsCreate, Read,
Update,
DeleteCreate, Read,
Update,
DeleteCreate, Read,
Update, DeleteCreate, Read, Update,
DeleteBudgetsCreate, Read,
Update,
DeleteCreate, Read,
Update,
DeleteCreate, Read,
Update, DeleteCreate, Read, Update,
DeleteAlertsRead, UpdateRead, UpdateRead, UpdateRead, UpdateExportsCreate, Read,
Update,
DeleteCreate, Read,
Update,
DeleteCreate, Read,
Update, DeleteCreate, Read, Update,
DeleteCost AllocationRulesN/A – onlyapplicable toBillingAccount scopeN/A – onlyapplicable toBillingAccount scopeN/A – onlyapplicable to BillingAccount scopeN/A – only applicableto Billing Accountscope

Account scope

Feature/RoleEnterpriseAdminEnterpriseRead OnlyDepartmentAdmin (onlyif "DA viewcharges" ison)
DepartmentRead Only (onlyif "DA viewcharges" settingis on)
AccountOwner (only if"AO viewcharges"
setting is on)
CostAnalysis /
Forecast /
Query / CostDetails APIRead onlyRead onlyRead onlyRead onlyRead onlySharedViewsCreate,
Read,
Update,
DeleteCreate,
Read,
Update,
DeleteCreate, Read,
Update,
DeleteCreate, Read,
Update, DeleteCreate, Read,
Update, Delete


Feature/RoleEnterpriseAdminEnterpriseRead OnlyDepartmentAdmin (onlyif "DA viewcharges" ison)
DepartmentRead Only (onlyif "DA viewcharges" settingis on)
AccountOwner (only if"AO viewcharges"
setting is on)
BudgetsCreate,
Read,
Update,
DeleteCreate,
Read,
Update,
DeleteCreate, Read,
Update,
DeleteCreate, Read,
Update, DeleteCreate, Read,
Update, DeleteAlertsRead,
UpdateRead,
UpdateRead, UpdateRead, UpdateRead, UpdateExportsCreate,
Read,
Update,
DeleteCreate,
Read,
Update,
DeleteCreate, Read,
Update,
DeleteCreate, Read,
Update, DeleteCreate, Read,
Update, DeleteCostAllocationRulesN/A – onlyapplicableto BillingAccountscopeN/A – onlyapplicableto BillingAccountscopeN/A – onlyapplicable toBillingAccountscopeN/A – onlyapplicable toBilling AccountscopeN/A – onlyapplicable toBilling Accountscope

Individual agreement scopes

Azure subscriptions created from individual offers like pay-as-you-go and related typeslike Free Trial and dev/test offers, don't have an explicit billing account scope. Instead,
each subscription has an account owner or account admin, like the EA account owner.

Billing account -
Represents a single account owner for one or more Azuresubscriptions. It doesn't currently support granting access to multiple people oraccess to aggregated cost views.

Resource type: Not applicable




Individual Azure subscription account admins can view and manage billing data, such asinvoices and payments, from the Azure portal > Subscriptions > select a subscription.

Unlike EA, individual Azure subscription account admins can see their invoices in theAzure portal. Keep in mind that Cost Management Reader and Cost ManagementContributor roles don't provide access to invoices. For more information, see How togrant access to invoices.




Microsoft Customer Agreement scopes

Microsoft Customer Agreement billing accounts have the following scopes:

Billing account - Represents a customer agreement for multiple Microsoftproducts and services. Customer Agreement billing accounts aren't functionally thesame as EA enrollments. EA enrollments are more closely aligned to billing profiles.

Resource type: Microsoft.Billing/billingAccounts (accountType = Organization)


Billing profile - Defines the subscriptions that are included in an invoice. Billingprofiles are the functional equivalent of an EA enrollment, since that's the scopethat invoices are generated at. Similarly, purchases that aren't usage-based (suchas Marketplace and reservations) are only available at this scope. They aren'tincluded in invoice sections.

Resource type: Microsoft.Billing/billingAccounts/billingProfiles


Invoice section - Represents a group of subscriptions in an invoice or billingprofile. Invoice sections are like departments—multiple people can have access toan invoice section.

Resource type: Microsoft.Billing/billingAccounts/invoiceSections


Customer - Represents a group of subscriptions that are associated to a specificcustomer that is onboarded to a Microsoft Customer Agreement by partner. Thisscope is specific to Cloud Solution Providers (CSP).




Unlike EA billing scopes, Customer Agreement billing accounts are managed by a singledirectory. Microsoft Customer Agreement billing accounts can have linked subscriptionsthat could be in different Azure AD directories.

Customer Agreement billing scopes don't apply to partners. Partner roles andpermissions are documented at Assign users roles and permissions.

Customer Agreement billing scopes support the following roles:

Owner – Can manage billing settings and access, view all costs, and manage costconfiguration. For example, budgets and exports. In function, this CustomerAgreement billing scope is the same as the Cost Management Contributor Azurerole.
Contributor – Can manage billing settings except access, view all costs, andmanage cost configuration. For example, budgets and exports. In function, this



Customer Agreement billing scope is the same as the Cost ManagementContributor Azure role.
Reader – Can view billing settings, cost data, and cost configuration. Can managebudgets and exports.
Invoice manager – Can view and pay invoices and can view cost data andconfiguration. Can manage budgets and exports.
Azure subscription creator – Can create Azure subscriptions, view costs, andmanage cost configuration. For example, budgets and exports. In function, thisCustomer Agreement billing scope is the same as the EA enrollment accountowner role.


Azure subscriptions are nested under invoice sections, like how they are under EAenrollment accounts. Billing users have access to cost data for the subscriptions andresource groups that are under their respective scopes. However, they don't have accessto see or manage resources in the Azure portal. Billing users can view costs bynavigating to Cost Management + Billing in the Azure portal list of services. Then, filtercosts to the specific subscriptions and resource groups they need to report on.

Note

Management group scopes aren't supported for Microsoft Customer Agreementaccounts at this time.

Billing users don't have access to management groups because they don't explicitly fallunder the billing account. However, when management groups are enabled for theorganization, all subscription costs are rolled-up to the billing account and to the rootmanagement group because they're both constrained to a single directory.
Management groups only include purchases that are usage-based. Purchases likereservations and third-party Marketplace offerings aren't included in managementgroups. So, the billing account and root management group may report different totals.
To view these costs, use the billing account or respective billing profile.

Feature behavior for each role

The following tables show how Cost Management features can be utilized by each role.

Billing account

Feature/RoleOwnerContributorReader


Feature/RoleOwnerContributorReaderCost Analysis / Forecast / Query/ Cost Details APIRead onlyRead onlyRead onlyShared ViewsCreate, Read,
Update, DeleteCreate, Read,
Update, DeleteCreate, Read,
Update, DeleteBudgetsCreate, Read,
Update, DeleteCreate, Read,
Update, DeleteCreate, Read,
Update, DeleteAlertsRead, UpdateRead, UpdateRead, UpdateExportsCreate, Read,
Update, DeleteCreate, Read,
Update, DeleteCreate, Read,
Update, DeleteCost Allocation RulesCreate, Read,
Update, DeleteCreate, Read,
Update, DeleteRead only

Billing profile

Feature/RoleOwnerContributorReaderInvoiceManagerCost Analysis /
Forecast / Query /
Cost Details APIRead onlyRead onlyRead onlyRead onlyShared ViewsCreate, Read,
Update, DeleteCreate, Read,
Update, DeleteCreate, Read,
Update, DeleteCreate, Read,
Update, DeleteBudgets/Reservationutilization alertsCreate, Read,
Update, DeleteCreate, Read,
Update, DeleteCreate, Read,
Update, DeleteCreate, Read,
Update, DeleteAlertsRead, UpdateRead, UpdateRead, UpdateCreate, Read,
Update, DeleteExportsCreate, Read,
Update, DeleteCreate, Read,
Update, DeleteCreate, Read,
Update, DeleteRead, UpdateCost AllocationRulesN/A – onlyapplicable toBilling AccountN/A – onlyapplicable toBilling AccountN/A – onlyapplicable toBilling AccountN/A – onlyapplicable toBilling Account

Invoice section


Feature/RoleFeature/RoleOwnerOwnerContributorContributorReaderReaderAzureSubscriptionCreatorAzureSubscriptionCreatorCost Analysis /
Forecast / Query /
Cost Details APIRead onlyRead onlyRead onlyRead onlyShared ViewsCreate, Read,
Update, DeleteCreate, Read,
Update, DeleteCreate, Read,
Update, DeleteCreate, Read,
Update, DeleteBudgetsCreate, Read,
Update, DeleteCreate, Read,
Update, DeleteCreate, Read,
Update, DeleteCreate, Read,
Update, DeleteAlertsRead, UpdateRead, UpdateRead, UpdateRead, UpdateExportsCreate, Read,
Update, DeleteCreate, Read,
Update, DeleteCreate, Read,
Update, DeleteCreate, Read,
Update, DeleteCost AllocationRulesN/A – onlyapplicable toBilling AccountN/A – onlyapplicable toBilling AccountN/A – onlyapplicable toBilling AccountN/A – onlyapplicable toBilling Account

AWS scopes

After AWS integration is complete, see setup and configure AWS integration. Thefollowing scopes are available:

External Billing account - Represents a customer agreement with a third-partyvendor. It's similar to the EA billing account.

Resource type: Microsoft.CostManagement/externalBillingAccounts


External subscription - Represents a customer operational account with a third-
party vendor. It's similar to an Azure subscription.

Resource type: Microsoft.CostManagement/externalSubscriptions




Cloud Solution Provider (CSP) scopes

The following scopes are supported for CSPs with customers on a Microsoft CustomerAgreement:

Billing account - Represents a customer agreement for multiple Microsoftproducts and services. Customer Agreement billing accounts aren't functionally thesame as EA enrollments. EA enrollments are more closely aligned to billing profiles.





Resource type: Microsoft.Billing/billingAccounts (accountType = Organization)


Billing profile - Defines the subscriptions that are included in an invoice. Billingprofiles are the functional equivalent of an EA enrollment, since that's the scopethat invoices are generated at. Similarly, purchases that aren't usage-based (suchas Marketplace and reservations) are only available at this scope.

Resource type: Microsoft.Billing/billingAccounts/billingProfiles


Customer - Represents a group of subscriptions that are associated to a specificcustomer that is onboarded to a Microsoft Customer Agreement by a partner.




Only the users with Global admin and Admin agent roles can manage and view costs forbilling accounts, billing profiles, and customers directly in the partner's Azure tenant. Formore information about partner center roles, see Assign users roles and permissions.

Cost Management only supports CSP partner customers if the customers have aMicrosoft Customer Agreement. For CSP supported customers who aren't yet on aMicrosoft Customer Agreement, see Partner Center.

Management groups in CSP scopes aren't supported by Cost Management. If you havea CSP subscription and you set the scope to a management group in cost analysis, anerror similar the following one is shown:

Management group <ManagementGroupName> does not have any valid subscriptions

Switch between scopes in Cost Management

All Cost Management views in the Azure portal include a Scope selection pill at the top-
left of the view. Use it to quickly change scope. Select the Scope pill to open the scopepicker. It shows billing accounts, the root management group, and any subscriptionsthat aren't nested under the root management group. To select a scope, select thebackground to highlight it, and then select Select at the bottom. To drill-in to nestedscopes, like resource groups in a subscription, select the scope name link. To select theparent scope at any nested level, select Select this <scope> at the top of the scopepicker.

View historical billing scopes after migration or contractchange

If you migrated from an EA agreement to a Microsoft Customer Agreement, you stillhave access to your old billing scope.


1. Sign in to the Azure portal.
2. Search for and then select Cost Management + Billing.
3. Select Billing Scope to view your new and previous billing accounts.


Identify the resource ID for a scope

When you work with Cost Management APIs, knowing the scope is critical. Use thefollowing information to build the proper scope URI for Cost Management APIs.

Billing accounts

1. Open the Azure portal and then navigate to Cost Management + Billing in the listof services.
2. Select Properties in the billing account menu.
3. Copy the billing account ID.
4. Your scope is:
"/providers/Microsoft.Billing/billingAccounts/{billingAccountId}"


Billing profiles

1. Open the Azure portal and then navigate to Cost Management + Billing in the listof services.
2. Select Billing profiles in the billing account menu.
3. Select the name of the billing profile.
4. Select Properties in the billing profile menu.
5. Copy the billing account and billing profile IDs.
6. Your scope is:
"/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}"


Invoice sections

1. Open the Azure portal and then navigate to Cost Management + Billing in the listof services.
2. Select Invoice sections in the billing account menu.
3. Select the name of the invoice section.
4. Select Properties in the invoice section menu.
5. Copy the billing account and invoice section IDs.
6. Your scope is:
"/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSectio



ns/{invoiceSectionId}"


EA departments

1. Open the Azure portal and then navigate to Cost Management + Billing in the listof services.
2. Select Departments in the billing account menu.
3. Select the name of the department.
4. Select Properties in the department menu.
5. Copy the billing account and department IDs.
6. Your scope is:
"/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{
departmentId}"


EA enrollment account

1. Open the Azure portal and navigate to Cost Management + Billing in the list ofservices.
2. Select Enrollment accounts in the billing account menu.
3. Select the name of the enrollment account.
4. Select Properties in the enrollment account menu.
5. Copy the billing account and enrollment account IDs.
6. Your scope is:
"/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}"


Management group

1. Open the Azure portal and navigate to Management groups in the list of services.
2. Navigate to the management group.
3. Copy the management group ID from the table.
4. Your scope is: "/providers/Microsoft.Management/managementGroups/{id}"


Subscription

1. Open the Azure portal and navigate to Subscriptions in the list of services.
2. Copy the subscription ID from the table.
3. Your scope is: "/subscriptions/{id}"





Resource groups

1. Open the Azure portal and navigate to Resource groups in the list of services.
2. Select the name of the resource group.
3. Select Properties in the resource group menu.
4. Copy the resource ID field value.
5. Your scope is: "/subscriptions/{id}/resourceGroups/{name}"


Cost Management is currently supported in Azure Global withhttps://management.azure.com and Azure Government withhttps://management.usgovcloudapi.net. For more information about Azure Government,
see Azure Global and Government API endpoints.

Next steps

If you haven't already completed the first quickstart for Cost Management, read itat Start analyzing costs.



Get started with Cost Management forpartners

Article
04/05/2023


Cost Management is natively available for direct partners who have onboarded theircustomers to a Microsoft Customer Agreement and have purchased an Azure Plan. Thisarticle explains how partners use Cost Management features to view costs forsubscriptions in the Azure Plan. It also describes how partners enable Cost Managementaccess at retail rates for their customers.

For direct partners and indirect providers, the global admin and admin agents, canaccess Cost Management in the partner tenant and manage costs at invoiced prices.

Resellers and customers can access Cost Management in the customer tenant and viewconsumption costs for each individual subscription, where costs are computed andshown at retail rates. However, they must have Azure RBAC access to the subscription inthe customer tenant to view costs. The cost visibility policy must be enabled by theprovider for the customer tenant.

Customers can use Cost Management features when enabled by their CSP partner.

CSP partners use Cost Management to:

Understand invoiced costs and associate the costs to the customer, subscriptions,
resource groups, and services.
Get an intuitive view of Azure costs in cost analysis with capabilities to analyzecosts by customer, subscription, resource group, resource, meter, service, andmany other dimensions.
View resource costs that have Partner Earned Credit (PEC) applied in Cost Analysis.
Set up notifications and automation using programmatic budgets and alerts whencosts exceed budgets.
Enable the Azure Resource Manager policy that provides customer access to CostManagement data. Customers can then view consumption cost data for theirsubscriptions using pay-as-you-go rates.
Export their cost and usage data to a storage blob with a pay-as-you-gosubscription.


Here's an example showing costs for all customers.


Example showing costs for all customers


Here's an example showing costs for a single customer.

Example showing costs for a single customer


All functionality available in Cost Management is also available with REST APIs. Use theAPIs to automate cost management tasks.

Prerequisites


As a partner, Cost Management is natively available only for subscriptions that are onthe Azure plan.

To enable Cost Management in the Azure portal, you must have confirmed customeracceptance of the Microsoft Customer Agreement (on behalf of the customer) andtransitioned the customer to the Azure Plan. Only the costs for subscriptions that aretransitioned to the Azure plan are available in Cost Management.

Cost Management requires read access to your billing account or subscription.

For more information about enabling and assigning access to Cost Management for abilling account, see Assign users roles and permissions. The Global admin and Adminagent roles can manage costs for a billing account.

To access Cost Management at the subscription scope, any user with Azure RBAC accessto a subscription can view costs at retail (pay-as-you-go) rates. However the costvisibility policy for the customer tenant must be enabled. To view a full list of supportedaccount types, see Understand Cost Management data.

When transferring existing billing agreements to a new partner, cost managementcapabilities are only available for the current billing relationship with the partner.
Historical costs before the transfer to the new partner don't move to the new billingaccount. However, the cost history does remain with the original associated billingaccount.

How Cost Management uses scopes

Scopes are where you manage billing data, have roles specific to payments, viewinvoices, and conduct general account management. Billing and account roles aremanaged separately from scopes used for resource management, which use AzureRBAC. To clearly distinguish the intent of the separate scopes, including the accesscontrol differences, they are referred to as billing scopes and Azure RBAC scopes,
respectively.

To understand billing scopes and Azure RBAC scopes and how cost management workswith scopes, see Understand and work with scopes.

Manage costs with partner tenant billingscopes

After you've onboarded your customers to a Microsoft Customer Agreement, thefollowing billing scopes are available in your tenant. Use the scopes to manage costs in


Cost Management.

Billing account scope

Use the billing account scope to view pre-tax costs across all your customers and billingprofiles. Invoice costs are only shown for customer's consumption-based products onthe Microsoft Customer Agreement. However, invoice costs are shown for purchased-
based products for customers on both the Microsoft Customer Agreement and the CSPoffer. Currently, the default currency to view costs in the scope is US dollars. Budgets setfor the scope are also in USD.

Regardless of different billed currencies, partners use Billing account scope to setbudgets and manage costs in USD across their customers, subscriptions, resources, andresource groups.

Partners also filter costs in a specific billing currency across customers in the costanalysis view. Select the Actual cost list to view costs in supported billing currencies.

Example showing Actual cost selection for currencies



Use the amortized cost view in billing scopes to view reserved instance amortized costsacross a reservation term.

Billing profile scope

Use the billing profile scope to view pre-tax costs in the billing currency across all yourcustomers for all products and subscriptions included in an invoice. You can filter costsin a billing profile for a specific invoice using the InvoiceID filter. The filter shows theconsumption and product purchase costs for a specific invoice. You can also filter thecosts for a specific customer on the invoice to see pre-tax costs.

After you onboard customers to a Microsoft Customer Agreement, you receive aninvoice that includes all charges for all products (consumption, purchases, andentitlements) for these customers on the Microsoft Customer Agreement. When billed inthe same currency, these invoices also include the charges for entitlement andpurchased products such as SaaS, Azure Marketplace, and reservations for customerswho are still in the classic CSP offer no on the Azure plan.

To help reconcile charges against the customer invoice, the billing profile scope enablesyou to see all costs that accrue for an invoice for your customers. Like the invoice, thescope shows costs for every customer in the new Microsoft Customer Agreement. Thescope also shows every charge for customer entitlement products still in the current CSPoffer.

The billing profile and billing account scopes are the only applicable scopes that showcharges for entitlement and purchase-based products like Azure Marketplace andreservation purchases.

Billing profiles define the subscriptions that are included in an invoice. Billing profiles arethe functional equivalent of an enterprise agreement enrollment. A billing profile is thescope where invoices are generated.

Currently, the billing currency is the default currency when viewing costs in the billingprofile scope. Budgets set at the billing profile scope are in the billing currency.

Partners can use the scope to reconcile to invoices. And, they use the scope to setbudgets in the billing currency for the following items:

Specific filtered invoice
Customer
Subscription
Resource group
Resource



Azure service
Meter
ResellerMPNID


Customer scope

Partners use the scope to manage costs associated to customers that are onboarded tothe Microsoft Customer Agreement. The scope allows partners to view pre-tax costs fora specific customer in a billing currency. You can also filter the pre-tax costs for aspecific subscription, resource group, or resource.

The customer scope doesn't include customers who are on the current CSP offer. Thescope only includes customers who have a Microsoft Customer Agreement.

Entitlement costs, not Azure usage, for current CSP offer customers are available at thebilling account and billing profile scopes when you apply the customer filter. Thebudgets set at this scope are in the billing currency.

To view costs at the customer scope, in the partner tenant navigate to Cost analysis,
select the scope picker and then select the specific customer in the list of scopes. Here'san example for the Contoso Services customer.

Screenshot showing selecting a customer scope.


Partner access to billing scopes in CostManagement

Only the users with Global admin and Admin agent roles can manage and view costsfor billing accounts, billing profiles, and customers directly in the partner's Azure tenant.
For more information about partner center roles, see Assign users roles and permissions.




Enable Cost Management for customer tenantsubscriptions

Partners may enable access to Cost Management after customers are onboarded to aMicrosoft Customer Agreement. Then partners can then enable a policy allowingcustomers to view their costs for Azure consumed services computed at pay-as-you-goretail rates. Costs are shown in the customer's billing currency for their consumed usageat Azure RBAC subscription and resource groups scopes.

When the policy for cost visibility is enabled by the partner, any user with AzureResource Manager access to the subscription can manage and analyze costs at pay-as-
you-go rates. Effectively, resellers and customers that have the appropriate Azure RBACaccess to the Azure subscriptions can view cost.

Regardless of the policy, global admins and admin agents of the provider can viewsubscription costs if they have access to the subscription and resource group.

Enable the policy to view Azure usage charges

You need to be a member of the admin agent group to view and update the policy. Usethe following information to enable the policy allowing customers to view Azure usagecharges.

In the Azure portal, sign in to the partner tenant and select Cost Management + Billing.
Select the relevant billing scope in the Billing Scope area, and then select Customers.
The list of customers is associated with the billing account. If you mistakenly sign in tothe customer tenant, you won't see the Customers list.

In the list of customers, select the customer that you want to allow to view costs.

Select customers in Cost Management



Under Settings, select Policies.

The current cost visibility policy is shown for Azure Usage charges associated to thesubscriptions for the selected customer.
Policy to allow customers to view pay-as-you-go charges


When the policy is set to No, Cost Management isn't available for subscription usersassociated to the customer. Unless enabled by a partner, the cost visibility policy isdisabled by default for all subscription users.

When the cost policy is set to Yes, subscription users associated to the customer tenantcan see usage charges at pay-as-you go rates.

When the cost visibility policy is enabled, all services that have subscription usage showcosts at pay-as-you-go rates. Reservation usage appears with zero charges for actualand amortized costs. Purchases and entitlements are not associated to a specificsubscription. So, purchases aren't displayed at the subscription scope. The globaladmin/admin agent of a direct partner or an indirect provider can also use the UpdateCustomer API to set each customer's cost visibility policy at scale.

View subscription costs in the customer tenant

To view costs for a subscription, open Cost Management in the customer's Azuretenant. Select Cost analysis and then the required subscription to start reviewing costs.
You can view consumption costs for each subscription individually in the customertenant.


View cost analysis as a customer 


Cost analysis, budgets, and alerts are available for the subscription and resource groupAzure RBAC scopes at pay-as-you-go rate-based costs.

Amortized views and actual costs for reserved instances in the Azure RBAC scopes showzero charges. Purchase costs for entitlements such as Reserved instances andMarketplace fees are only shown in billing scopes in the partner's tenant where thepurchases were made.

The retail rates used to compute costs shown in the view are the same prices shown inthe Azure Pricing Calculator for all customers. Costs shown don't include any discountsor credits that the partner may have like Partner Earned Credits, Tier Discounts, andGlobal Service discounts.

Analyze costs in cost analysis

Partners with access to billing scopes in the partner tenant can explore and analyzeinvoiced costs in cost analysis across customers for a specific customer or for an invoice.
In cost analysis, you can also save views.

Azure RBAC users with access to the subscription in the customer tenant can alsoanalyze retail costs for subscriptions in the customer tenant, save views, and export datato CSV and PNG files.

You can use filter and group by features in cost analysis to analyze costs by multiplefields. Partner-specific fields are shown in the next section.

Data fields

The following data fields are found in usage detail files and Cost Management APIs.
Where available, Partner Center equivalent information is shown. For the following bold


fields, partners can use filter and group by features in cost analysis to analyze costs bymultiple fields. Bold fields apply only to Microsoft Customer Agreements supported bypartners.

Field nameDescriptionPartner Center equivalentinvoiceIdInvoice ID shown on the invoicefor the specific transaction.
Invoice number where thetransaction is shown.
previousInvoiceIDReference to an original invoicethere is a refund (negative cost).
Populated only when there is arefund.
N/AbillingAccountNameName of the billing accountrepresenting the partner. Itaccrues all costs across thecustomers who have onboardedto a Microsoft customeragreement and the CSPcustomers that have madeentitlement purchases like SaaS,
Azure Marketplace, andreservations.
N/AbillingAccountIDIdentifier for the billing accountrepresenting the partner.
MCAPI Partner CommerceRoot ID. Used in a request,
but not included in aresponse.
billingProfileIDIdentifier for the billing profilethat groups costs acrossinvoices in a single billingcurrency across the customerswho have onboarded to aMicrosoft customer agreementand the CSP customers thathave made entitlementpurchases like SaaS, AzureMarketplace, and reservations.
MCAPI Partner Billing GroupID. Used in a request, but notincluded in a response.


Field nameDescriptionPartner Center equivalentbillingProfileNameName of the billing profile thatgroups costs across invoices ina single billing currency acrossthe customers who haveonboarded to a Microsoftcustomer agreement and theCSP customers that have madeentitlement purchases like SaaS,
Azure Marketplace, andreservations.
N/AinvoiceSectionNameName of the project that isbeing charged in the invoice.
Not applicable for MicrosoftCustomer Agreementsonboarded by partners.
N/AinvoiceSectionIDIdentifier of the project that isbeing charged in the invoice.
Not applicable for MicrosoftCustomer Agreementsonboarded by partners.
N/ACustomerTenantIDIdentifier of the Azure ActiveDirectory tenant of thecustomer's subscription.
Customer's organizational ID- the customer's Azure ActiveDirectory TenantID.
CustomerNameName of the Azure ActiveDirectory tenant for thecustomer's subscription.
Customer's organizationname, as shown in thePartner Center. Important forreconciling the invoice withyour system information.
CustomerTenantDomainNameDomain name for the AzureActive Directory tenant of thecustomer's subscription.
Customer Azure ActiveDirectory tenant domain.
PartnerTenantIDIdentifier for the partner's AzureActive Directory tenant.
Partner Azure ActiveDirectory Tenant ID called asPartner ID, in GUID format.
PartnerNameName of the partner AzureActive Directory tenant.
Partner name.
ResellerMPNIDID for the reseller associatedwith the subscription.
ID of the reseller on recordfor the subscription. Notavailable for current activity.


Field nameDescriptionPartner Center equivalentcostCenterCost center associated to thesubscription.
N/AbillingPeriodStartDateBilling period start date, asshown on the invoice.
N/AbillingPeriodEndDateBilling period end date, asshown on the invoice.
N/AservicePeriodStartDateStart date for the rating periodwhen the service usage wasrated for charges. The prices forAzure services are determinedfor the rating period.
ChargeStartDate in PartnerCenter. Billing cycle startdate, except when presentingdates of previouslyuncharged latent usage datafrom a previous billing cycle.
The time is always thebeginning of the day, 0:00.
servicePeriodEndDateEnd date for the period whenthe service usage was rated forcharges. The prices for Azureservices are determined basedon the rating period.
N/AdateFor Azure consumption data, itshows date of usage as rated.
For reserved instance, it showsthe purchased date. Forrecurring charges and one-timecharges such as Marketplaceand support, it shows thepurchase date.
N/AproductIDIdentifier for the product thathas accrued charges byconsumption or purchase. It isthe concatenated key ofproductID and SKuID, as shownin the Partner Center.
The ID of the product.
productName of the product that hasaccrued charges byconsumption or purchase, asshown on the invoice.
The product name in thecatalog.


Field nameDescriptionPartner Center equivalentserviceFamilyShows the service family for theproduct purchased or charged.
For example, Storage orCompute.
N/AproductOrderIDThe identifier of the asset orAzure plan name that thesubscription belongs to. Forexample, Azure Plan.
CommerceSubscriptionIDproductOrderNameThe name of the Azure planthat the subscription belongsto. For example, Azure Plan.
N/AconsumedServiceConsumed service (legacytaxonomy) as used in legacy EAusage details.
Service shown in the PartnerCenter. For example,
Microsoft.Storage,
Microsoft.Compute, andmicrosoft.operationalinsights.
meterIDMetered identifier for measuredconsumption.
The ID of the used meter.
meterNameIdentifies the name of the meterfor measured consumption.
The name of the consumedmeter.
meterCategoryIdentifies the top-level servicefor usage.
The top-level service for theusage.
meterSubCategoryDefines the type or subcategoryof Azure service that can affectthe rate.
The type of Azure servicethat can affect the rate.
meterRegionIdentifies the location of thedatacenter for certain servicesthat are priced based ondatacenter location.
The regional location of adata center for services,
where applicable andpopulated.
subscription IDUnique Microsoft generatedidentifier for the Azuresubscription.
EntitlementIDsubscriptionNameName of the Azure subscription.N/A


Field nameDescriptionPartner Center equivalentTermDisplays the term for thevalidity of the offer. Forexample, reserved instancesshow 12 months of a yearlyterm of the reserved instance.
For one-time purchases orrecurring purchases, the termdisplays one month for SaaS,
Azure Marketplace, andsupport. Not applicable forAzure consumption.
N/AproviderIdentifier for product and line ofbusiness. Break down costs bythe provider type: Azure,
Microsoft 365, Dynamics 365,
AWS, and so on.
N/ApublisherType (firstParty,
thirdPartyReseller,
thirdPartyAgency)
Type of publisher that identifiesthe publisher as first party,
third-party reseller, or third-
party agency.
N/ApartNumberPart number for the unusedreserved instance and AzureMarketplace services.
N/ApublisherNameName of the publisher of theservice including Microsoft orthird-party publishers.
The name of the product'spublisher.
reservationIdIdentifier for the reservedinstance purchase.
N/AreservationNameName of the reserved instance.N/AreservationOrderIdOrderID for the reservedinstance.
N/AfrequencyPayment frequency for areserved instance.
N/AresourceGroupName of the Azure resourcegroup used for lifecycleresource management.
Name of the resource group.
instanceID (or) ResourceIDIdentifier of the resourceinstance.
Shown as a ResourceURI thatincludes complete resourceproperties.


Field nameDescriptionPartner Center equivalentresourceLocationName of the resource location.The location of the resource.
LocationNormalized location of theresource.
N/AeffectivePriceThe effective unit price of theservice, in pricing currency.
Unique for a product, servicefamily, meter, and offer. Usedwith pricing in the price sheetfor the billing account. Whenthere is tiered pricing or anincluded quantity, it shows theblended price for consumption.
The unit price afteradjustments are made.
QuantityMeasured quantity purchasedor consumed. The amount ofthe meter used during thebilling period.
Number of units. Ensure itmatches the information inyour billing system duringreconciliation.
unitOfMeasureIdentifies the unit that theservice is charged in. Forexample, GB and hours.
Identifies the unit that theservice is charged in. Forexample, GB, hours, and10,000 s.
pricingCurrencyThe currency defining the unitprice.
The currency in the price list.
billingCurrencyThe currency defining the billedcost.
The currency defined as thebilled currency on theinvoice.
chargeTypeDefines the type of charge thatthe cost represents in CostManagement like purchase andrefund.
The type of charge oradjustment. Not available forcurrent activity.
costinBillingCurrencyExtendedCost or blended costbefore tax in the billed currency.
N/AcostinPricingCurrencyExtendedCost or blended costbefore tax in pricing currency tocorrelate with prices.
N/AcostinUSDEstimated ExtendedCost orblended cost before tax in USD.
N/A


Field nameDescriptionPartner Center equivalentpaygCostInBillingCurrencyShows costs if pricing is in retailprices. Shows pay-as-you-goprices in the billing currency.
Available only at Azure RBACscopes.
N/ApaygCostInUSDShows costs if pricing is in retailprices. Shows pay-as-you-goprices in USD. Available only atAzure RBAC scopes.
N/AexchangeRateExchange rate used to convertfrom the pricing currency to thebilling currency.
Referred to asPCToBCExchangeRate in thePartner Center. The pricingcurrency to billing currencyexchange rate.
exchangeRateDateThe date for the exchange ratethat's used to convert from thepricing currency to the billingcurrency.
Referred to asPCToBCExchangeRateDat inthe Partner Center. Thepricing currency to billingcurrency exchange rate date.
isAzureCreditEligibleIndicates whether the cost iseligible for payment by Azurecredits.
N/AserviceInfo1Legacy field that capturesoptional service-specificmetadata.
Internal Azure servicemetadata.
serviceInfo2Legacy field that capturesoptional service-specificmetadata.
Service information. Forexample, an image type for avirtual machine and ISP namefor ExpressRoute.
additionalInfoService-specific metadata. Forexample, an image type for avirtual machine.
Any additional informationnot covered in othercolumns. The service-specificmetadata. For example, animage type for a virtualmachine.


Field nameDescriptionPartner Center equivalenttagsTag that you assign to themeter. Use tags to group billingrecords. For example, you canuse tags to distribute costs bythe department that uses themeter.
Tags added by the customer.
partnerEarnedCreditRateRate of discount applied if thereis a partner earned credit (PEC)
based on partner admin linkaccess.
The rate of partner earnedcredit (PEC). For example, 0%
or 15%.
partnerEarnedCreditAppliedIndicates whether the partnerearned credit has been applied.
N/A

View Partner Earned Credit (PEC) resource costs

In Cost Management, partners can use cost analysis to view costs that received the PECbenefits.

In the Azure portal, sign in to the partner tenant and select Cost Management + Billing.
Under Cost Management, select Cost analysis.

The Cost analysis view shows costs of the billing account for the partner. Select theScope as needed for the partner, a specific customer, or a billing profile to reconcileinvoices.

In a donut chart, select the drop-down list and select PartnerEarnedCreditApplied todrill into PEC costs.


Example showing how to view partner-earned credit


When the PartnerEarnedCreditApplied property is True, the associated cost has thebenefit of the partner earned admin access.

When the PartnerEarnedCreditApplied property is False, the associated cost hasn't metthe required eligibility for the credit. Or, the service purchased isn't eligible for partnerearned credit.

Service usage data normally takes 8-24 hours to appear in Cost Management. For moreinformation, see Cost and usage data updates and retention. PEC credits appear within48 hours from time of access in Cost Management.

You can also group and filter by the PartnerEarnedCreditApplied property using theGroup by options. Use the options to examine costs that do and don't have PEC.


Group or filter by partner-earned credit


Export cost data to Azure Storage

Partners with access to billing scopes in a partner tenant can export their cost and usagedata to an Azure Storage blob. The blob must be on a subscription in the partner tenantthat's not a shared service subscription or a customer’s subscription. To enable cost dataexport, we recommended that you set up an independent pay-as-you-go subscription inthe partner tenant to host the exported cost data. The export storage account is createdon the Azure Storage blob hosted in the pay-as-you-go subscription. Based on thescope where the partner creates the export, the associated data is exported to thestorage account automatically on a recurring basis.

Users with Azure RBAC access to the subscription can also export the cost data to anAzure storage blob hosted in any subscription in the customer tenant.

Create an export in a partner tenant or customer tenant

In the Azure portal, sign in to the partner tenant or customer tenant and select CostManagement + Billing. Select an appropriate scope, for example a Microsoft PartnerAgreement billing account, and then select Cost Analysis. When the page loads, selectExport. Select View all exports under Schedule Export.


Select Export and View all exports


Next, select Add and type the name and select an export type. Select the Storage taband enter required information.

Add new export and select Storage tab


When you create an export in the partner tenant, select the pay-as-you-go subscriptionin the partner tenant. Create an Azure Storage account using that subscription.

For Azure RBAC users in the customer tenant, select a subscription in the customertenant. Create an Azure Storage account using the subscription.

Review the content and then select Create to schedule an export.

To verify data in the export list, select the storage account name. On the storage accountpage, select Containers and then select the container. Navigate to the correspondingfolder and select the CSV file. Select Download to get the CSV file and open it. Theexported data exported resembles cost data similar to usage details from the Azureportal.

Example of exported data





Cost Management REST APIs

Partners and their customers can use Cost Management APIs for common tasks. Formore information, see Automation for partners.

Next steps

Start analyzing costs in Cost Management
Create and manage budgets in Cost Management



Azure security baseline for CostManagement

Article
10/12/2022


This security baseline applies guidance from the Microsoft cloud security benchmarkversion 1.0 to Cost Management. The Microsoft cloud security benchmark providesrecommendations on how you can secure your cloud solutions on Azure. The content isgrouped by the security controls defined by the Microsoft cloud security benchmark andthe related guidance applicable to Cost Management.

You can monitor this security baseline and its recommendations using MicrosoftDefender for Cloud. Azure Policy definitions will be listed in the Regulatory Compliancesection of the Microsoft Defender for Cloud dashboard.

When a feature has relevant Azure Policy Definitions, they are listed in this baseline tohelp you measure compliance to the Microsoft cloud security benchmark controls andrecommendations. Some recommendations may require a paid Microsoft Defender planto enable certain security scenarios.

Note

Features not applicable to Cost Management have been excluded. To see how CostManagement completely maps to the Microsoft cloud security benchmark, see thefull Cost Management security baseline mapping file.

Security profile

The security profile summarizes high-impact behaviors of Cost Management, which mayresult in increased security considerations.

Service Behavior AttributeValueProduct CategoryMGMT/GovernanceCustomer can access HOST / OSNo AccessService can be deployed into customer's virtual networkFalseStores customer content at restTrue




Network security

For more information, see the Microsoft cloud security benchmark: Network security.

NS-2: Secure cloud services with network controls

Features

Disable Public Network Access

Description: Service supports disabling public network access either through usingservice-level IP ACL filtering rule (not NSG or Azure Firewall) or using a 'Disable PublicNetwork Access' toggle switch. Learn more.

SupportedEnabled By DefaultConfiguration ResponsibilityFalseNot ApplicableNot Applicable

Configuration Guidance: This feature is not supported to secure this service.

Identity management

For more information, see the Microsoft cloud security benchmark: Identity management.

IM-1: Use centralized identity and authentication system

Features

Azure AD Authentication Required for Data Plane Access

Description: Service supports using Azure AD authentication for data plane access.
Learn more.

SupportedEnabled By DefaultConfiguration ResponsibilityTrueTrueMicrosoft

Feature notes: Azure Cost Management is integrated with Azure Active Directory (AzureAD) as the services operates within the Azure Portal.


Configuration Guidance: No additional configurations are required as this is enabled ona default deployment.

Reference: Manage access to billing information for Azure

Local Authentication Methods for Data Plane Access

Description: Local authentications methods supported for data plane access, such as alocal username and password. Learn more.

SupportedEnabled By DefaultConfiguration ResponsibilityFalseNot ApplicableNot Applicable

Configuration Guidance: This feature is not supported to secure this service.

IM-3: Manage application identities securely andautomatically

Features

Managed Identities

Description: Data plane actions support authentication using managed identities. Learnmore.

SupportedEnabled By DefaultConfiguration ResponsibilityFalseNot ApplicableNot Applicable

Configuration Guidance: This feature is not supported to secure this service.

Service Principals

Description: Data plane supports authentication using service principals. Learn more.

SupportedEnabled By DefaultConfiguration ResponsibilityTrueFalseCustomer

Feature notes: In order to use Azure Cost Management APIs, you need to properlyassign permissions to an Azure service principal. From there you can use the service


principal identity to call the APIs.

Configuration Guidance: For services that don't support managed identities, use AzureActive Directory (Azure AD) to create a service principal with restricted permissions atthe resource level. Configure service principals with certificate credentials and fall backto client secrets for authentication.

After you create a service principal to programmatically call the Azure ResourceManager APIs, you need to assign it the proper permissions to authorize against andexecute requests in Azure Resource Manager.

Reference: Assign permissions to Cost Management APIs

IM-7: Restrict resource access based on conditions

Features

Conditional Access for Data Plane

Description: Data plane access can be controlled using Azure AD Conditional AccessPolicies. Learn more.

SupportedEnabled By DefaultConfiguration ResponsibilityTrueFalseCustomer

Feature notes: Azure Cost Management is integrated with Azure Active Directory (AzureAD). Conditional access policies may be configured by the customer to authenticate viaAzure AD.

Configuration Guidance: Define the applicable conditions and criteria for Azure ActiveDirectory (Azure AD) conditional access in the workload. Consider common use casessuch as blocking or granting access from specific locations, blocking risky sign-inbehavior, or requiring organization-managed devices for specific applications.

Reference: What is Conditional Access?

IM-8: Restrict the exposure of credential and secrets

Features




Service Credential and Secrets Support Integration and Storage inAzure Key Vault

Description: Data plane supports native use of Azure Key Vault for credential and secretsstore. Learn more.

SupportedEnabled By DefaultConfiguration ResponsibilityFalseNot ApplicableNot Applicable

Configuration Guidance: This feature is not supported to secure this service.

Privileged access

For more information, see the Microsoft cloud security benchmark: Privileged access.

PA-1: Separate and limit highly privileged/administrativeusers

Features

Local Admin Accounts

Description: Service has the concept of a local administrative account. Learn more.

SupportedEnabled By DefaultConfiguration ResponsibilityFalseNot ApplicableNot Applicable

Configuration Guidance: This feature is not supported to secure this service.

PA-7: Follow just enough administration (least privilege)
principle

Features

Azure RBAC for Data Plane

Description: Azure Role-Based Access Control (Azure RBAC) can be used to managedaccess to service's data plane actions. Learn more.


SupportedEnabled By DefaultConfiguration ResponsibilityTrueFalseCustomer

Configuration Guidance: Use Azure role-based access control (Azure RBAC) to manageAzure resource access through built-in role assignments. After an Account administratorhas assigned the appropriate roles to other users, they must turn on access to downloadinvoices in the Azure portal.

Reference: Manage access to billing information for Azure

Data protection

For more information, see the Microsoft cloud security benchmark: Data protection.

DP-3: Encrypt sensitive data in transit

Features

Data in Transit Encryption

Description: Service supports data in-transit encryption for data plane. Learn more.

SupportedEnabled By DefaultConfiguration ResponsibilityTrueTrueMicrosoft

Feature notes: By default, data in transit is encrypted by Microsoft.

Configuration Guidance: No additional configurations are required as this is enabled ona default deployment.

Reference: Double encryption

DP-4: Enable data at rest encryption by default

Features

Data at Rest Encryption Using Platform Keys


Description: Data at-rest encryption using platform keys is supported, any customercontent at rest is encrypted with these Microsoft managed keys. Learn more.

SupportedEnabled By DefaultConfiguration ResponsibilityTrueTrueMicrosoft

Feature notes: By default, data at rest is automatically encrypted by Microsoft usingplatform-managed encryption keys.

Configuration Guidance: No additional configurations are required as this is enabled ona default deployment.

Reference: Double encryption

DP-5: Use customer-managed key option in data at restencryption when required

Features

Data at Rest Encryption Using CMK

Description: Data at-rest encryption using customer-managed keys is supported forcustomer content stored by the service. Learn more.

SupportedEnabled By DefaultConfiguration ResponsibilityFalseNot ApplicableNot Applicable

Configuration Guidance: This feature is not supported to secure this service.

DP-6: Use a secure key management process

Features

Key Management in Azure Key Vault

Description: The service supports Azure Key Vault integration for any customer keys,
secrets, or certificates. Learn more.

SupportedEnabled By DefaultConfiguration Responsibility


SupportedEnabled By DefaultConfiguration ResponsibilityFalseNot ApplicableNot Applicable

Configuration Guidance: This feature is not supported to secure this service.

Asset management

For more information, see the Microsoft cloud security benchmark: Asset management.

AM-2: Use only approved services

Features

Azure Policy Support

Description: Service configurations can be monitored and enforced via Azure Policy.
Learn more.

SupportedEnabled By DefaultConfiguration ResponsibilityFalseNot ApplicableNot Applicable

Configuration Guidance: This feature is not supported to secure this service.

Backup and recovery

For more information, see the Microsoft cloud security benchmark: Backup and recovery.

BR-1: Ensure regular automated backups

Features

Azure Backup

Description: The service can be backed up by the Azure Backup service. Learn more.

SupportedEnabled By DefaultConfiguration ResponsibilityFalseNot ApplicableNot Applicable


Configuration Guidance: This feature is not supported to secure this service.

Next steps

See the Microsoft cloud security benchmark overview
Learn more about Azure security baselines



Troubleshoot common CostManagement errors

Article
12/14/2022


This article describes common Cost Management errors and provides information aboutsolutions. When you use Cost Management in the Azure portal and encounter an errorthat you don't understand or can't resolve, find the error code below. Then try to usethe mitigation information or the more information link to resolve the problem.

Here's a list of common error codes with mitigation information.

If the information provided doesn't help you, Create a support request.

400

Error message 400.

Mitigation

If you're using the BillingPeriods API, confirm that you're using a classic pay-as-you-goor EA subscription. The BillingPeriods API doesn't support Microsoft CustomerAgreement subscriptions.

Confirm that you're using a supported scope for the specific feature or subscriptionoffer type.

There are many feature-specific errors that use the 400 error code. Refer to the errormessage and API documentation for specific details. For general information, see CostManagement APIs.

More information

For more information about billing periods when transitioning to a Microsoft CustomerAgreement, see Billing period.

401

Error message 401.

Mitigation


For an Enterprise Agreement, confirm that the view charges options (Account Owner orDepartment Administrator) have been enabled.

For a Microsoft Customer Agreement, confirm that the billing account owner hasassigned you to a role that can view charges.

See AuthorizationFailed.

More information

For more information about enterprise agreements, see Troubleshoot enterprise costviews.

For more information about Microsoft Customer Agreements, see Understand MicrosoftCustomer Agreement administrative roles in Azure.

404

Error message 404.

Mitigation

Confirm that you're using a supported scope for the specific feature or supportedsubscription offer type.

Also, see NotFound.

500

Error message 500.

Mitigation

This message is an internal error. Wait an hour and try again.

Also, see GatewayTimeout.

503

Error message 503.

Mitigation

This message is an internal error. Wait an hour and try again.


When creating or updating exports, you might view the error when theMicrosoft.CostManagementExports resource provider is being registered for yoursubscription. Resource provider registration is quick, but you may need to wait up to fiveminutes. If you still see the error for more than 10 minutes, create a support request.

Also, see GatewayTimeout.

AccountCostDisabled

Error message AccountCostDisabled.

Mitigation

The message indicates that the Enterprise Agreement administrator hasn't enabled CostManagement (view charges) for account owners and subscription users. Contact youradministrator.

More information

For more information, see Troubleshoot Azure enterprise cost views.

AuthorizationFailed

Error message AuthorizationFailed.

Mitigation

Confirm that you have access to the specified scope or object. For example, budget orexport.

More information

For more information, see Assign access to Cost Management data

BadRequest

Error message BadRequest.

Mitigation

When using the Query or Forecast APIs to retrieve cost data, validate the query body.

When using portal experiences and you see the object ID cannot be null error, tryrefreshing your view.


When using Power BI to pull reservation usage data for more than 3 months, you willneed to break down the call into 3-month chunks.

Also, see SubscriptionTypeNotSupported.

More information

For more information about the Query - Usage API body examples, see Query - Usage.

For more information about the Forecast - Usage API body examples, see Forecast -
Usage.

For more information about chunking reservation usage calls in Power BI, see Power BIconsiderations and limitations.

BillingAccessDenied

Error message BillingAccessDenied.

Mitigation

See AuthorizationFailed.

DepartmentCostDisabled

Error message DepartmentCostDisabled.

Mitigation

The message indicates that the Enterprise Agreement administrator hasn't enabled CostManagement (DA view charges) for department admins. Contact your EA administrator.

More information

For more information about troubleshooting disabled costs, see Troubleshoot Azureenterprise cost views.

DisallowedOperation

Error message DisallowedOperation.

Mitigation


The message indicates that the subscription doesn't have any charges. The type ofsubscription that you're using isn't allowed to incur charges. Because the subscriptioncan't have any billed charges, it isn't supported by Cost Management.

FailedDependency

Error message FailedDependency.

Mitigation

When you're using the Forecast API, the error indicates that there's either not enoughdata to generate an accurate forecast. Or, there are multiple currencies that can't bemerged.

If you have multiple currencies, filter down to charges that only have one currency orrequest an aggregation of CostUSD instead of Cost to get a forecast normalized to USD.

If there's not enough historical data, wait one week since you first had charges on thescope to see a forecast.

More information

For more information about the API, see Forecast - Usage.

GatewayTimeout

Error message GatewayTimeout.

Mitigation

The message is an internal error. Wait an hour and try again.

When querying for cost data using the Query, Forecast, or Publish APIs, considersimplifying your query with less group by columns or using a lower-level scope. Avoidusing large management groups with more than 50 subscriptions.

IndirectCostDisabled

Error message IndirectCostDisabled.

Mitigation


The message indicates that your partner hasn't published pricing for the EnterpriseAgreement enrollment, which is required to use Cost Management. Contact yourpartner.

More information

For more information, see Troubleshoot Azure enterprise cost views.

InvalidAuthenticationTokenTenant

Error message InvalidAuthenticationTokenTenant.

Mitigation

The subscription you're accessing might have been moved to a different directory.

When using the Azure portal, you might have used a link or saved reference, like adashboard tile, before the subscription was moved.

Switch to the correct directory that was mentioned in the error message and try again.
Don't forget to remove any old references and update any links.

InvalidGatewayHost

Error message InvalidGatewayHost.

Mitigation

The message is an internal error. Try again in five minutes. If the error continues, create asupport request.

InvalidScheduledActionEmailRecipients

Error message InvalidScheduledActionEmailRecipients.

Mitigation

The message indicates that the scheduled action/email for an alert that you're creatingor updating doesn't have any email recipients. When using the Azure portal, pressENTER after specifying an email address to ensure it's saved in the form.

InvalidView


Error message InvalidView.

Mitigation

The message indicates that the view specified when creating or updating an alert withthe ScheduledActions API isn't valid.

When configuring anomaly alerts, make sure you use a kind value of InsightAlert.

MissingSubscription

Error message MissingSubscription.

Mitigation

The message indicates that the HTTP request didn't include a valid scope.

If using the Azure portal, create a support request. The error is likely caused by aninternal problem.

NotFound

Error message NotFound.

Mitigation

If using a subscription or resource group, see SubscriptionNotFound.

If using a management group, see SubscriptionTypeNotSupported.

If using Cost Management in the Azure portal, try refreshing the page. The error may becaused by an old reference to a deleted object within the system, like a budget orconnector.

For any other cases, validate the scope or resource ID.

More information

For more information, see Assign access to Cost Management data.

RBACAccessDenied

Indicates that the current user/account does not have adequate Role-Based AccessControl (RBAC) permission to perform the action.


Mitigation

If creating a budget that references an action group (contactGroups in the requestbody), make sure the user/account executing the PUT request has both CostManagement Contributor (or Microsoft.Consumption/budgets/write) access as well asMonitoring Reader (or Microsoft.Insights/actionGroups/read) access.

For additional mitigation steps, see AuthorizationFailed.

ReadOnlyDisabledSubscription

Error message ReadOnlyDisabledSubscription.

Mitigation

The subscription is disabled. You can't create or update Cost Management objects, likebudgets and views, for a disabled subscription.

More information

For more information, see Reactivate a disabled Azure subscription.

ResourceGroupNotFound

Mitigation

The error indicates that a resource group doesn't exist. The resource group might bemoved or deleted.

If using the Azure portal, you might see the error when creating budgets or exports. Theerror is expected and you can ignore it.

ResourceRequestsThrottled

Error message ResourceRequestsThrottled.

Mitigation

The error is caused by excessive use within a short timeframe. Wait five minutes and tryagain.

More information

For more information, see Data latency and rate limits.




ServerTimeout

Error message ServerTimeout.

Mitigation

For mitigation information, see GatewayTimeout.

SubscriptionNotFound

Error message SubscriptionNotFound.

Mitigation

Validate that the subscription ID is correct.
Confirm that you have a supported subscription type.


If using Cost Management for a newly created subscription, wait 48 hours and try again.

More information

Supported subscription types are shown at Understand Cost Management data.

SubscriptionTypeNotSupported

Error message SubscriptionTypeNotSupported.

Mitigation

If using a management group, verify that all subscriptions have a supported offer type.
Cost Management doesn't support management groups with Microsoft CustomerAgreement subscriptions.

More information

Supported subscription types are shown at Understand Cost Management data.

Unauthorized

Error message Unauthorized.

Mitigation


If using the ExternalBillingAccounts or ExternalSubscriptions APIs, verify that theMicrosoft.CostManagement resource providerRP was registered for your Azure ActiveDirectory instance. Resource Provider registration is required to use Cost Managementfor AWS.

If you get an Empty GUID user id error, update the bearer token associated with therequest. You might temporarily see the error in the Azure portal, but it should resolveitself. If you continue to see the error in the Azure portal, refresh your browser.

Also, see AuthorizationFailed.

More information

For more information, see Set up AWS integration with Cost Management.

Create a support request

If you're facing an error not listed above or need more help, file a support request andspecify the issue type as Billing.

Next steps

Read the Cost Management + Billing frequently asked questions (FAQ).



Microsoft Cost Management

Article
06/07/2022


The Cost Management APIs provide the ability to explore cost and usage data viamultidimensional analysis, where creating customized filters and expressions allow youto answer consumption-related questions for your Azure resources. These APIs arecurrently available for Azure Enterprise customers.

REST Operation Groups

OperationGroupDescriptionDimensionsProvides operations to get supported dimensions for your usage under a variety ofscopes. You can retrieve a list of dimensions that can be used as inputs forgenerating queries with the Query or Exports API.
QueryProvides operations to get aggregated cost and usage data based on the query yousupply. Data can be filtered, sorted, and grouped by all available Dimensions(accessible through the Dimensions API).
ExportsProvides operations to schedule recurring exports of cost and usage data to blobstorage. Data can be filtered, sorted, and grouped by all available Dimensions(accessible through the Dimensions API).

See also

Azure consumption REST API documentation


Azure Retail Prices overview

Article
02/16/2023


Azure customers have been looking for a programmatic way to retrieve retail prices forall Azure services. Now you can use the Retail Rates Prices API to get retail prices for allAzure services. Previously, the only way that you could retrieve prices for Azure serviceswas to either use the Azure Pricing Calculator or use the Azure portal. This API gives youan unauthenticated experience to get retail rates for all Azure services. Use the API toexplore prices for Azure services against different regions and different SKUs. Theprogrammatic API can also help you create your own tools for internal analysis and pricecomparison across SKUs and regions.

Important

The currency that Microsoft uses to price all Azure services is USD. Prices shown inUSD currency are Microsoft retail prices. Other non-USD prices returned by the APIare for your reference to help you estimate budget expenses.

Preview version

You can use the new 2023-01-01-preview API version athttps://prices.azure.com/api/retail/prices?api-version=2023-01-01-preview. Thepreview version is backward compatible with previous API versions. The URL returns thefull set of meters, including primary meters and non-primary meters.

Using either https://prices.azure.com/api/retail/prices orhttps://prices.azure.com/api/retail/prices?api-version=2023-01-01-preview returns thefull set of meters.

Rates for savings plans are only available with thehttps://prices.azure.com/api/retail/prices?api-version=2023-01-01-preview version.

Primary meter filtering

You can limit responses to retrieve only primary meter prices with:

HTTPhttps://prices.azure.com/api/retail/prices?api-version=2023-01-01-
preview&meterRegion='primary'

Primary meter filtering is supported by 2021-10-01 and later API versions including2023-01-01.

Azure saving plan support

As previously mentioned, Azure savings plan retail prices are only supported by thepreview version (https://prices.azure.com/api/retail/prices?api-version=2023-01-01-
preview). For the meters eligible for a savings plan, results have a correspondingsection for savings plan. When you commit to a savings plan, you get a cheaper pricethan the OnDemand price. For more information about Azure savings plans, see Azuresavings plans documentation.

Here's an example API response with savings plan information:

JSON 
{ 
"currencyCode": "USD", 
"tierMinimumUnits": 0.0, 
"retailPrice": 2.305, 
"unitPrice": 2.305, 
"armRegionName": "southindia", 
"location": "IN South", 
"effectiveStartDate": "2019-05-14T00:00:00Z", 
"meterId": "0084b086-37bf-4bee-b27f-6eb0f9ee4954", 
"meterName": "M8ms", 
"productId": "DZH318Z0BQ4W", 
"skuId": "DZH318Z0BQ4W/00BQ", 
"availabilityId": null, 
"productName": "Virtual Machines MS Series", 
"skuName": "M8ms", 
"serviceName": "Virtual Machines", 
"serviceId": "DZH313Z7MMC8", 
"serviceFamily": "Compute", 
"unitOfMeasure": "1 Hour", 
"type": "Consumption", 
"isPrimaryMeterRegion": true, 
"armSkuName": "Standard_M8ms", 
"savingsPlan": [ 
{ 
"unitPrice": 0.8065195, 
"retailPrice": 0.8065195, 
"term": "3 Years" 
}, 
{ 
"unitPrice": 1.5902195, 
"retailPrice": 1.5902195, 
"term": "1 Year"

 } 
] 
},
API endpoint

https://prices.azure.com/api/retail/prices

API sample calls

Here are some examples:

Example calls filtered for only virtual machines

HTTPhttps://prices.azure.com/api/retail/prices?$filter=serviceName eq 'Virtual 
Machines'
Example calls filtered for only reservations

HTTPhttps://prices.azure.com/api/retail/prices?$filter=priceType eq 
'Reservation'
Example calls filtered for reserved instance virtual machines

HTTPhttps://prices.azure.com/api/retail/prices?$filter=serviceName eq 'Virtual 
Machines' and priceType eq 'Reservation'
Example calls filtered for compute resources

HTTPhttps://prices.azure.com/api/retail/prices?$filter=serviceFamily eq 
'Compute'
Example calls filtered for compute with currency in euro

HTTP
https://prices.azure.com/api/retail/prices?
currencyCode='EUR'&$filter=serviceFamily eq 'Compute'
API response examples

Here's a sample API response, without reservation prices.

JSON{ 
"currencyCode": "USD", 
"tierMinimumUnits": 0.0, 
"retailPrice": 0.176346, 
"unitPrice": 0.176346, 
"armRegionName": "westeurope", 
"location": "EU West", 
"effectiveStartDate": "2020-08-01T00:00:00Z", 
"meterId": "000a794b-bdb0-58be-a0cd-0c3a0f222923", 
"meterName": "F16s Spot", 
"productId": "DZH318Z0BQPS", 
"skuId": "DZH318Z0BQPS/00TG", 
"productName": "Virtual Machines FS Series Windows", 
"skuName": "F16s Spot", 
"serviceName": "Virtual Machines", 
"serviceId": "DZH313Z7MMC8", 
"serviceFamily": "Compute", 
"unitOfMeasure": "1 Hour", 
"type": "DevTestConsumption", 
"isPrimaryMeterRegion": true, 
"armSkuName": "Standard_F16s" 
}
Here's a sample API response with reservation prices and term in the response.

JSON{ 
"currencyCode": "USD", 
"tierMinimumUnits": 0.0, 
"reservationTerm": "1 Year", 
"retailPrice": 25007.0, 
"unitPrice": 25007.0, 
"armRegionName": "southcentralus", 
"location": "US South Central", 
"effectiveStartDate": "2020-08-01T00:00:00Z", 
"meterId": "0016083a-928f-56fd-8eeb-39287dcf676d", 
"meterName": "E64 v4", 
"productId": "DZH318Z0D1L7", 
"skuId": "DZH318Z0D1L7/018J", 
"productName": "Virtual Machines Ev4 Series",

 "skuName": "E64 v4", 
"serviceName": "Virtual Machines", 
"serviceId": "DZH313Z7MMC8", 
"serviceFamily": "Compute", 
"unitOfMeasure": "1 Hour", 
"type": "Reservation", 
"isPrimaryMeterRegion": true, 
"armSkuName": "Standard_E64_v4" 
}
Here's a sample response with a non-USD currency.

JSON{ 
"currencyCode": "EUR", 
"tierMinimumUnits": 0, 
"retailPrice": 0.6176, 
"unitPrice": 0.6176, 
"armRegionName": "westeurope", 
"location": "EU West", 
"effectiveStartDate": "2021-04-01T00:00:00Z", 
"meterId": "000a794b-bdb0-58be-a0cd-0c3a0f222923", 
"meterName": "F16s Spot", 
"productId": "DZH318Z0BQPS", 
"skuId": "DZH318Z0BQPS/00TG", 
"productName": "Virtual Machines FS Series Windows", 
"skuName": "F16s Spot", 
"serviceName": "Virtual Machines", 
"serviceId": "DZH313Z7MMC8", 
"serviceFamily": "Compute", 
"unitOfMeasure": "1 Hour", 
"type": "Consumption", 
"isPrimaryMeterRegion": true, 
"armSkuName": "Standard_F16s"
}
API response pagination

The API response provides pagination. For each API request, a maximum of 100 recordsare returned. At the end of the API response, it has the link to next page. For example:

JSON"NextPageLink": https://prices.azure.com:443/api/retail/prices?
$filter=serviceName%20eq%20%27Virtual%20Machines%27&$skip=100



API property details

Here's all the property details that are a part of the API response.

FieldExample ValuesDefinitioncurrencyCodeUSDThe currency in which rates are defined andreturns prices in USD unless specified.
tierMinimumUnits0Minimum units of consumption to avail the pricereservationTerm1 yearReservation term – one year or three yearsretailPrice0.176346Prices without discountunitPrice0.176346armRegionNamewesteuropeAzure Resource Manager region where theservice is available. This version only supportsprices on Commercial Cloud.
LocationEU WestAzure data center where the resource isdeployedeffectiveStartDate2020-08-
01T00:00:00ZOptional field. Shows the date when the retailprices are effective.
meterId000a794b-bdb0-
58be-a0cd-
0c3a0f222923Unique identifier of the resourcemeterNameF16s SpotName of the meterproductidDZH318Z0BQPSUniqueID of the productskuIdDZH318Z0BQPS/00TGUniqueID for the SKUproductNameVirtual Machines FSSeries WindowsProduct nameskuNameF16s SpotSKU nameserviceNameVirtual MachinesName of the serviceserviceIdDZH313Z7MMC8UniqueID of the serviceserviceFamilyComputeService family of the SKUunitOfMeasure1 HourHow usage is measured for the service


FieldExample ValuesDefinitionTypeDevTestConsumptionMeter consumption type. Other types areReservation and Consumption.
isPrimaryMeterRegionTrueIndicates whether the meter region is set as aprimary meter or not. Primary meters are usedfor charges and billing.
armSkuNameStandard_F16sSKU name registered in Azureterm3 YearsTerm length for an Azure savings plan,
associated with savingsPlan information.

API filters

Filters are supported for the following fields:

armRegionName
Location
meterId
meterName
productid
skuId
productName
skuName
serviceName
serviceId
serviceFamily
priceType
armSkuName


You append the filters to the API endpoint, as shown in the API sample calls.

Supported currencies

You append the currency code to the API endpoint, as shown in the API sample call.

Currency codeDetailUSDUS dollarAUD Australian dollar 


Currency codeDetailBRL Brazilian real 
CAD Canadian dollar 
CHF Swiss franc 
CNY Chinese yuan 
DKK Danish krone 
EUR Euro 
GBP British pound 
INR Indian rupee 
JPY Japanese yen 
KRW Korean won 
NOK Norwegian krone 
NZD New Zealand dollar 
RUB Russian ruble 
SEK Swedish krona 
TWD Taiwan dollar 

Programmatic Example

The following simple python application employs the API to query the retail spot pricingof a virtual machine of the standard NP20 SKU in the South Central US region. Theapplication filters the output of the query and presents the desired information in atable format.

Python#!/usr/bin/env python3
import requests
import json
from tabulate import tabulate 
def build_pricing_table(json_data, table_data): 
for item in json_data['Items']: 
meter = item['meterName']

 table_data.append([item['armSkuName'], item['retailPrice'], 
item['unitOfMeasure'], item['armRegionName'], meter, item['productName']]) 
def main(): 
table_data = [] 
table_data.append(['SKU', 'Retail Price', 'Unit of Measure', 'Region', 
'Meter', 'Product Name']) 
api_url = "https://prices.azure.com/api/retail/prices?api-version=2021-
10-01-preview" 
query = "armRegionName eq 'southcentralus' and armSkuName eq 
'Standard_NP20s' and priceType eq 'Consumption' and contains(meterName, 
'Spot')" 
response = requests.get(api_url, params={'$filter': query}) 
json_data = json.loads(response.text) 
build_pricing_table(json_data, table_data) 
nextPage = json_data['NextPageLink'] 
while(nextPage): 
response = requests.get(nextPage) 
json_data = json.loads(response.text) 
nextPage = json_data['NextPageLink'] 
build_pricing_table(json_data, table_data) 
print(tabulate(table_data, headers='firstrow', tablefmt='psql')) 
if __name__ == "__main__": 
main()
Running this code produces the following output:

+----------------+----------------+-------------------+----------------+----
--------+------------------------------------+
| SKU | Retail Price | Unit of Measure | Region | 
Meter | Product Name |
|----------------+----------------+-------------------+----------------+----
--------+------------------------------------|
| Standard_NP20s | 0.828503 | 1 Hour | southcentralus | 
NP20s Spot | Virtual Machines NP Series Windows |
| Standard_NP20s | 0.448207 | 1 Hour | southcentralus | 
NP20s Spot | Virtual Machines NP Series |
+----------------+----------------+-------------------+----------------+----
--------+------------------------------------+
Next steps

Learn about other Cost Management APIs.



Price Sheet

Reference


Service:Cost ManagementAPI Version:2023-03-01
Operations

DownloadGets a URL to download the pricesheet for an invoice. Theoperation is supported for billing accounts with agreement typeMicrosoft Partner Agreement or Microso...

Download By Billing ProfileGets a URL to download the current month's pricesheet for abilling profile. The operation is supported for billing accountswith agreement type Microsoft Partn...




Get started with Cost Management +
Billing reporting

Article
10/19/2022


Cost Management + Billing includes several tools to help you understand, report on,
and analyze your invoiced Microsoft Cloud and AWS costs. The following sectionsdescribe the major reporting components.

Cost analysis

Cost analysis should be your first stop in the Azure portal when it comes tounderstanding what you're spending and where you're spending. Cost analysis helpsyou:

Visualize and analyze your organizational costs
Share cost views with others using custom alerts
View aggregated costs by organization to understand where costs occur over timeand identify spending trends
View accumulated costs over time to estimate monthly, quarterly, or even yearlycost trends against a budget
Create budgets to provide adherence to financial constraints
Use budgets to view daily or monthly costs and help isolate spending irregularities


Cost analysis is available from every resource group, subscription, management group,
and billing account in the Azure portal. If you manage one of these scopes, you can startthere and select Cost analysis from the menu. If you manage multiple scopes, you maywant to start directly within Cost Management:

Sign in to the Azure portal > select Home in the menu > scroll down under Tools andselect Cost Management > select a scope at the top of the page > in the left menu,
select Cost analysis.


Screenshot showing the Cost analysis page.


For more information about cost analysis, see Explore and analyze costs with costanalysis.

Power BI

While cost analysis offers a rich, interactive experience for analyzing and surfacinginsights about your costs, there are times when you need to build more extensivedashboards and complex reports or combine costs with internal data. The CostManagement template app for Power BI is a great way to get up and running withPower BI quickly. For more information about the template app, see Analyze Azure costswith the Power BI App.


Screenshot showing the Power BI template app.


Need to go beyond the basics with Power BI? The Cost Management connector forPower BI lets you choose the data you need to help you seamlessly integrate costs withyour own datasets or easily build out more complete dashboards and reports to meetyour organization's needs. For more information about the connector, see Connect toCost Management data in Power BI Desktop.

Cost details and exports

If you're looking for raw data to automate business processes or integrate with othersystems, start by exporting data to a storage account. Scheduled exports allow you toautomatically publish your raw cost data to a storage account on a daily, weekly, ormonthly basis. With special handling for large datasets, scheduled exports are the mostscalable option for building first-class cost data integration. For more information, seeCreate and manage exported data.

Screenshot showing the list of exports.



If you need more fine-grained control over your data requests, the Cost Details APIoffers a bit more flexibility to pull raw data the way you need it. For more information,
see Cost Details API.

Invoices and credits

Cost analysis is a great tool for reviewing estimated, unbilled charges or for trackinghistorical cost trends, but it may not show your total billed amount because credits,
taxes, and other refunds and charges not available in Cost Management. To estimateyour projected bill at the end of the month, start in cost analysis to understand yourforecasted costs, then review any available credit or prepaid commitment balance fromCredits or Payment methods for your billing account or billing profile within the Azureportal. To review your final billed charges after the invoice is available, see Invoices foryour billing account or billing profile.

Here's an example that shows credits on the Credits tab on the Credits + Commitmentspage.

Screenshot showing the Credits page.


For more information about your invoice, see View and download your Microsoft Azureinvoice

For more information about credits, see Track Microsoft Customer Agreement Azurecredit balance.

Microsoft Azure mobile app


With the Azure app, you can keep track of the status of your Azure resources, such asvirtual machines (VMs) and web apps, from your mobile device. The app also sendsalerts about your environment.

You can also use the Azure app to track the status of subscription or resource groupcost. You can see your current cost, last month’s cost, forecasted cost, and view yourbudget usage.

The app is available for iOS and Android.

Example screenshot showing the iOS version of the Azure app with Cost Management subscription information.



Example screenshot showing the iOS version of the Azure app with Cost Management subscription information.


Next steps

Explore and analyze costs with cost analysis.
Analyze Azure costs with the Power BI App.
Connect to Microsoft Cost Management data in Power BI Desktop.
Create and manage exported data.



Quickstart: Start using Cost analysis

Article
03/12/2023


Before you can control and optimize your costs, you first need to understand where theyoriginated – from the underlying resources used to support your cloud projects to theenvironments they're deployed in and the owners who manage them. Full visibilitybacked by a thorough tagging strategy is critical to accurately understand yourspending patterns and enforce cost control mechanisms.

In this quickstart, you use Cost analysis to explore and get quick answers about yourcosts. You can see a summary of your cost over time to identify trends and break costsdown to understand how you're being charged for the services you use. For advancedreporting, use Power BI or export raw cost details.

Prerequisites

Cost Management isn't available for classic Cloud Solution Provider and sponsorshipsubscriptions. For more information about supported subscription types, seeUnderstand Cost Management data.

You must have Read access to use Cost Management. You might need to wait 48 hoursto view new subscriptions in Cost Management.

Get started

Cost analysis is your tool for interactive analytics and insights. It should be your firststop when you need to explore or get quick answers about your costs. You explore andanalyze costs using views. A view is a customizable report that summarizes and allowsyou to drill into your costs. Cost analysis comes with various built-in views thatsummarize:

Cost of your resources at various levels.
Overarching services spanning all your resources.
Amortized reservation usage.
Cost trends over time.


Depending on how you access Cost analysis, you may see two options. If available, werecommend starting with Cost analysis (preview) since you can access all views fromone central page.


The first time you open Cost analysis, you start with either a list of available cost viewsor a customizable area chart. This section walks through the list of views. If Cost analysisshows an area chart by default, see Analyze costs with customizable views.

Cost analysis has two types of views: smart views that offer intelligent insights and moredetails by default and customizable views you can edit, save, and share to meet yourneeds. Smart views open in tabs in Cost analysis. To open a second view, select the +
symbol to the right of the list of tabs. You can open up to five tabs at one time.
Customizable views open outside of the tabs in the custom view editor.

As you explore the different views, notice that Cost analysis remembers which viewsyou've used in the Recent section. Switch to the All views section to explore all of yoursaved views and the ones Microsoft provides out of the box. If there's a specific viewthat you want quick access to, select Pin to recent from the All views list.

Screenshot showing the Pin to recent option.


Views in the Recommended list may vary based on what users most commonly useacross Azure.

Analyze costs with smart views

If you're new to Cost analysis, we recommend starting with a smart view, like theResources view. Smart views include:

Key performance indicators (KPIs) to summarize your cost
Intelligent insights about your costs like anomaly detection
Expandable details with the top contributors
A breakdown of costs at the next logical level in the resource or product hierarchy



When you first open a smart view, note the date range for the period. Most views showthe current calendar month, but some use a different period that better aligns to thegoals for the view. As an example, the Reservations view shows the last 30 days bydefault to give you a clearer picture of reservation utilization over time. To choose adifferent date range, use the arrows in the date pill to switch to the previous or nextperiod, or select the text to open a menu with other options.

Check the Total cost KPI at the top of the page to confirm it matches your expectations.
Note the small percentage next to the total – it's the change compared to the previousperiod. Check the Average cost KPI to note whether costs are trending up or downunexpectedly.

If showing three months or less, the Average cost API compares the cost from the startof the period (up to but not including today) to the same number of days in theprevious period. If showing more than three months, the comparison looks at the costup to but not including the current month.

We recommend checking your cost weekly to ensure each KPI remains within theexpected range. If you recently deployed or changed resources, we recommendchecking daily for the first week or two to monitor the cost changes.

Note

If you want to monitor your forecasted cost, you can enable the Forecast KPIpreview feature in Cost Management Labs, available from the Try previewcommand.

If you don't have a budget, select the create link in the Budget KPI and specify theamount you expect to stay under each month. To create a quarterly or yearly budget,
select the Configure advanced settings link.

Screenshot showing the Create budget - advanced setting link.


Depending on the view and scope you're using, you may also see cost insights belowthe KPIs. Cost insights show important datapoints about your cost – from discovering


top cost contributors to identifying anomalies based on usage patterns. Select the Seeinsights link to review and provide feedback on all insights. Here's an insights example.

Screenshot showing insights.


Lastly, use the table to find your top cost contributors and expand each row tounderstand how costs are broken down to the next level. Examples include resourceswith their product meters and services with a breakdown of products.

Screenshot showing a table view of subscription costs with their nested resources.


This view is where you spend most of your time in Cost analysis. To explore further:

1. Open other smart views to get different perspectives on your cost.
2. If you want to drill into data further, you might need to Change scope to a lowerlevel. For example, you can't view the Subscriptions smart view if your current



scope is a subscription.
3. Open a custom view and apply other filters or group the data to explore.


Note

If you want to visualize and monitor daily trends within the period, enable the chartpreview feature in Cost Management Labs, available from the Try previewcommand.

Analyze costs with customizable views

While smart views offer a highly curated experience for targeted scenarios, custom viewsallow you to drill in further and answer more specific questions. Like smart views,
custom views include a specific date range, granularity, group by, and one or morefilters. Five custom views are provided for you to show how costs change over time.
They're separated by resource and product. All aspects of custom views can be changedto help answer simple questions. If you require more advanced reporting, like groupingby multiple attributes or fully customizable reports, use Power BI or export raw costdetails.

Here's an example of the Accumulated Costs customizable view.

Screenshot showing the Accumulated costs customizable view.



After you customize your view to meet your needs, you may want to save and share itwith others. To share views with others:

1. Save the view on a subscription, resource group, management group, or billingaccount.
2. Share a URL with view configuration details, which they can use on any scope theyhave access to.
3. Ping the view to an Azure portal dashboard. Pinning requires access to the samescope.
4. Download an image of the chart or summarized cost details in an Excel or CSV file.
5. Subscribe to scheduled alerts on a daily, weekly, or monthly basis.


All saved views are available from the All views list discussed previously.

Download cost details

While all smart and custom views can be downloaded, there are a few differencesbetween them.

Customizable chart views are downloaded as an image, smart views aren't. To downloadan image of the chart, use customizable views.

When you download table data, smart views include an extra option to include nesteddetails. There are a few extra columns available in smart views. We recommend startingwith smart views when you download data.

Screenshot showing the Download options in cost analysis. 


Although Power BI is available for all Microsoft Customer Agreement billing profiles andEnterprise Agreement billing accounts, you only see the option from the smart viewDownload pane when using a supported scope.


Screenshot showing the Download - Open in Power BI options.


Regardless of whether you start on smart or customizable views, if you need moredetails, we recommend that you export raw details for full flexibility. Smart views includethe option under the Automate the download section.

Screenshot showing the Download - Automate the download options.


Understand your forecast

Forecast costs are available from both smart and custom views. In either case, theforecast is calculated the same way based on your historical usage patterns for up to ayear in the future.

Your forecast is a projection of your estimated costs for the selected period. Yourforecast changes depending on what data is available for the period, how long of aperiod you select, and what filters you apply. If you notice an unexpected spike or dropin your forecast, expand the date range and use grouping to identify large increases ordecreases in historical cost. You can filter them out to normalize the forecast.

When you select a budget in a custom view, you can also see if or when your forecastwould exceed your budget.

More information


For more information about using features in costs analysis, see the following articles:

For built-in views, see Use built-in views in Cost analysis.
To learn more about customizing views, see Customize views in cost analysis.
Afterward you can Save and share customized views.


If you need advanced reporting outside of cost analysis, like grouping by multipleattributes or fully customizable reports, you can use:

Power BI Desktop
Cost Management Power BI App
Usage data from exports or APIs
See Choose a cost details solution to help you determine if exports from theAzure portal or if cost details from APIs are right for you.





Be sure to configure subscription anomaly alerts and set up a budget to help driveaccountability and cost control.

Next steps

Advance to the first tutorial to learn how to create and manage budgets.

Create and manage budgets


Use built-in views in Cost analysis

Article
09/09/2022


Cost Management includes several tools to help you view and monitor your cloud costs.
As you get started, cost analysis is the first one you should familiarize yourself with. Andwithin cost analysis, you'll start with built-in views. This article helps you understandwhen to use which view, how each one provides unique insights about your costs andrecommended next steps to investigate further.

Access built-in views

When you're in classic Cost analysis, you can access the preview views at the top of thepage with the Cost by resource list.

Screenshot showing the Cost by resource list.


Analyze resource costs

Cost Management offers two views to analyze your resource costs:

Cost by resource
Resources (preview)


Both views are only available when you have a subscription or resource group scopeselected.

The classic Cost by resource view shows a list of all resources. Information is shown intabular format.


Screenshot showing an example of the Cost by resource view.


The preview Resources view shows a list of all resources, including deleted resources.
The view is like the Cost by resource view in classic cost analysis. Compared to theclassic Cost by resource view, the new view:

Has optimized performance and loads resources faster. It better groups togetherrelated costs. Azure and Marketplace costs are grouped together.
Provides improved troubleshooting details.
Shows grouped Azure and Marketplace costs together per resource.
Shows resource types with icons.
Includes a simpler custom date range selection with support for relative dateranges.
Allows you to customize the download to exclude nested details. For example,
resources without meters in the Resources view.
Provides smart insights to help you better understand your data, like subscriptioncost anomalies.


Use either view to:

Identify top cost contributors by resource.
Understand how you're charged for a resource.
Find the biggest opportunities to save money.
Stop or delete resources that shouldn't be running.
Identify significant month-over-month changes.
Identify and tag untagged resources.



Screenshot showing an example of the Resources view.


Analyze resource group costs

The Resource groups view separates each resource group in your subscription,
management group, or billing account showing nested resources.

Use this view to:

Identify top cost contributors by resource group.
Find the biggest opportunities to save money.
Help perform chargeback by resource group.
Identify significant month-over-month changes.
Identify and tag untagged resources using resource group tags.



Screenshot showing an example of the Resource groups view.


Analyze your subscription costs

The Subscriptions view is only available when you have a billing account ormanagement group scope selected. The view separates costs by subscription andresource group.

Use this view to:

Identify top cost contributors by subscription.
Find the biggest opportunities to save money.
Help perform chargeback by resource group.
Identify significant month-over-month changes.
Identify and tag untagged resources using resource subscription tags.



Screenshot showing an example of the Subscriptions view.


Review reservation resource utilization

The Reservations view provides a breakdown of amortized reservation costs, allowingyou to see which resources are consuming each reservation.

The view shows amortized cost for the last 30 days with a breakdown of the resourcesthat utilized each reservation during that time. Any unused portion of the reservation isalso available when viewing cost for billing accounts and billing profiles.

Use this view to:

Identify under-utilized reservations.
Identify significant month-over-month changes.
Help perform chargeback for reservations.


Understand amortized costs

Amortized cost breaks down reservation purchases into daily chunks and spreads themover the duration of the reservation term. For example, instead of seeing a $365purchase on January 1, you'll see a $1.00 purchase every day from January 1 toDecember 31. In addition to basic amortization, these costs are also reallocated andassociated by using the specific resources that used the reservation. For example, if that$1.00 daily charge was split between two virtual machines, you'd see two $0.50 chargesfor the day. If part of the reservation isn't utilized for the day, you'd see one $0.50


charge associated with the applicable virtual machine and another $0.50 charge with acharge type of UnusedReservation. Unused reservation costs can be seen only whenviewing amortized cost.

Because of the change in how costs are represented, it's important to note that actualcost and amortized cost views will show different total numbers. In general, the totalcost of months with a reservation purchase will decrease when viewing amortized costs,
and months following a reservation purchase will increase. Amortization is available onlyfor reservation purchases and doesn't apply to any other purchases.

Screenshot showing an example of the Reservations view.


Break down product and service costs

The Services view shows a list of your services and products. This view is like the Invoicedetails view in classic cost analysis. The main difference is that rows are grouped byservice, making it simpler to see your total cost at a service level. It also separatesindividual products you're using in each service.

Use this view to:

Identify top cost contributors by service.
Find the biggest opportunities to save money.



Screenshot showing an example of the Services view.


Review current cost trends

Use the Accumulated costs view to:

Determine whether your current month's costs are on track with your expectations.
For example, forecast, budget, and credit.


Screenshot showing an example of the Accumulated Costs view.


Compare monthly service run rate costs


Use the Cost by service view to:

Review month-over-month changes in cost.


Screenshot showing an example of the Cost by service view.


Reconcile invoiced usage charges

Use the Invoice details view to:

Review and reconcile billed charges.


Screenshot showing an example of the Invoice details view.





Next steps

Now that you're familiar with using built-in views, read about Saving and sharingcustomized views.
Learn about how to Customize views in cost analysis



Customize views in cost analysis

Article
09/09/2022


This article helps you customize views in cost analysis to understand how you're beingcharged and to investigate unexpected changes.

Prerequisites

To customize views, you must have at least the Cost Management Reader (orContributor) role.

You should be familiar with the information at Quickstart: Explore and analyze costs withcost analysis.

Get started with customizing views

Customizing views in cost analysis includes anything from tweaking display settings tochanging what data gets included or how it's summarized. You customize views whentrying to understand what you're spending and where the costs originated. For example,
you can drill into data, apply specific filters or groupings, or change display settings, likewhether to view a chart or table. The following sections cover each of thesecustomization options.

Group costs

Use the Group by option to group common properties so that you get a break down ofcosts and to identify top contributors. It should be your first change when drilling intodata because it helps you identify the largest changes. To group by resource tags, forexample, select the tag key you want to group by. Costs are broken down by each tagvalue, with an extra segment for resources that don't have that tag applied.

Most Azure resources support tagging. However, some tags aren't available in CostManagement and billing. Additionally, resource group tags aren't supported. Supportfor tags applies to usage reported after the tag was applied to the resource. Tags aren'tapplied retroactively for cost rollups.

Here's a view of Azure service costs for the current month, grouped by Service name.


Screenshot showing costs for the current month grouped by Service name.


The following image shows resource group names. You can group by tag to view totalcosts per tag or group by Resource group name.

Screenshot showing resource group names. 


When you're grouping costs by a specific attribute, the top 10 cost contributors areshown from highest to lowest. If there are more than 10, the top nine cost contributorsare shown with an Others group that represents all remaining groups combined. When


you're grouping by tags, an Untagged group appears for costs that don't have the tagkey applied. Untagged is always last, even if untagged costs are higher than taggedcosts. Untagged costs will be part of Others, if 10 or more tag values exist. To viewwhat's grouped into Others , either select that segment to apply a filter or switch to thetable view and change granularity to None to see all values ranked from highest tolowest cost.

Classic virtual machines, networking, and storage resources don't share detailed billingdata. They're merged as Classic services when grouping costs.

Cost analysis doesn't support grouping by multiple attributes. To work around it, youcan apply a filter for a desired attribute and group by the more detailed attribute. Forinstance, filter down to a specific resource group, then group by resource.

Pivot charts under the main chart show different groupings, which give you a broaderpicture of your overall costs for the selected time period and filters. Select a property ortag to view aggregated costs by any dimension.

Screenshot showing pivot charts.


Select a date range

There are many cases where you need deeper analysis. Customization starts at the topof the page, with the date selection.

Cost analysis shows data for the current month by default. Use the date selector toswitch to common date ranges quickly. Examples include the last seven days, the lastmonth, the current year, or a custom date range. Pay-as-you-go subscriptions alsoinclude date ranges based on your billing period, which isn't bound to the calendarmonth, like the current billing period or last invoice.


Screenshot showing the date selector.


Filter charges

Add filters to narrow down or drill into your specific charges. It's especially helpful whentrying to understand an unexpected change. Start by selecting the Add filter pill, thenselect the desired attribute, and lastly select the options you want to filter down to. Yourview will automatically update once you've applied the filter.


You can add multiple filters. As you add filters, you'll notice that the available values foreach filter include the previously selected filters. For instance, if you apply a resourcegroup filter, then add a resource filter, the resource filter options will only showresources in the selected resource group.

When you view charts, you can also select a chart segment to apply a filter. Afterselecting a chart segment, you should consider changing the group by attribute to seeother details about the attribute you selected.

Switch between actual and amortized cost

By default, cost analysis shows all usage and purchase costs as they're accrued and willshow on your invoice, also known as Actual cost. Viewing actual cost is ideal forreconciling your invoice. However, purchase spikes in cost can be alarming when you'rekeeping an eye out for spending anomalies and other changes in cost. To flatten outspikes caused by reservation purchase costs, switch to Amortized cost.

Screenshot showing the metric selector.


Amortized cost breaks down reservation purchases into daily chunks and spreads themover the duration of the reservation term. Most reservation terms are one or three years.
Let's look at a one-year reservation example. Instead of seeing a $365 purchase onJanuary 1, you'll see a $1.00 purchase every day from January 1 to December 31. Inaddition to basic amortization, these costs are also reallocated and associated by usingthe specific resources that used the reservation. For example, if that $1.00 daily chargewas split between two virtual machines, you'd see two $0.50 charges for the day. If partof the reservation isn't utilized for the day, you'd see one $0.50 charge associated withthe applicable virtual machine and another $0.50 charge with a charge type ofUnusedReservation. Unused reservation costs can be seen only when you viewamortized cost.

If you buy a one-year reservation on May 26 with an upfront payment, the amortizedcost is divided by 365 (assuming it's not a leap year) and spread from May 26 throughMay 25 of the next year. If you pay monthly, the monthly fee is divided by the numberof days in that month. The free is spread evenly across May 26 through June 25, with thenext month's fee spread across June 26 through July 25.


Because of the change in how costs are represented, it's important to note that actualcost and amortized cost views will show different total numbers. In general, the totalcost of months with a reservation purchase will decrease when you view amortizedcosts, and months following a reservation purchase will increase. Amortization isavailable only for reservation purchases and doesn't apply to Azure Marketplacepurchases at this time.

Select a currency

Costs are shown in your billing currency by default. If you have charges in multiplecurrencies, costs will automatically be converted to USD. If you have any non-USDcharges, you can switch between currencies in the total KPI menu. You may see optionslike GBP only to view only the charges in that one currency or All costs in USD to viewthe normalized costs in USD. You can't view costs normalized to other currencies today.

Screenshot showing the currency selector. 


Select a budget

When you view a chart, it can be helpful to visualize your charges against a budget. It'sespecially helpful when showing accumulated daily costs with a forecast trendingtowards your budget. If your costs go over your budget, you'll see a red critical icon nextto your budget. If your forecast goes over your budget, you'll see a yellow warning icon.

When you view daily or monthly costs, your budget may be estimated for the period.
For instance, a monthly budget of $31 will be shown as $1/day (est). Note your budget


won't be shown as red when it exceeds this estimated amount on a specific day ormonth.

Budgets that have filters aren't currently supported in cost analysis. You won't see themin the list. Budgets on lower-level scopes are also not shown in cost analysis today. Toview a budget for a specific scope, change scope using the scope picker.

Change granularity

Use Granularity to indicate how you want to view cost over time. The lowest level youcan view is Daily costs. You can view daily costs for up to 3 months or 92 consecutivedays. If you select more than 92 days, cost analysis switches to Monthly granularity. Itupdates your date range to include the start and end of the selected months to providethe most accurate picture of your monthly costs. You can view up to 12 months ofmonthly costs.

If you'd like to view a running total of charges on either a daily or monthly basis, selectAccumulated. Accumulated is especially helpful when you view your forecast as it helpsyou see the trend over time.

If you'd like to view the total for the entire period (no granularity), select None.
Selecting no granularity is helpful when grouping costs by a specific attribute in either achart or table.

Visualize costs in a chart

Cost analysis supports the following chart types:

Area charts are ideal for showing a running total with forecast trending towards abudget.
Line charts are ideal for reviewing relative changes. Line charts aren't stacked,
which helps spot changes easily.
Column (stacked) charts are ideal for reviewing your daily or monthly run rate. Itshows a breakdown by some attribute to easily spot which group has the mostcharges. Groups are sorted from largest to smallest from left-to-right, bottom-to-
top.
Column (grouped) charts are helpful when you view grouped costs with nogranularity.


View costs in table format


You can view the full dataset for any view. Whichever selections or filters that you applyaffect the data presented. To see the full dataset, select the chart type list and thenselect Table view.

Screenshot showing the table view.


Next steps

Learn about Saving and sharing customized views.



Save and share customized views

Article
03/10/2023


Cost analysis is used to explore costs and get quick answers for things like finding thetop cost contributors. Or, understanding how you're charged for the services you use. Asyou analyze cost, you may find specific views you want to save or share with others.

Save and share cost views

A view is a saved query in Cost Management. When you save a view, all settings in costanalysis are saved, including filters, grouping, granularity, the main chart type, anddonut charts. Underlying data isn't saved. Only you can see private views, whileeveryone with Cost Management Reader access or greater to the scope can see sharedviews.

Check out the Sharing and saving views video.

After you save a view, you can share a link to it with others using the Share command.
The link is specific to your current scope and view configuration. The link doesn't grantothers access to the view itself, which may change over time, or the underlying data. Ifyou don't have access to the scope, an access denied message is shown. Werecommend using the Cost Management Contributor role to allow others to save andshare views with others.

You can also pin the current view to an Azure portal dashboard. Pinning only includes asnapshot of the main chart or table and doesn't update when the view is updated. Apinned dashboard isn't the same thing as a saved view.

To save a view

1. In cost analysis, make sure that the settings that you want saved are chosen.
2. Select the Save command at the top of the page to update your current view orSave as to save a new view.



Screen shot showing the view save options.
3. Enter a name for the view and then select Save.
Screen shot showing Save box where you enter a name to save.
4. After you save a view, it's available to select from the View menu.
Screen shot showing the View list.


You can save up to 100 private views across all scopes for yourself and up to 100 sharedviews per scope that anyone with Cost Management Reader or greater access can use.

To share a view

1. In cost analysis, ensure that the currently selected view is the one that you want toshare.
2. Select the Share command at the top of the page.



3. In the Share box, copy the URL and then select OK.
Screen shot showing the Share box.
4. You can paste the URL using any application that you like to send to others.


If you need to generate a link to a view programmatically, use one of the followingformats:

View configuration – https://<portal-domain>/@<directory-
domain>/#blade/Microsoft_Azure_CostManagement/Menu/open/costanalysis/scope/<scope-id>/view/<view-config>
Saved view – https://<portal-domain>/@<directory-
domain>/#blade/Microsoft_Azure_CostManagement/Menu/open/costanalysis/scope/<scope-id>/viewId/<view-id>


Use the following table for each property in the URL.

URLpropertyDescriptionportal-
domainPrimary domain for the Azure portal. For example, portal.azure.com orportal.azure.us).
directory-
domainDomain used by your Azure Active Directory. You can also use the tenant ID. If it'somitted, the portal tries to use the default directory for the user that selected the link- it might differ from the scope.
scope-idFull Resource Manager ID for the resource group, subscription, management group,
or billing account you want to view cost for. If not specified, Cost Management usesthe last view the user used in the Azure portal. The value must be URL encoded.
view-
configEncoded view configuration. See the following details. If not specified, cost analysisuses the view-id parameter. If neither are specified, cost analysis uses the built-inAccumulated cost view.
view-idFull Resource Manager ID for the private or shared view to load. This value must beURL encoded. If not specified, cost analysis uses the view parameter. If neither arespecified, cost analysis uses the built-in Accumulated cost view.

The view-config parameter is an encoded version of the JSON view configuration. Formore information about the view body, see the Views API reference. To learn how tobuild specific customizations, pin the desired view to an empty Azure portal dashboard,
then download the dashboard JSON to review the JSON view configuration.


After you have the desired view configuration:

1. Use Base 64 encode for the JSON view configuration.
2. Use Gzip to compress the encoded string.
3. URL-encode the compressed string.
4. Add the final encoded string to the URL after the /view/ parameter.


Pin a view to the Azure portal dashboard

As mentioned previously, pinning a view to an Azure portal dashboard only saves themain chart or table. It's essentially a thumbnail you can select to get back to the viewconfiguration in cost analysis. Keep in mind the dashboard tile is a copy of your viewconfiguration – if you save a view that was previously pinned, the pinned tile doesn'tupdate. To update the tile, pin the saved view again.

To pin cost analysis to a dashboard

1. In cost analysis, ensure that the currently selected view is the one that you want topin.
2. To the right of your billing scope or subscription name, select the Pin symbol.
3. In the Pin to dashboard window, choose Existing to pin the current view to theexisting dashboard or choose Create new to pin the current view to a newdashboard.
Screen shot showing the Pin to dashboard page.
4. Select Private to if you don't want to share the dashboard and then select Pin orselect Shared to share the dashboard with others and then select Pin.


To view the dashboard after you've pinned it, from the Azure portal menu, selectDashboard.


Screen shot showing the saved Dashboard page.


To rename a tile

1. From the dashboard where your tile is pinned, select the title of the tile you wantto rename. This action opens cost analysis with that view.
2. Select the Save command at the top of the page.
3. Enter the name of the tile you want to use.
4. Select Save.
5. Select the Pin symbol to the right of the page header.
6. From the dashboard, you can now remove the original tile.


For more advanced dashboard customizations, you can also export the dashboard,
customize the dashboard JSON, and upload a new dashboard. Dashboard creations caninclude other tile sizes or names without saving new views. For more information, seeCreate a dashboard in the Azure portal.

Download data or charts

When you want to share information with others that don't have access to the scope,
you can download the view in PNG, Excel, and CSV formats. Then you can share it withthem by email or other means. The downloaded data is a snapshot, so it isn'tautomatically updated.


Screen shot showing the Download page.


When you download data, cost analysis includes summarized data as it's shown in thetable. The cost by resource view includes all resource meters in addition to the resourcedetails. If you want a download of only resources and not the nested meters, use thecost analysis preview. You can access the preview from the Cost by resource menu atthe top of the page, where you can select the Resources, Resource groups,
Subscriptions, Services, or Reservations view.

If you need more advanced summaries or you're interested in raw data that hasn't beensummarized, schedule an export to publish raw data to a storage account on a recurringbasis.

Subscribe to scheduled alerts

In addition to saving and opening views repeatedly or sharing them with othersmanually, you can also subscribe to updates or a recurring schedule to get alerted ascosts change. You can also set up alerts to be shared with others who may not havedirect access to costs in the portal.

To subscribe to scheduled alerts

1. In Cost analysis, select any chart view you want to subscribe to or create and save anew chart view.
Built-in views (for example, Accumulated costs, Daily costs, or Cost by service)
can't be changed. If you need to change the date range, currency,
amortization, or any other setting, you need to save that as a private orshared view.



2. Select Subscribe at the top of the page.
3. Select + Add at the top of the list of alerts.
4. Specify the desired email settings and select Save.
The Name helps you distinguish the different emails setup for the currentview. Use it to indicate audience or purpose of this specific email.
The Subject is what people see when they receive the email.






You can include up to 20 recipients. Consider using a distribution list if youhave a large audience. To see how the email looks, start by sending it only toyourself. You can update it later.
The Message is shown in the email to give people more context about whythey're receiving the email. You may want to include what it covers, whorequested it, or who to contact to make changes.
To share data with people who don't have access to the scope or view, selectAdd a CSV download link to include an unauthenticated link to the data.
To allow people with write access to the scope to modify the emailconfiguration settings, clear the Make this schedule private option. Doing soallows billing account admins or Cost Management Contributors to edit thealert, in addition to the person who created it. By default, the option isselected, meaning that only the creator of the scheduled alert can see or editit.
The Start date is when you start receiving the email. It defaults to the currentday.
The End date is when you receive the last email. It can be up to one yearfrom the current day, which is the default. You can update it later.
The Frequency indicates how often you want the email to be sent. It's basedon the start date, so if you want a weekly email on a different day of theweek, change the start date first. To get an email after the month is closed,
select After invoice finalized. Ensure your view is looking at last month. If youuse the current month, it only sends you the first few days of the month. Bydefault, all emails are sent at 8:00 AM local time. To customize any of theoptions, select Custom.


Note

Scheduled alerts are set to your local time. However emails are sent at a fixedtime in the UTC time zone. Daylight savings time isn't accounted for, whichmight result in a one-hour variation in your actual delivery time.


5. After you save the alert, a list of configured alerts for the current view is shown. Ifyou want to see a preview of the email, select the row and select Send now at thetop to send the email to all recipients.


Keep in mind that if you choose to include a link to data, anyone who receives the emailhas access to the data included in that email. Data expires after seven days.

Frequently asked questions


The following sections cover the most commonly asked questions and answers aboutsaving and sharing customized views in Cost Management.

Why am I not receiving emails from scheduled alerts?

There could be a few reasons why you're not receiving alert emails. Try the followingactions:

Confirm that your email address is shown as a recipient and that it was enteredcorrectly.
Check your spam or junk mail folder for emails from microsoft-
noreply@microsoft.com.
Check to see if the alert is expired, disabled, or deleted. You can extend, reenable,
or create a new scheduled alert to fix the problem.
Work with your admin to reenable the view charges policy in the Azure portal. Thepolicy applies to indirect Enterprise Agreements and to Microsoft CustomerAgreements with a Microsoft partner.


Why can't I use the Subscribe command in cost analysis?

The Subscribe command is currently unavailable for two scenarios in cost analysis:

When using a management group scope
When working with table views


How far in the future can I set the end date?

The end date can be anywhere from one day to one year from today or the start date,
whichever is later. You can change or extend it to one year from the current day until theschedule expires. This limitation is in place to ensure that alert subscriptions remainrelevant and accurate.

For example, if you create a scheduled alert on March 3, 2023, the end date can be anydate from March 4, 2023, to March 3, 2024.

It's important to note that you can edit the end date of an existing scheduled alert atany time. If the end date has already passed and you want to continue receiving thealert, you must edit the scheduled alert with a future end date.

When do I receive alert emails?


You can choose when emails arrive by setting the Frequency to Custom. You shouldreceive the email before that time or within an hour of that time. If there are unforeseenissues, emails could be delayed for up to a day.

Although the configuration of scheduled alerts considers your local time, the actualsending of emails happens at the same time in the UTC time zone. The time conversiondoesn't account for daylight savings time. It might result in a one-hour variation in youractual delivery time.

Next steps

For more information about creating dashboards, see Create a dashboard in theAzure portal.
To learn more about Cost Management, see Cost Management + Billingdocumentation.



Identify anomalies and unexpectedchanges in cost

Article
04/05/2023


The article helps you identify anomalies and unexpected changes in your cloud costsusing Cost Management and Billing. You start with anomaly detection for subscriptionsin cost analysis to identify any atypical usage patterns based on your cost and usagetrends. Then, you learn how to drill into cost information to find and investigate costspikes and dips.

You can also create an anomaly alert to automatically get notified when an anomaly isdetected.

In general, there are three types of changes that you might want to investigate:

New costs—For example, a resource that was started or added such as a virtualmachine. New costs often appear as a cost starting from zero.
Removed costs—For example, a resource that was stopped or deleted. Removedcosts often appear as costs ending in zero.
Changed costs (increased or decreased)—For example, a resource was changed insome way that caused a cost increase or decrease. Some changes, like resizing avirtual machine, might be surfaced as a new meter that replaces a removed meter,
both under the same resource.


Identify cost anomalies

The cloud comes with the promise of significant cost savings compared to on-premisescosts. However, savings require diligence to proactively plan, govern, and monitor yourcloud solutions. Even with proactive processes, cost surprises can still happen. Forexample, you might notice that something has changed, but you're not sure what. UsingCost Management anomaly detection for your subscriptions can help minimizesurprises.

Whether you know if you have any existing cost anomalies or not, Cost analysis informsyou if it finds anything unusual as part of Insights. If not, Cost analysis shows Noanomalies detected.

View anomalies in Cost analysis


Anomaly detection is available in Cost analysis (preview) when you select a subscriptionscope. You view your anomaly status as part of Insights. And as with other insights,
the experience is simple.

In the Azure portal, navigate to Cost Management from Azure Home. Select asubscription scope and then in the left menu, select Cost analysis. In the view list, selectany view under Preview views. In the following example, the Resources preview view isselected. If you have a cost anomaly, you see an insight.

Example screenshot showing an insight.


If you don't have any anomalies, you see a No anomalies detected insight, confirmingthe dates that were evaluated.

Example screenshot showing No anomalies detected message.


Drill into anomaly details

To drill into the underlying data for something that has changed, select the insight link.
It opens a view in classic cost analysis where you can review your daily usage byresource group for the time range that was evaluated.


Continuing from the previous example of the anomaly labeled Daily run rate down748% on Sep 28, let's examine its details after the link is selected. The followingexample image shows details about the anomaly. Notice the large increase in costs, acost spike, and eventual drop in from a temporary, short-lived resource.

Example screenshot showing a cost increase from a short-lived resource.


Cost anomalies are evaluated for subscriptions daily and compare the day's total usageto a forecasted total based on the last 60 days to account for common patterns in yourrecent usage. For example, spikes every Monday. Anomaly detection runs 36 hours afterthe end of the day (UTC) to ensure a complete data set is available.

The anomaly detection model is a univariate time-series, unsupervised prediction andreconstruction-based model that uses 60 days of historical usage for training, thenforecasts expected usage for the day. Anomaly detection forecasting uses a deeplearning algorithm called WaveNet. It's different than the Cost Management forecast.
The total normalized usage is determined to be anomalous if it falls outside theexpected range based on a predetermined confidence interval.

Anomaly detection is available to every subscription monitored using the cost analysispreview. To enable anomaly detection for your subscriptions, open the cost analysispreview and select your subscription from the scope selector at the top of the page. Yousee a notification informing you that your subscription is onboarded and you start tosee your anomaly detection status within 24 hours.

Create an anomaly alert


You can create an alert to automatically get notified when an anomaly is detected.
Creating an anomaly alert requires the Cost Management Contributor or greater role orthe Microsoft.CostManagement/scheduledActions/write permission for custom roles. Formore information, see Feature behavior for each role.

An anomaly alert email includes a summary of changes in resource group count andcost. It also includes the top resource group changes for the day compared to theprevious 60 days. And, it has a direct link to the Azure portal so that you can review thecost and investigate further.

1. From Azure Home, select Cost Management under Tools.
2. Verify you've selected the correct subscription in the scope at the top of the page.
3. In the left menu, select Cost alerts.
4. On the Cost alerts page, select + Add > Add anomaly alert.
5. On the Subscribe to emails page, enter required information and then select Save.Screenshot showing the Subscribe to emails page where you enter notification information for an alert.


Here's an example email generated for an anomaly alert.


Screenshot showing an example anomaly alert email.


Manually find unexpected cost changes

Let's look at a more detailed example of finding a change in cost. When you navigate toCost analysis and then select a subscription scope, you start with the Accumulated costsview. The following screenshot shows an example of what you might see.


Example screenshot showing the accumulated costs view.


With the default view and current month (March 2022), the example image doesn'tshow any dips or spikes.

Change the view to Daily costs and then expand the date range to Last year (2021).
Then, set the granularity to Monthly. In the following image, notice that there's asignificant increase in costs for the arcticmustang resource group starting in July.


Example screenshot showing an increase in monthly costs.


Let's examine the increase in cost for the resource group more fully. To drill into thetime frame of the change, change the date range. In the following example, we set acustom date range from June to July 2021 and then set the Granularity to Daily. In theexample, the daily cost for the resource group was about $4.56. On June 30, the costincreased to $20.68. Later on July 1 and after, the daily cost went to $30.22.

Example screenshot showing an increase in daily costs.


So far, we've found an increase in cost for the articmustang resource group at the endof June and the beginning of July. You might notice that the cost increase spanned over


two days. The change took two days because a change in the middle of a day doesn'tshow the full effect of that change until the following full day.

Let's continue drilling into the data to find out more about the cost increase. Select theitem that increased in cost (articmustang) to automatically set a filter for the resourcegroup name. Then, change the Group by list to Resource. Then set the date range to asmaller period. For example, June 28 to July 4. In the following example image, theincrease in cost is clearly shown. The type of resource is shown asmicrosoft.network/virtualnetworkgateways.

Example screenshot showing increased cost for a resource type.


Next, select the resource in the chart that increased in cost articring to set anotherfilter for the resource. Now, costs are shown for just that resource. Then, set the Groupby list to Meter.


Example screenshot showing increased cost for a specific resource.


In the previous example, you see that the virtual private network resource namedVpnGw1 stopped getting used on June 30. On June 30, a more expensive virtual privatenetwork resource named VpnGw3 started getting used.

At this point, you know what changed and the value that costs changed. However, youmight not know why the change happened. At this point, you should contact the peoplethat created or used the resource. Continue to the next section to learn more.

Find people responsible for changed resourceuse

Using Cost analysis, you might have found resources that had sudden changes in usage.
However, it might not be obvious who is responsible for the resource or why the changewas made. Often, the team responsible for a given resource knows about changes thatwere made to a resource. Engaging them is useful as you identify why charges mightappear. For example, the owning team may have recently created the resource, updatedits SKU (thereby changing the resource rate), or increased the load on the resource dueto code changes.

The Get resource changes article for Azure Resource Graph might help you to findadditional information about configuration changes to resources.

Continue reading the following sections for more techniques to determine who owns aresource.




Analyze the audit logs for the resource

If you have permission to view a resource, you should be able to access its audit logs.
Review the logs to find the user who was responsible for the most recent changes to aresource. To learn more, see View and retrieve Azure Activity log events.

Analyze user permissions to the resource's parent scope

People that have write access to a subscription or resource group typically haveinformation about the resources that were created or updated. They should be able toexplain the purpose of a resource or point you to the person who knows. To identify thepeople with permissions for a subscription scope, see Check access for a user to Azureresources. You can use a similar process for billing scopes, resource groups, andmanagement groups.

Examine tagged resources

If you have an existing policy of tagging resources, the resource might be tagged withidentifying information. For example, resources might be tagged with owner, costcenter, or development environment information. If you don't already have a resourcetagging policy in place, consider adopting one to help identify resources in the future.

Get help to identify charges

If you've used the preceding strategies and you still don't understand why you receiveda charge or if you need other help with billing issues, create a support request.

Next steps

Learn about how to Optimize your cloud investment with Cost Management.



Common cost analysis uses

Article
06/15/2023


Cost Management users often want answers to questions that many others ask. Thisarticle walks you through getting results for common cost analysis tasks in CostManagement.

View forecast costs

Forecast costs are shown in cost analysis areas for area and stacked column views. Theforecast is based on your historical resource use. Changes to your resource use affectforecast costs.

In the Azure portal, navigate to cost analysis for your scope. For example: CostManagement + Billing > Cost Management > Cost analysis.

In the default view, the top chart has the Actual/Amortized cost and forecast costsections. The solid color of the chart shows your Actual/Amortized cost. The shadedcolor shows the forecast cost.

Forecast cost


View forecast costs grouped by service

The default view doesn't show forecast costs group by a service, so you have to add agroup by selection.

In the Azure portal, navigate to cost analysis for your scope. For example: CostManagement + Billing > Cost Management > Cost analysis.


Select Group by > Service name.

The view shows your costs grouped for each service. The forecast cost isn't calculatedfor each service. It's projected for the Total of all your services.

Grouped forecast cost


View forecast costs for a service

You can view forecast costs narrowed to a single service. For example, you might wantto see forecast costs for just virtual machines.

1. In the Azure portal, navigate to cost analysis for your scope. For example: CostManagement + Billing > Cost Management > Cost analysis.
2. Select Add filter and then select Service name.
3. In the choose list, select a service. For example select, virtual machines.


Review the actual cost for selection and the forecast cost.

You can add more customizations to the view.

1. Add a second filter for Meter and select a value to filter for an individual type ofmeter under your selected service name.
2. Group by Resource to see the specific resources that are accruing cost. Theforecast cost isn't calculated for each service. It's projected for the Total of all your



resources.


Forecast cost for a service


View your Azure and AWS costs together

To view Azure and AWS costs together, you use management group scopes in Azure.

1. Create a management group or select an existing one.
2. Assign the existing Azure subscriptions that you need to the management group.
3. Assign the same management group to the linked account of the connector.
4. Go to cost analysis and select Accumulated costs.
5. Select Group by - Provider.


View New Commerce license and consumptioncosts

You can view your New Commerce license and consumption products along with yourAzure charges in Cost analysis. Select the filter list, then select Provider, and thenchoose from the list of options. For example, Microsoft 365 and Dynamics 365.


Screenshot showing Provider filter selection.


You can narrow to specific seat-based or consumption charges by using the Chargetype filter and selecting values of Purchase or Usage.

Screenshot showing Charge type filter selection.


Currently, purchasing New Commerce products is only available for Partners.

View cost breakdown by Azure service

Viewing costs by an Azure service can help you to better understand the parts of yourinfrastructure that cost the most. For example, VM compute costs might be small. Yetyou might accrue significant networking costs because of the amount of informationemitting from the VMs. Understanding the primary cost drivers of your Azure services isessential so that you can adjust service usage, as needed.

1. In the Azure portal, navigate to cost analysis for your scope. For example: CostManagement + Billing > Cost Management > Cost analysis.
2. Select Cost by service and then group by Service tier.
3. Change the view to Table.



Cost breakdown by Azure service


Review invoiced charges in Cost analysis

To view your invoice details in the Azure portal, navigate to Cost analysis for the scopeassociated with the invoice that you're analyzing. Select the Invoice details view. Invoicedetails show you the charges as seen on the invoice.

Example showing invoice details


Viewing invoice details, you can identify the service that has unexpected costs anddetermine which resources are directly associated with the resource in Cost analysis. Forexample, if you want to analyze charges for the Virtual Machines service, navigate to theAccumulated cost view. Then, set the granularity to Daily and filter charges Servicename: Virtual machines and group charges by Resource.


Example showing accumulated costs for virtual machines


View cost breakdown by Azure resource

Your services are built with Azure resources. Reviewing costs based on resources canhelp you quickly identify your primary cost contributors. If a service has resources thatare too expensive, consider making changes to reduce your costs.

The view is only available for subscription and resource group scopes.

1. In the Azure portal, navigate to cost analysis for your scope. For example: CostManagement + Billing > Cost Management > Cost analysis.
2. Select Cost by resource.
3. Change the view to Table.


View cost breakdown by Azure resource


View cost breakdown by selected dimensions


Dimensions allow you to organize your costs based on various metadata values shownin your charges. For example, you could group your costs by location.

1. In the Azure portal, navigate to cost analysis for your scope. For example: CostManagement + Billing > Cost Management > Cost analysis.
2. Select the Group by filter.
Select a Group by item
3. Optionally, you save the view for later use.
4. Select a pie chart below the graph to view more detailed data.
View cost breakdown by selected dimensions


View costs per day or by month

Looking at daily and monthly costs can help you to better understand if there's a time ofthe week or year where your costs are higher. If you have more customer traffic in a


holiday period, does that lead to a corresponding increase in your Azure costs? Is Fridaya more costly day than Monday?

1. In the Azure portal, navigate to cost analysis for your scope. For example: CostManagement + Billing > Cost Management > Cost analysis.
2. Set the Granularity to Monthly or Daily.


View costs per day


View your Spot VM charges

Spot VMs can provide large cost savings for workloads that can handle interruptions.
Workloads are run on unused Azure capacity. Since they can be evicted at any time,
Spot VMs get a significant discount. Use the following steps to view your Spot VMcharges.

1. In the Azure portal, navigate to cost analysis for your scope. For example, CostManagement + Billing > Cost Management > Cost analysis.
2. Add a filter for Pricing Model: Spot.



Example showing Spot VM filter


The Pricing Model dimension is also used to view on demand and reservation charges.

View your reservation charges

Reserved instances provide a way for you to save money with Azure. With reservations,
you spend money up front for a given number of resources over time. Cost analysisshows the charges as they appear on your bill. The charges are shown as actual costs oramortized over the course of your reservation period.

Note

Although you can buy a reservation with a pay-as-you-go (MS-AZR-0003P)
subscription, Cost Analysis doesn't support viewing amortized reservation costs. Ifyou try to view costs with the Amortized cost metric, you'll see the same results asActual Cost.

1. In the Azure portal, navigate to cost analysis for your scope. For example, CostManagement + Billing > Cost Management > Cost analysis.
2. Add a filter for Pricing Model: Reservation.
3. Under Scope and next to the cost shown, select the down arrow symbol, selecteither Actual cost or Amortized cost metric.


Select a cost metric


Each metric affects how data is shown for your reservation charges.

Actual cost - Shows the purchase as it appears on your bill. For example, if you bought aone-year reservation for $1200 in January, cost analysis shows a $1200 cost in the


month of January for the reservation. It doesn't show a reservation cost for othermonths of the year. If you group your actual costs by VM, then a VM that received thereservation benefit for a given month would have zero cost for the month.

Amortized cost - Shows a reservation purchase split as an amortized cost over theduration of the reservation term. Using the same example above, cost analysis shows avarying cost for each month throughout the year, because of the varying number ofdays in a month. If you group costs by VM in this example, you'd see cost attributed toeach VM that received the reservation benefit.

View your reservation utilization

After you buy a reservation, it's important to track its utilization so that you get whatyou paid for. For example, if you bought 10 VMs for a year and only use five of them,
then essentially half of the purchase is wasted. There are two different ways to assessyour utilization:

View unused RI costs in cost analysis

To identify how much cost is currently being wasted each month for your reservationpurchase, follow the steps below.

1. In the Azure portal, navigate to cost analysis for the scope where your reservationis applied. For example, Cost Management + Billing > Cost Management > Costanalysis.
2. Add a filter for Pricing Model: Reservation.
3. Select the Amortized Cost view.
4. Set the granularity to Monthly.
5. Set the time period to the current year or your reservation term.
6. Set the chart type to Column (stacked).
7. Group charges by Charge Type.
8. Review the results for unusedreservation values.



Example showing reservation use


View utilization in Reservations

For detailed instructions, see Optimize reservation use.

View costs for a specific tag

Many Azure users apply tags to their resources such as a cost center or developmentenvironment (production and test) to better categorize charges. Tags appear as adimension in cost analysis. You can use the dimension to gain insights into your customtagging categorizations.

Support for tags applies to usage reported after the tag was applied to the resource.
Tags aren't applied retroactively for cost rollups.

1. In the Azure portal, navigate to cost analysis for your scope. For example: CostManagement + Billing > Cost Management > Cost analysis.
2. Select Group by for your tag.


View costs for a specific tag


Download your usage details


Your usage details report file, in CSV format, provides a breakdown of all the chargesthat accrued towards an invoice. You can use the report to compare it to, and betterunderstand, your invoice. Each billed charge on your invoice corresponds to broken-
down charges in the usage report.

1. In the Azure portal, navigate to the Usage and Charges tab for a billing account orsubscription. For example: Cost Management + Billing > Billing > Usage +
charges.
2. Select the line item to download from and then select the download symbol.
Download usage and charges



3. Select the usage file to download.
Choose a usage file to download


View monthly EA cost breakdown

Your EA enrollment accrues costs for your entire organization. Understanding how costsaccrue and are invoiced over time helps you to engage the appropriate stakeholders toensure that costs are managed responsibly.

Costs are only shown for your active enrollment. If you transferred an enrollment(inactive) to a new one (active), costs for the previous enrollment aren't shown in CostManagement.

1. In the Azure portal, navigate to Cost Management + Billing > Overview.
2. Select Breakdown for the current month and view your Azure Prepayment(previously called monetary commitment) burn down.



EA costs overview - breakdown summary
3. Select the Usage and Charges tab and view the prior month's breakdown in thechosen timespan.
Usage and charges tab


View enrollment monthly cost by term

Use a graphical view of your enrollment's monthly costs to understand the cost trendsand invoiced amounts for a given period.

1. In the Azure portal, navigate to cost analysis for your scope. For example: CostManagement + Billing > Cost Management > Cost analysis.
2. Select your enrollment and set the enrollment term.



3. Set the granularity to monthly and then set the view to Column (stacked).


You can group by and filter your data for a more detailed analysis.

Monthly enrollment cost by term


View EA enrollment accumulated costs

View the net accumulated charges over time to understand overall expenditures for yourorganization for a given period.

1. In the Azure portal, navigate to cost analysis for your scope. For example: CostManagement + Billing > Cost Management > Cost analysis.
2. Select your enrollment and then view your current accumulated costs.


Enrollment accumulated costs


Next steps


If you haven't already completed the first quickstart for Cost Management, read itat Start analyzing costs.
Read the Cost Management documentation.



Create visuals and reports with theAzure Cost Management connector inPower BI Desktop

Article
03/20/2023


You can use the Azure Cost Management connector for Power BI Desktop to makepowerful, customized visualizations and reports that help you better understand yourAzure spend. The Azure Cost Management connector currently supports customers witha direct Microsoft Customer Agreement or an Enterprise Agreement (EA).

The Azure Cost Management connector doesn’t support pay-as-you-go MicrosoftCustomer Agreements or indirect Microsoft Customer Agreements. Microsoft PartnerAgreements are also not supported. If you have an unsupported agreement, you canuse Exports to save the cost data to a share and then connect to it using Power BI. Formore information, see Tutorial - Create and manage exported data from Azure CostManagement.

The Azure Cost Management connector uses OAuth 2.0 for authentication with Azureand identifies users who are going to use the connector. Tokens generated in thisprocess are valid for a specific period. Power BI preserves the token for the next login.
OAuth 2.0, is a standard for the process that goes on behind the scenes to ensure thesecure handling of these permissions. To connect, you must use an EnterpriseAdministrator account for Enterprise Agreements, or have appropriate permissions atthe billing account or billing profile levels for Microsoft Customer Agreements.

Note

This connector replaces the previously available Azure Consumption Insights andAzure Cost Management (Beta) connectors. Any reports created with the previousconnector must be recreated using this connector.

Connect using Azure Cost Management

To use the Azure Cost Management connector in Power BI Desktop, take the followingsteps:

1. In the Home ribbon, select Get Data.


2. Select Azure from the list of data categories.





3. Select Azure Cost Management.

Get data



4. In the dialog that appears, for the Choose Scope drop down, use Manually InputScope for Microsoft Customer Agreements, or use Enrollment Number forEnterprise Agreements (EA).




Connect to a Microsoft Customer Agreementaccount

This section describes the steps necessary to connect to a Microsoft CustomerAgreement account.

Connect to a billing account


To connect to a billing account, you need to retrieve your Billing account ID from theAzure portal:

1. In the Azure portal, navigate to Cost Management + Billing.


2. Select your Billing profile.


3. Under Settings in the menu, select Properties in the sidebar.


4. Under Billing profile, copy the ID.Screenshot of Cost management billing profile



5. For Choose Scope, select Manually Input Scope and input the connection string asshown in the example below, replacing {billingAccountId} with the data copiedfrom the previous steps.
/providers/Microsoft.Billing/billingAccounts/{billingAccountId}





Alternatively, for Choose Scope, select Enrollment Number and input the BillingAccount ID string as copied from the previous steps.


6. Enter the number of months and select OK.

Screenshot of Azure Cost Management with number of months input


Alternatively, if you want to download less than a month's worth of data you canset Number of months to zero, then specify a date range using Start Date and EndDate values that equate to less than 31 days.


7. When prompted, sign in with your Azure user account and password. You musthave access to the Billing account scope to successfully access the billing data.




Connect to a billing profile

To connect to a billing profile, you must retrieve your Billing profile ID and Billingaccount ID from the Azure portal:

1. In the Azure portal, navigate to Cost Management + Billing.


2. Select your Billing profile.


3. Under Settings in the menu, select Properties in the sidebar.


4. Under Billing profile, copy the ID.


5. Under Billing account, copy the ID.





Screenshot of Azure Cost Management billing account information



6. For Choose Scope, select Manually Input Scope and input the connection string asshown in the example below, replacing {billingAccountId} and {billingProfileId} withthe data copied from the previous steps.

/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}


7. Enter the number of months and select OK.


8. When prompted, sign in with your Azure user account and password. You musthave access to the Billing profile to successfully access the billing profile data.




Connect to an Enterprise Agreement account


To connect with an Enterprise Agreement (EA) account, you can get your enrollment IDfrom the Azure portal:

1. In the Azure portal, navigate to Cost Management + Billing.


2. Select your billing account.


3. On the Overview menu, copy the Billing account ID.


4. For Choose Scope, select Enrollment Number and paste the billing account IDfrom the previous step.


5. Enter the number of months and then select OK.

Screenshot shows the Azure Cost Management properties with a scope of Enrollment number.



6. When prompted, sign in with your Azure user account and password. You must usean Enterprise Administrator account for Enterprise Agreements.




Data available through the connector

Once you successfully authenticate, a Navigator window appears with the followingavailable data tables:

TableAccountTypeSupportedScopesDescriptionBalance summaryEA onlyEA EnrollmentSummary of the balance for the current billingmonth for Enterprise Agreements (EA).
Billing eventsMCAonlyBilling ProfileEvent log of new invoices, credit purchases,
etc. Microsoft Customer Agreement only.


TableAccountTypeSupportedScopesDescriptionBudgetsEA,
MCAEAEnrollment,MCABillingAccount,MCABilling ProfileBudget details to view actual costs or usageagainst existing budget targets.
ChargesMCAonlyMCA BillingProfileA month-level summary of Azure usage,
Marketplace charges, and charges billedseparately. Microsoft Customer Agreementonly.
Credit lotsMCAonlyMCA BillingProfileAzure credit lot purchase details for theprovided billing profile. Microsoft CustomerAgreement only.
PricesheetsEA,
MCAEAEnrollment,MCABilling ProfileApplicable meter rates for the provided billingprofile or EA enrollment.
RI chargesEA,
MCAEAEnrollment,MCABilling ProfileCharges associated to your Reserved Instancesover the last 24 months. This table is in theprocess of being deprecated, please use RItransactionsRIrecommendations(shared)
EA,
MCAEAEnrollment,MCABilling ProfileReserved Instance purchase recommendationsbased on all your subscription usage trendsfor the last 30 days.
RIrecommendations(single)
EA,
MCAEAEnrollment,MCABilling ProfileReserved Instance purchase recommendationsbased on your single subscription usagetrends for the last 30 days.
RI transactionsEA,
MCAEAEnrollment,MCABilling ProfileList of transactions for reserved instances onbilling account scope.
RI usage detailsEA,
MCAEAEnrollment,MCABilling ProfileConsumption details for your existingReserved Instances over the last month.
RI usagesummaryEA,
MCAEAEnrollment,MCABilling ProfileDaily Azure reservation usage percentage.


TableAccountTypeSupportedScopesDescriptionUsage detailsEA,
MCAEAEnrollment,MCABillingAccount,MCABilling ProfileA breakdown of consumed quantities andestimated charges for the given billing profileon EA enrollment.
Usage detailsamortizedEA,
MCAEAEnrollment,MCABillingAccount,MCABilling ProfileA breakdown of consumed quantities andestimated amortized charges for the givenbilling profile on EA enrollment.

You can select a table to see a preview dialog. You can select one or more tables byselecting the boxes beside their name and then select Load.

Screenshot shows the Navigator dialog box.


When you select Load, the data is loaded into Power BI Desktop.

When the data you selected is loaded, the data tables and fields are shown in the Fieldspane.




Considerations and limitations

The following considerations and limitations apply to the Azure Cost Management dataconnector:

Data row requests exceeding one million rows isn't supported by Power BI. Instead,
you can try using the export feature described in create and manage exported datain Azure Cost Management.


The Azure Cost Management data connector doesn't work with Office 365 GCCcustomer accounts.


Data refresh: The cost and usage data is typically updated and available in theAzure portal and supporting APIs within 8 to 24 hours, so we suggest youconstrain Power BI scheduled refreshes to once or twice a day.


Data source reuse: If you have multiple reports that are pulling the same data, anddon't need additional report-specific data transformations, you should reuse thesame data source, which would reduce the amount of time required to pull theUsage Details data.

For more information on reusing data sources, see the following:

Introduction to datasets across workspaces
Create reports based on datasets from different workspaces





You might receive a 400 bad request from the RI usage details when you try to refreshthe data if you've chosen date parameter greater than three months. To mitigate theerror, take the following steps:

1. In Power BI Desktop, select Home > Transform data.


2. In Power Query Editor, select the RI usage details dataset and select AdvancedEditor.


3. Update the Power Query code as shown in the following paragraph(s), which willsplit the calls into three-month chunks. Make sure you note and retain yourenrollment number, or billing account/billing profile ID.

For EA use the following code update:

let 
enrollmentNumber = "<<Enrollment Number>>", 
optionalParameters1 = [startBillingDataWindow = "-9", 
endBillingDataWindow = "-6"],



endBillingDataWindow = "-3"], 
source2 = AzureCostManagement.Tables("Enrollment Number", 
enrollmentNumber, 5, optionalParameters2), 
riusagedetails2 = source2{[Key="riusagedetails"]}[Data], 
source1 = AzureCostManagement.Tables("Enrollment Number", 
enrollmentNumber, 5, optionalParameters1), 
riusagedetails1 = source1{[Key="riusagedetails"]}[Data], 
optionalParameters2 = [startBillingDataWindow = "-6", 
riusagedetails = Table.Combine({riusagedetails1, riusagedetails2})
in 
riusagedetails
For Microsoft Customer Agreements use the following update:

let 
billingProfileId = "<<Billing Profile Id>>", 
optionalParameters1 = [startBillingDataWindow = "-9", 
endBillingDataWindow = "-6"], 
source1 = AzureCostManagement.Tables("Billing Profile Id", 
billingProfileId, 5, optionalParameters1), 
riusagedetails1 = source1{[Key="riusagedetails"]}[Data], 
optionalParameters2 = [startBillingDataWindow = "-6", 
endBillingDataWindow = "-3"], 
source2 = AzureCostManagement.Tables("Billing Profile Id", 
billingProfileId, 5, optionalParameters2), 
riusagedetails2 = source2{[Key="riusagedetails"]}[Data], 
riusagedetails = Table.Combine({riusagedetails1, riusagedetails2})
in 
riusagedetails
4. Once you've updated the code with the appropriate update from the previousstep, select Done and then select Close & Apply.




You might run into a situation where tags aren't working in the usage details or the tagscolumn can't be transformed to json. This issue stems from the current UCDD apireturning the tags column by trimming the start and end brackets, which results inPower BI being unable to transform the column because it returns it as a string. Tomitigate this situation, take the following steps.

1. Navigate to Query Editor.
2. Select the Usage Details table.
3. In the right pane, the Properties pane shows the Applied Steps. You need to add acustom column to the steps, after the Navigation step.
4. From the menu, select Add column > Add custom column



5. Name the column, for example you could name the column TagsInJson or whateveryou prefer, and then enter the following text in the query:
DAX```= "{"& [Tags] & "}"
6. Completing the previous steps creates a new column of tags in the json format
7. You can now transfer and expand the column as you need to.


Authentication issues encountered with Azure Active Directory guest accounts: Youmay have the appropriate permissions to access the enrollment or billing account, butreceive an authentication error similar to one of the following:

Access to the resource is forbidden
We couldn’t authenticate with the credentials provided. Please try again.


These errors could be the result of having a user account in a different Azure ActiveDirectory domain that has been added as a guest user.

For guest accounts: Use the following settings or options as you are prompted with theauthentication dialog when connecting with the Cost Management Power BI connector:

1. Select Sign-in
2. Select the Use another account (bottom of the dialog)
3. Select Sign-in options (bottom of the dialog box)
4. Select Sign into an organization
5. For Domain name, provide the Fully Qualified Domain Name (FQDN) of the AzureActive Directory domain into which you've been added as a guest.
6. Then, for Pick an account select the user account that you’ve previouslyauthenticated.


Next steps

You can connect to many different data sources using Power BI Desktop. For moreinformation, see the following articles:

What is Power BI Desktop?
Data Sources in Power BI Desktop
Shape and Combine Data with Power BI Desktop
Connect to Excel workbooks in Power BI Desktop
Enter data directly into Power BI Desktop



Analyze cost with the Cost ManagementPower BI App for Enterprise Agreements(EA)

Article
04/06/2023


This article explains how to install and use the Cost Management Power BI app. The apphelps you analyze and manage your Azure costs in Power BI. You can use the app tomonitor costs, usage trends, and identify cost optimization options to reduce yourexpenditures.

The Cost Management Power BI app currently supports only customers with anEnterprise Agreement.

The app limits customizability. If you want to modify and extend the default filters,
views, and visualizations to customize for your needs, use Cost Management connectorin Power BI Desktop instead. With the Cost Management connector you can joinadditional data from other sources to create customized reports to get holistic views ofyour overall business cost. The connector also supports Microsoft CustomerAgreements.

Note

Power BI template apps don't support downloading the PBIX file.

Prerequisites

A Power BI Pro license is required to install and use the app.
To connect to data, you must use an Enterprise Administrator account. TheEnterprise Administrator (read only) role is supported.


Installation steps

To install the app:

1. Open Cost Management Power BI App.


2. On the Power BI AppSource page, select Get it now.


3. Select Continue to agree to the terms of use and privacy policy.





4. In the Install this Power BI app box, select Install.


5. If needed, create a workspace and select Continue.


6. When installation completes, notification appears saying that your new app isready.


7. Select the app that you installed.


8. On the Getting started page, select Connect your data.Screenshot highlighting the Connect your data link.



9. In the dialog that appears, enter your EA enrollment number forBillingProfileIdOrEnrollmentNumber. Specify the number of months of data toget. Leave the default Scope value of Enrollment Number, then select Next.

Note

The default value for Scope is Enrollment Number. Do not change the value,
otherwise the initial data connection will fail.





Screenshot showing where you enter your E A enrollment information.



10. The next installation step connects to your EA enrollment and requires anEnterprise Administrator account. Leave all the default values. Select Sign in and





connect.
Screenshot showing the Connect to Cost Management App dialog box with default values to connect with.



11. The final dialog connects to Azure and gets data. Leave the default values asconfigured and select Sign in and continue.






Screenshot showing the Connect to Cost Management App dialog box with default values.



12. You are prompted to authenticate with your EA enrollment. Authenticate withPower BI. After you're authenticated, a Power BI data refresh starts.

Note

The data refresh process might take quite a while to complete. The lengthdepends on the number of months specified and the amount of data neededto sync.




After the data refresh is complete, select the Cost Management App to view the pre-
created reports.

Reports available with the app

The following reports are available in the app.


Getting Started - Provides useful links to documentation and links to provide feedback.

Account overview - The report shows the current billing month summary ofinformation, including:

Charges against credits
New purchases
Azure Marketplace charges
Overages and total charges


The Billing account overview page might show costs that differ from costs shown in theEA portal.

Note

The Select date range selector doesn’t affect or change overview tiles. Instead, theoverview tiles show the costs for the current billing month. This behavior isintentional.

Data shown in the bar graph is determined by the date selection.

Here's how values in the overview tiles are calculated.

The value shown in the Charges against credit tile is calculated as the sum ofadjustments.
The value shown in the Service overage tile is calculated as the sum ofServiceOverage.
The value shown in the Billed separately tile is calculated as the sum ofchargesBilledseparately.
The value shown in the Azure Marketplace tile is calculated as the sum ofazureMarketplaceServiceCharges.
The value shown in the New purchase amount tile is calculated as the sum ofnewPurchases.
The value shown in the Total charges tile is calculated as the sum of (adjustments+ ServiceOverage + chargesBilledseparately + azureMarketplaceServiceCharges).


The EA portal doesn't show the Total charges column. The Power BI template appincludes Adjustments, Service Overage, Charges billed separately, and Azuremarketplace service charges as Total charges.

The Prepayment Usage shown in the EA portal isn't available in the Template app as partof the total charges.


Usage by Subscriptions and Resource Groups - Provides a cost over time view andcharts showing cost by subscription and resource group.

Usage by Services - Provides a view over time of usage by MeterCategory. You can trackyour usage data and drill into any anomalies to understand usage spikes or dips.

Top 5 Usage drivers - The report shows a filtered cost summarization by the top 5MeterCategory and corresponding MeterName.

Windows Server AHB Usage - The report shows the number virtual machines that haveAzure Hybrid Benefit enabled. It also shows a count of cores/vCPUs used by the virtualmachines.

Screenshot showing the full Azure Hybrid Benefits report.


The report also identifies Windows VMs where Hybrid Benefit is enabled but there areless than 8 vCPUs. It also shows where Hybrid Benefit is not enabled that have 8 or morevCPUs. This information helps you fully use your Hybrid Benefit. Apply the benefit toyour most expensive virtual machines to maximize your potential savings.

Screenshot showing the Less than 8 vCPUs and vCPUs not enabled area of the Azure Hybrid Benefits report.


RI Chargeback - The report helps you understand where and how much of a reservedinstance (RI) benefit is applied per region, subscription, resource group, or resource. Thereport uses amortized usage data to show the view.

You can apply a filter on chargetype to view RI underutilization data.


For more information about amortized data, see Get Enterprise Agreement reservationcosts and usage.

RI Savings - The report shows the savings accrued by reservations for subscription,
resource group, and the resource level. It displays:

Cost with reservation
Estimated on-demand cost if the reservation didn't apply to the usage
Cost savings accrued from the reservation


The report subtracts any under-utilized reservation waste cost from the total savings.
The waste wouldn't occur without a reservation.

You can use the amortized usage data to build on the data.

VM RI Coverage (shared recommendation) - The report is split between on-demandVM usage and RI VM usage over the selected period. It provides recommendations forVM RI purchases at a shared scope.

To use the report, select the drill-down filter.

Screenshot showing the select drill down option in the VM RI coverage report.


Select the region that you want to analyze. Then select the instance size flexibility group,
and so on.

For each drill-down level, the following filters are applied to the report:

The coverage data on the right is the filter showing how much usage is chargedusing the on-demand rate vs. how much is covered by the reservation.



Recommendations are also filtered.


The recommendations table provides recommendations for the reservation purchase,
based on the VM sizes used.

The Normalized Size and Recommended Quantity Normalized values help you normalizethe purchase to the smallest size for an instance size flexibility group. The information ishelpful if you plan to purchase just one reservation for all sizes in the instance sizeflexibility group.

Screenshot showing the RI recommendations report.


VM RI Coverage (single recommendation) - The report is split between on-demand VMusage and RI VM usage over the selected time period. It provides recommendations forVM RI purchases at a subscription scope.

For details about how to use the report, see the VM RI Coverage (sharedrecommendation) section.

RI purchases - The report shows RI purchases over the specified period.

Price sheet - The report shows a detailed list of prices specific to a Billing account or EAenrollment.

Troubleshoot problems

If you're having issues with the Power BI app, the following troubleshooting informationmight help.

Error processing the data in the dataset

You might get an error stating:

There was an error when processing the data in the dataset.
Data source error: {"error":
{"code":"ModelRefresh_ShortMessage_ProcessingError","pbi.error":
{"code":"ModelRefresh_ShortMessage_ProcessingError","parameters":
{},"details":[{"code":"Message","detail":{"type":1,"value":"We cannot 
convert the value \"Required Field: 'Enr...\" to type 
List."}}],"exceptionCulprit":1}}} Table: <TableName>.
A table name would appear instead of <TableName>.

Cause

The default Scope value of Enrollment Number was changed in the connection to CostManagement.

Solution

Reconnect to Cost Management and set the Scope value to Enrollment Number. Do notenter your organization's enrollment number, instead type Enrollment Number exactly asit appears in the following image.

Screenshot showing that the default text of Enrollment Number must not change.


BudgetAmount error

You might get an error stating:


Something went wrong
There was an error when processing the data in the dataset.
Please try again later or contact support. If you contact support, please 
provide these details.
Data source error: The 'budgetAmount' column does not exist in the rowset. 
Table: Budgets.
Cause

This error occurs because of a bug with the underlying metadata. The issue happensbecause there's no budget available under Cost Management > Budget in the Azureportal. The bug fix is in the process of getting deployed to the Power BI Desktop andPower BI service.

Solution

Until the bug is fixed, you can work around the problem by adding a test budget inthe Azure portal at the billing account/EA enrollment level. The test budgetunblocks connecting with Power BI. For more information about creating a budget,
see Tutorial: Create and manage budgets.


Invalid credentials for AzureBlob error

You might get an error stating:

Failed to update data source credentials: The credentials provided for the 
AzureBlobs source are invalid.
Cause

This error occurs if you change the authentication method for your data sourceconnection.

Solution

1. Connect to your data.
2. After you enter your EA enrollment and number of months, make sure that youleave the default value of Anonymous for Authentication method and None for



the Privacy level setting.
Screenshot shows the Connect to Cost Management App dialog box with Anonymous and None values entered.
3. On the next page, set OAuth2 for the Authentication method and None set forPrivacy level. Then, sign in to authenticate with your enrollment. This step alsostarts a Power BI data refresh.


Data reference

The following information summarizes the data available through the app. There's alsolinks to APIs that give in-depth details for data fields and values.

Table referenceDescriptionAutoFitComboMeterData included in the app to normalize the RI recommendation and usageto the smallest size in the instance family group.
Balance summarySummary of the balance for Enterprise Agreements.


Table referenceDescriptionBudgetsBudget details to view actual costs or usage against existing budgettargets.
PricesheetsApplicable meter rates for the provided billing profile or EA enrollment.
RI chargesCharges associated to your reserved instances over the last 24 months.
RIrecommendations(shared)
Reserved instance purchase recommendations based on all yoursubscription usage trends for the last 7 days.
RIrecommendations(single)
Reserved instance purchase recommendations based on your singlesubscription usage trends for the last 7 days.
RI usage detailsConsumption details for your existing reserved instances over the lastmonth.
RI usage summaryDaily Azure reservation usage percentage.
Usage detailsA breakdown of consumed quantities and estimated charges for the givenbilling profile in the EA enrollment.
Usage detailsamortizedA breakdown of consumed quantities and estimated amortized chargesfor the given billing profile in the EA enrollment.

Next steps

For more information about configuring data, refresh, sharing reports, and additionalreport customization see the following articles:

Configure scheduled refresh
Share Power BI dashboards and reports with coworkers and others
Subscribe yourself and others to reports and dashboards in the Power BI service
Download a report from the Power BI service to Power BI Desktop
Save a report in Power BI service and Power BI Desktop
Create a report in the Power BI service by importing a dataset



Group and filter options in Cost analysisand budgets

Article
03/07/2023


Cost analysis has many grouping and filtering options. This article helps you understandwhen to use them.

To watch a video about grouping and filtering options, watch the Cost Managementreporting by dimensions and tags video. To watch other videos, visit the CostManagement YouTube channel.

https://www.youtube-nocookie.com/embed/2Vx7V17zbmk
Group and filter properties

The following table lists some of the most common grouping and filtering optionsavailable in Cost analysis and budgets. See the notes column to learn when to use them.

Some filters are only available to specific offers. For example, a billing profile isn'tavailable for an enterprise agreement. For more information, see Supported MicrosoftAzure offers.

PropertyWhen to useNotesAvailability zonesBreak downAWS costs byavailability zone.
Applicable only to AWS scopes and managementgroups. Azure data doesn't include availability zoneand will show as No availability zone.
Billing periodBreak downPAYG costs bythe month thatthey were, orwill be, invoiced.
Use Billing period to get a precise representation ofinvoiced PAYG charges. Include two extra days beforeand after the billing period if filtering down to acustom date range. Limiting to the exact billing perioddates won't match the invoice. Will show costs from allinvoices in the billing period. Use Invoice ID to filterdown to a specific invoice. Applicable only to PAYGsubscriptions because EA and MCA are billed bycalendar months. EA/MCA accounts can use calendarmonths in the date picker or monthly granularity toaccomplish the same goal.


PropertyWhen to useNotesBillingProfileIdThe ID of thebilling profilethat is billed forthesubscription'scharges.
Unique identifier of the EA enrollment, pay-as-you-gosubscription, MCA billing profile, or AWS consolidatedaccount.
BillingProfileNameName of the EAenrollment, pay-
as-you-gosubscription,
MCA billingprofile, or AWSconsolidatedaccount.
Name of the EA enrollment, pay-as-you-gosubscription, MCA billing profile, or AWS consolidatedaccount.
Charge typeBreak downusage, purchase,
refund, andunusedreservation andsavings plancosts.
Reservation purchases, savings plan purchases, andrefunds are available only when using actual costs andnot when using amortized costs. Unused reservationand savings plan costs are available only when lookingat amortized costs.
DepartmentBreak downcosts by EAdepartment.
Available only for EA and management groups. PAYGsubscriptions don't have a department and will showas No department or unassigned.
Enrollment accountBreak downcosts by EAaccount owner.
Available only for EA billing accounts, departments,
and management groups. PAYG subscriptions don'thave EA enrollment accounts and will show as Noenrollment account or unassigned.
FrequencyBreak downusage-based,
one-time, andrecurring costs.
Indicates whether a charge is expected to repeat.
Charges can either happen once OneTime, repeat on amonthly or yearly basis Recurring, or be based onusage UsageBased.
Invoice IDBreak downcosts by billedinvoice.
Unbilled charges don't have an invoice ID yet and EAcosts don't include invoice details and will show as Noinvoice ID.
InvoiceSectionIdUnique identifierfor the MCAinvoice section.
Unique identifier for the EA department or MCAinvoice section.
InvoiceSectionNameName of theinvoice section.
Name of the EA department or MCA invoice section.


PropertyWhen to useNotesLocationBreak downcosts byresourcelocation orregion.
Purchases and Marketplace usage may be shown asunassigned, or No resource location.
MeterBreak downcosts by usagemeter.
Purchases and Marketplace usage will show asunassigned or No meter. Refer to Charge type toidentify purchases and Publisher type to identifyMarketplace charges.
OperationBreak downAWS costs byoperation.
Applicable only to AWS scopes and managementgroups. Azure data doesn't include operation and willshow as No operation - use Meter instead.
Pricing modelBreak downcosts by on-
demand,
reservation, orspot usage.
Purchases show as OnDemand. If you see Notapplicable, group by Reservation to determinewhether the usage is reservation or on-demand usageand Charge type to identify purchases.
PartNumberThe identifierused to getspecific meterpricing.
ProductName of theproduct.
ProductOrderIdUnique identifierfor the productorderProductOrderNameUnique name forthe productorder.
ProviderBreak downcosts by theprovider type:
Azure, Microsoft365, Dynamics365, AWS, andso on.
Identifier for product and line of business.


PropertyWhen to useNotesPublisher typeBreak downMicrosoft,
Azure, AWS, andMarketplacecosts.
Values are Microsoft for MCA accounts and Azure forEA and pay-as-you-go accounts.
ReservationBreak downcosts byreservation.
Any usage or purchases that aren't associated with areservation will show as No reservation or No values.
Group by Publisher type to identify other Azure, AWS,
or Marketplace purchases.
ReservationIdUnique identifierfor thepurchasedreservationinstance.
In actual costs, use ReservationID to know whichreservation the charge is for.
ReservationNameName of thepurchasedreservationinstance.
In actual costs, use ReservationName to know whichreservation the charge is for.
ResourceBreak downcosts byresource.
Marketplace purchases show as Other Marketplacepurchases and Azure purchases, like Reservations andSupport charges, show as Other Azure purchases.
Group by or filter on Publisher type to identify otherAzure, AWS, or Marketplace purchases.
Resource groupBreak downcosts byresource group.
Purchases, tenant resources not associated withsubscriptions, subscription resources not deployed toa resource group, and classic resources don't have aresource group and will show as Other Marketplacepurchases, Other Azure purchases, Other tenantresources, Other subscription resources, $system, orOther charges.
ResourceIdUnique identifierof the AzureResourceManagerresource.
Resource typeBreak downcosts byresource type.
Type of resource instance. Not all charges come fromdeployed resources. Charges that don't have aresource type will be shown as null or empty, Others,
or Not applicable. For example, purchases and classicservices will show as others, classic services, or Noresource type.


PropertyWhen to useNotesServiceFamilyType of Azureservice. Forexample,
Compute,
Analytics, andSecurity.
ServiceNameName of theAzure service.
Name of the classification category for the meter. Forexample, Cloud services and Networking.
Service name orMeter categoryBreak down costby Azure service.
Purchases and Marketplace usage will show as Noservice name or unassigned.
Service tier or MetersubcategoryBreak down costby Azure usagemetersubclassification.
Purchases and Marketplace usage will be empty orshow as unassigned.
SubscriptionBreak downcosts by Azuresubscription andAWS linkedaccount.
Purchases and tenant resources may show as Nosubscription.
TagBreak downcosts by tagvalues for aspecific tag key.
Purchases, tenant resources not associated withsubscriptions, subscription resources not deployed toa resource group, and classic resources cannot betagged and will show as Tags not supported. Servicesthat don't include tags in usage data will show as Tagsnot available. Any remaining cases where tags aren'tspecified on a resource will show as Untagged. Learnmore about tags support for each resource type.
UnitOfMeasureThe billing unitof measure forthe service. Forexample,
computeservices arebilled per hour.

For more information about terms, see Understand the terms used in the Azure usageand charges file.

Publisher Type value changes


In Cost Management, the PublisherType field indicates whether charges are forMicrosoft, Marketplace, or AWS (if you have a Cross Cloud connector configured)
products.

What changed?

Effective 14 October 2021, the PublisherType field with the value Azure was updated toMicrosoft for all customers with a Microsoft Customer Agreement. The change wasmade to accommodate enhancements to support Microsoft products other than Azurelike Microsoft 365 and Dynamics 365.

Values of Marketplace and AWS remain unchanged.

The change didn't affect customers with an Enterprise Agreement or pay-as-you-gooffers.

Impact and action

For any Cost Management data that you've downloaded before 14 October 2021,
consider the PublisherType change from the older Azure and the new Microsoft fieldvalues. The data could have been downloaded through exports, usage details, or fromCost Management.

If you use Cost Management + Billing REST API calls that filter the PublisherType fieldby the value Azure, you need to address the change and filter by the new valueMicrosoft after 14 October 2021. If you make any API calls with a filter for Publishertype = Azure, data won't be returned.

There's no impact to Cost analysis or budgets because the changes are automaticallyreflected in the filters. Any saved views or budgets created with Publisher Type = “Azure”
filter will be automatically updated.

Next steps

Start analyzing costs.



What are Azure Reservations?

Article
04/17/2023


Azure Reservations help you save money by committing to one-year or three-year plansfor multiple products. Committing allows you to get a discount on the resources youuse. Reservations can significantly reduce your resource costs by up to 72% from pay-
as-you-go prices. Reservations provide a billing discount and don't affect the runtimestate of your resources. After you purchase a reservation, the discount automaticallyapplies to matching resources.

You can pay for a reservation up front or monthly. The total cost of up-front andmonthly reservations is the same and you don't pay any extra fees when you choose topay monthly. Monthly payment is available for Azure reservations, not third-partyproducts.

You can buy a reservation in the Azure portal.

Why buy a reservation?

If you have consistent resource usage that supports reservations, buying a reservationgives you the option to reduce your costs. For example, when you continuously runinstances of a service without a reservation, you're charged at pay-as-you-go rates.
When you buy a reservation, you immediately get the reservation discount. Theresources are no longer charged at the pay-as-you-go rates.

How reservation discount is applied

After purchase, the reservation discount automatically applies to the resource usage thatmatches the attributes you select when you buy the reservation. Attributes include theSKU, regions (where applicable), and scope. Reservation scope selects where thereservation savings apply.

For more information about how discount is applied, see Reserved instance discountapplication.

For more information about how reservation scope works, see Scope reservations.

Determine what to purchase


All reservations, except Azure Databricks, are applied on an hourly basis. Considerreservation purchases based on your consistent base usage. You can determine whichreservation to purchase by analyzing your usage data or by using reservationrecommendations. Recommendations are available in:

Azure Advisor (VMs only)
Reservation purchase experience in the Azure portal
Cost Management Power BI app
APIs


For more information, see Determine what reservation to purchase

Buying a reservation

You can purchase reservations from the Azure portal, APIs, PowerShell, and CLI.

Go to the Azure portal to make a purchase.

For more information, see Buy a reservation.

How is a reservation billed?

The reservation is charged to the payment method tied to the subscription. Thereservation cost is deducted from your Azure Prepayment (previously called monetarycommitment) balance, if available. When your Azure Prepayment balance doesn't coverthe cost of the reservation, you're billed the overage. If you have a subscription from anindividual plan with pay-as-you-go rates, the credit card you have on your account isbilled immediately for up-front purchases. Monthly payments appear on your invoiceand your credit card is charged monthly. When you're billed by invoice, you see thecharges on your next invoice.

Who can manage a reservation by default

By default, the following users can view and manage reservations:

The person who buys a reservation and the account administrator of the billingsubscription used to buy the reservation are added to the reservation order.
Enterprise Agreement and Microsoft Customer Agreement billing administrators.


To allow other people to manage reservations, see Manage Reservations for Azureresources.




Get reservation details and utilization afterpurchase

If you have permission to view to the reservation, you can see it and its use in the Azureportal. You can get the data using APIs, as well.

For more information on how to see reservations in Azure portal, see View reservationsin the Azure portal

Manage reservations after purchase

After you buy an Azure reservation, you can update the scope to apply reservation to adifferent subscription, change who can manage the reservation, split a reservation intosmaller parts, or change instance size flexibility.

For more information, see Manage Reservations for Azure resources

Flexibility with Azure reservations

Azure Reservations provide flexibility to help meet your evolving needs. You canexchange a reservation for another reservation of the same type. You can also refund areservation, up to $50,000 USD in a 12 month rolling window, if you no longer need it.
The maximum limit of the refund applies to all reservations in the scope of youragreement with Microsoft.

For more information, see Self-service exchanges and refunds for Azure Reservations

Charges covered by reservation

Reserved Virtual Machine Instance - A reservation only covers the virtual machineand cloud services compute costs. It doesn't cover additional software, Windows,
networking, or storage charges.
Azure Blob storage reserved capacity - A reservation covers storage capacity forBlob storage and Azure Data Lake Gen2 storage. The reservation doesn't coverbandwidth or transaction rates.
Azure Files reserved capacity - A reservation covers storage capacity for AzureFiles. Reservations for hot and cool tiers don't cover bandwidth or transactionrates.
Azure Cosmos DB reserved capacity - A reservation covers throughputprovisioned for your resources. It doesn't cover the storage and networking



charges.
Azure Data Factory data flows - A reservation covers integration runtime cost forthe compute type and number of cores that you buy.
SQL Database reserved vCore - Covers both SQL Managed Instance and SQLDatabase Elastic Pool/single database. Only the compute costs are included with areservation. The SQL license is billed separately.
Azure Synapse Analytics - A reservation covers cDWU usage. It doesn't coverstorage or networking charges associated with the Azure Synapse Analytics usage.
Azure Databricks - A reservation covers only the DBU usage. Other charges, suchas compute, storage, and networking, are applied separately.
App Service stamp fee - A reservation covers stamp usage. It doesn't apply toworkers, so any other resources associated with the stamp are charged separately.
Azure Database for MySQL - Only the compute costs are included with areservation. A reservation doesn't cover software, networking, or storage chargesassociated with the MySQL Database server.
Azure Database for PostgreSQL - Only the compute costs are included with areservation. A reservation doesn't cover software, networking, or storage chargesassociated with the PostgreSQL Database servers.
Azure Database for MariaDB - Only the compute costs are included with areservation. A reservation doesn't cover software, networking, or storage chargesassociated with the MariaDB Database server.
Azure Data Explorer - A reservation covers the markup charges. A reservationdoesn't apply to compute, networking, or storage charges associated with theclusters.
Azure Cache for Redis - Only the compute costs are included with a reservation. Areservation doesn't cover networking or storage charges associated with the Rediscache instances.
Azure Dedicated Host - Only the compute costs are included with the Dedicatedhost.
Azure Disk Storage reservations - A reservation only covers premium SSDs of P30size or greater. It doesn't cover any other disk types or sizes smaller than P30.
Azure Backup Storage reserved capacity - A capacity reservation lowers storagecosts of backup data in a Recovery Services Vault.


Software plans:

SUSE Linux - A reservation covers the software plan costs. The discounts applyonly to SUSE meters and not to the virtual machine usage.
Red Hat Plans - A reservation covers the software plan costs. The discounts applyonly to RedHat meters and not to the virtual machine usage.



Azure Red Hat OpenShift - A reservation applies to the OpenShift costs, not toAzure infrastructure costs.


For Windows virtual machines and SQL Database, the reservation discount doesn't applyto the software costs. You can cover the licensing costs with Azure Hybrid Benefit.

Need help? Contact us.

If you have questions or need help, create a support request.

Next steps

Learn more about Azure Reservations with the following articles:

Manage Azure Reservations
Understand reservation usage for your subscription with pay-as-you-go rates
Understand reservation usage for your Enterprise enrollment
Windows software costs not included with reservations
Azure Reservations in Partner Center Cloud Solution Provider (CSP) program



Learn more about reservations for service plans:

Virtual Machines with Azure Reserved VM Instances
Azure Cosmos DB resources with Azure Cosmos DB reserved capacity
SQL Database compute resources with Azure SQL Database reserved capacity
Azure Cache for Redis resources with Azure Cache for Redis reserved capacityLearn more about reservations for software plans:
Red Hat software plans from Azure Reservations
SUSE software plans from Azure Reservations






How a reservation discount is applied

Article
04/20/2023


This article helps you understand how reserved instance discounts are generally applied.
The reservation discount applies to the resource usage matching the attributes youselect when you buy the reservation. Attributes include the scope where the matchingVMs, SQL databases, Azure Cosmos DB, or other resources run. For example, if you wanta reservation discount for four Standard D2 virtual machines in the West US region, thenselect the subscription where the VMs are running.

A reservation discount is "use-it-or-lose-it". If you don't have matching resources for anyhour, then you lose a reservation quantity for that hour. You can't carry forward unusedreserved hours.

When you shut down a resource, the reservation discount automatically applies toanother matching resource in the specified scope. If no matching resources are found inthe specified scope, then the reserved hours are lost.

For example, you might later create a resource and have a matching reservation that isunderutilized. The reservation discount automatically applies to the new matchingresource.

If the virtual machines are running in different subscriptions within yourenrollment/account, then select the scope as shared. Shared scope allows thereservation discount to be applied across subscriptions. You can change the scope afteryou buy a reservation. For more information, see Manage Azure Reservations. You canalso use the management group scope. It applies the reservation discount to thematching resource in the list of subscriptions that are a part of both the managementgroup and billing scope.

A reservation discount only applies to resources associated with Enterprise, MicrosoftCustomer Agreement, CSP, or subscriptions with pay-as-you go rates. Resources thatrun in a subscription with other offer types don't receive the reservation discount.

When the reservation term expires

At the end of the reservation term, the billing discount expires, and the resources arebilled at the pay-as-you go price. By default, the reservations are not set to renewautomatically. You can choose to enable automatic renewal of a reservation by selectingthe option in the renewal settings. With automatic renewal, a replacement reservationwill be purchased upon expiry of the existing reservation. By default, the replacement


reservation has the same attributes as the expiring reservation, optionally you changethe billing frequency, term, or quantity in the renewal settings. Any user with owneraccess on the reservation and the subscription used for billing can set up renewal.

Discount applies to different sizes

When you buy a reservation, the discount can apply to other instances with attributesthat are within the same size group. This feature is known as instance size flexibility. Theflexibility of the discount coverage depends on the type of reservation and theattributes you pick when you buy the reservation.

Service plans:

Reserved VM Instances: When you buy the reservation and select Optimized forinstance size flexibility, the discount coverage depends on the VM size you select.
The reservation can apply to the virtual machines (VMs) sizes in the same sizeseries group. For more information, see Virtual machine size flexibility withReserved VM Instances.
Azure Storage reserved capacity: You can purchase reserved capacity for standardAzure Storage accounts in units of 100 TiB or 1 PiB per month. For informationabout which regions support Azure Storage reserved capacity, see Block blobpricing. Azure Storage reserved capacity is available for all access tiers (hot, cool,
and archive) and for any replication configuration (LRS, GRS, or ZRS).
SQL Database reserved capacity: The discount coverage depends on theperformance tier you pick. For more information, see Understand how an Azurereservation discount is applied.
Azure Cosmos DB reserved capacity: The discount coverage depends on theprovisioned throughput. For more information, see Understand how an AzureCosmos DB reservation discount is applied.


How discounts apply to specific Azure services

Read the following articles that apply to you to learn how discounts apply to a specificAzure service:

App Service
Azure Cache for Redis
Azure Cosmos DB
Azure SQL Edge
Database for MariaDB
Database for MySQL



Database for PostgreSQL
Databricks
Data Explorer
Dedicated Hosts
Disk Storage
Red Hat Linux Enterprise
Software plans
Storage
SQL Database
Azure Synapse Analytics
Virtual machines


Next steps

Manage Azure Reservations
Understand reservation usage for your subscription with pay-as-you-go rates
Understand reservation usage for your Enterprise enrollment
Windows software costs not included with reservations



Get Enterprise Agreement and MicrosoftCustomer Agreement reservation costsand usage

Article
12/07/2022


Enhanced data for reservation costs and usage is available for Enterprise Agreement (EA)
and Microsoft Customer Agreement (MCA) usage in Cost management. This articlehelps you:

Get reservation purchase data
Know which subscription, resource group or resource used the reservation
Chargeback for reservation utilization
Calculate reservation savings
Get reservation under-utilization data
Amortize reservation costs


Marketplace charges are consolidated in usage data. You view charges for first partyusage, marketplace usage, and purchases from a single data source.

Reservation charges in Azure usage data

Data is divided into two separate data sets: Actual Cost and Amortized Cost. How thesetwo datasets differ:

Actual Cost - Provides data to reconcile with your monthly bill. This data has reservationpurchase costs and reservation application details. With this data, you can know whichsubscription or resource group or resource received the reservation discount in aparticular day. The EffectivePrice for the usage that receives the reservation discount iszero.

Amortized Cost - This dataset is similar to the Actual Cost dataset except that - theEffectivePrice for the usage that gets reservation discount is the prorated cost of thereservation (instead of being zero). This helps you know the monetary value ofreservation consumption by a subscription, resource group or a resource, and can helpyou charge back for the reservation utilization internally. The dataset also has unusedreservation hours. The dataset does not have reservation purchase records.

Comparison of two data sets:


DataDataActual Cost data setActual Cost data setAmortized Cost data setAmortized Cost data setReservation purchasesAvailable in this view.
To get this data filteron ChargeType =
"Purchase". 
Refer toReservationID orReservationName toknow whichreservation thecharge is for.
Not applicable to this view. 
Purchase costs aren't provided inamortized data.
EffectivePriceThe value is zero forusage that getsreservation discount.
The value is per-hour prorated cost ofthe reservation for usage that has thereservation discount.
Unused reservation (Providesthe number of hours thereservation wasn't used in aday and the monetary value ofthe waste)
Not applicable in thisview.
Available in this view.
To get this data, filter on ChargeType =
"UnusedReservation".
Refer to ReservationID orReservationName to know whichreservation was underutilized. This ishow much of the reservation waswasted in for the day.
UnitPrice(Price of the resourcefrom your price sheet)
AvailableAvailable

Other information available in Azure usage data has changed:

Product and Meter information - Azure doesn't replace the originally consumedmeter with the ReservationId and ReservationName, as it did previously.
ReservationId and ReservationName - They are their own fields in the data.
Previously, it used to be available only under AdditionalInfo.
ProductOrderId - The reservation order ID, added as its own field.
ProductOrderName - The product name of the purchased reservation.
Term - 12 months or 36 months.
RINormalizationRatio - Available under AdditionalInfo. This is the ratio where thereservation is applied to the usage record. If instance size flexibility is enabled onfor your reservation, then it can apply to other sizes. The value shows the ratio thatthe reservation was applied to for the usage record.



For more information, see the Usage details field Definitions.

Get Azure consumption and reservation usagedata using API

You can get the data using the API or download it from Azure portal.

For information about permissions needed to view and manage reservations, see Whocan manage a reservation by default.

You call the Usage Details API to get the new data. For details about terminology, seeusage terms.

Here's an example call to the Usage Details API:

https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{enrollmentId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodId}/providers/Microsoft.Consumption/usagedetails?metric={metric}&amp;api-
version=2019-05-01&amp;$filter={filter}
For more information about {enrollmentId} and {billingPeriodId}, see the Usage Details –
List API article.

Information in the following table about metric and filter can help solve for commonreservation problems.

Type of API dataAPI call actionAll Charges (usage andpurchases)
Replace {metric} with ActualCostUsage that got reservationdiscountReplace {metric} with ActualCost
Replace {filter} with: properties/reservationId%20ne%20Usage that didn't get reservationdiscountReplace {metric} with ActualCost
Replace {filter} with: properties/reservationId%20eq%20Amortized charges (usage andpurchases)
Replace {metric} with AmortizedCost


Type of API dataAPI call actionUnused reservation reportReplace {metric} with AmortizedCost
Replace {filter} with:
properties/ChargeType%20eq%20'UnusedReservation'Reservation purchasesReplace {metric} with ActualCost
Replace {filter} with:
properties/ChargeType%20eq%20'Purchase'RefundsReplace {metric} with ActualCost
Replace {filter} with:
properties/ChargeType%20eq%20'Refund'

Download the EA usage CSV file with new data

If you're an EA admin, you can download the CSV file that contains new usage data fromAzure portal. This data isn't available from the EA portal (ea.azure.com), you mustdownload the usage file from Azure portal (portal.azure.com) to see the new data.

In the Azure portal, navigate to Cost management + billing.

1. Select the billing account.
2. Select Usage + charges.
3. Select Download.
Example showing where to Download the CSV usage data file in the Azure portal
4. In Download Usage + Charges , under Usage Details Version 2 , select All Charges(usage and purchases) and then select download. Repeat for Amortized charges(usage and purchases).


Download usage for your Microsoft CustomerAgreement

To view and download usage data for a billing profile, you must be a billing profileOwner, Contributor, Reader, or Invoice manager.

Download usage for billed charges


1. Search for Cost Management + Billing.
2. Select a billing profile.
3. Select Invoices.
4. In the invoice grid, find the row of the invoice corresponding to the usage youwant to download.
5. Select the ellipsis (...) at the end of the row.
6. In the download context menu, select Azure usage and charges.


Common cost and usage tasks

The following sections are common tasks that most people use to view their reservationcost and usage data.

Get reservation purchase costs

Reservation purchase costs are available in Actual Cost data. Filter for ChargeType =
Purchase. Refer to ProductOrderID to determine which reservation order the purchase isfor.

Get underutilized reservation quantity and costs

Get Amortized Cost data and filter for ChargeType = UnusedReservation. You get thedaily unused reservation quantity and the cost. You can filter the data for a reservationor reservation order using ReservationId and ProductOrderId fields, respectively. If areservation was 100% utilized, the record has a quantity of 0.

Amortize reservation costs

Get Amortized Cost data and filter for a reservation order using ProductOrderID to getdaily amortized costs for a reservation.

Chargeback for a reservation

You can chargeback reservation use to other organizations by subscription, resourcegroups, or tags. Amortized cost data provides monetary value of a reservation'sutilization at the following data types:

Resources (such as a VM)
Resource group
Tags



Subscription


Get the blended rate for chargeback

To determine the blended rate, get the amortized costs data and aggregate the totalcost. For VMs, you can use either MeterName or ServiceType information fromAdditionalInfo JSON data. Divide the total cost by the quantity used to get the blendedrate.

Audit optimum reservation use for instance size flexibility

Multiple the quantity with the RINormalizationRatio, from AdditionalInfo. The resultsindicate how many hours of reservation use was applied to the usage record.

Determine reservation savings

Get the Amortized costs data and filter the data for a reserved instance. Then:

1. Get estimated pay-as-you-go costs. Multiply the UnitPrice value with Quantityvalues to get estimated pay-as-you-go costs, if the reservation discount didn'tapply to the usage.
2. Get the reservation costs. Sum the Cost values to get the monetary value of whatyou paid for the reserved instance. It includes the used and unused costs of thereservation.
3. Subtract reservation costs from estimated pay-as-you-go costs to get theestimated savings.


Keep in mind that if you have an underutilized reservation, the UnusedReservation entryfor ChargeType becomes a factor to consider. When you have a fully utilized reservation,
you receive the maximum savings possible. Any UnusedReservation quantity reducessavings.

Reservation purchases and amortization in costanalysis

Reservation costs are available in cost analysis. By default, cost analysis shows Actualcost, which is how costs will be shown on your bill. To view reservation purchases brokendown and associated with the resources which used the benefit, switch to Amortizedcost:


Example showing where to select amortized cost in cost analysis


Group by charge type to see a break down of usage, purchases, and refunds; or byreservation for a breakdown of reservation and on-demand costs. Remember the onlyreservation costs you will see when looking at actual cost are purchases, but costs willbe allocated to the individual resources which used the benefit when looking atamortized cost. You will also see a new UnusedReservation charge type when looking atamortized cost.

Need help? Contact us

If you have questions or need help, create a support request.

Next steps

To learn more about Azure Reservations, see the following articles:

What are Azure Reservations?
Prepay for Virtual Machines with Azure Reserved VM Instances
Understand how the reservation discount is applied
Windows software costs not included with Reservations
Use service principal to get cost data
Use cost management exports



Query

Reference


Service:Cost ManagementAPI Version:2023-03-01
Operations

UsageQuery the usage data for scope defined.

Usage By External CloudProvider Type
Query the usage data for external cloud provider type defined.




Forecast

Reference


Service:Cost ManagementAPI Version:2023-03-01
Operations

External Cloud Provider UsageLists the forecast charges for external cloud provider typedefined.

UsageLists the forecast charges for scope defined.




Dimensions

Reference


Service:Cost ManagementAPI Version:2023-03-01
Operations

By External Cloud ProviderType
Lists the dimensions by the external cloud provider type.

ListLists the dimensions by the defined scope.




Views

Reference


Service:Cost ManagementAPI Version:2023-03-01
Operations

Create Or UpdateThe operation to create or update a view. Update operationrequires latest eTag to be set in the request. You may obtain thelatest eTag by performing a get ope...

Create Or Update By ScopeThe operation to create or update a view. Update operationrequires latest eTag to be set in the request. You may obtain thelatest eTag by performing a get ope...

DeleteThe operation to delete a view.

Delete By ScopeThe operation to delete a view.

GetGets the view by view name.

Get By ScopeGets the view for the defined scope by view name.

ListLists all views by tenant and object.

List By ScopeLists all views at the given scope.




Tutorial: Create and manage budgets

Article
06/07/2023


Budgets in Cost Management help you plan for and drive organizational accountability.
They help you proactively inform others about their spending to manage costs andmonitor how spending progresses over time.

You can configure alerts based on your actual cost or forecasted cost to ensure thatyour spending is within your organizational spending limit. Notifications are triggeredwhen the budget thresholds you've created are exceeded. Resources are not affected,
and your consumption isn't stopped. You can use budgets to compare and trackspending as you analyze costs.

Cost and usage data is typically available within 8-24 hours and budgets are evaluatedagainst these costs every 24 hours. Be sure to get familiar with Cost and usage dataupdates specifics. When a budget threshold is met, email notifications are normally sentwithin an hour of the evaluation.

Budgets reset automatically at the end of a period (monthly, quarterly, or annually) forthe same budget amount when you select an expiration date in the future. Because theyreset with the same budget amount, you need to create separate budgets whenbudgeted currency amounts differ for future periods. When a budget expires, it'sautomatically deleted.

The examples in this tutorial walk you through creating and editing a budget for anAzure Enterprise Agreement (EA) subscription.

Watch the Apply budgets to subscriptions using the Azure portal video to see howyou can create budgets in Azure to monitor spending. To watch other videos, visit theCost Management YouTube channel.

https://www.youtube-nocookie.com/embed/UrkHiUx19Po
In this tutorial, you learn how to:

Create a budget in the Azure portal
Create and edit budgets with PowerShell
Create a budget with an Azure Resource Manager template


Prerequisites

Budgets are supported for the following types of Azure account types and scopes:


Azure role-based access control (Azure RBAC) scopes
Management groups
Subscription



Enterprise Agreement scopes
Billing account
Department
Enrollment account



Individual agreements
Billing account



Microsoft Customer Agreement scopes
Billing account
Billing profile
Invoice section
Customer



AWS scopes
External account
External subscription





To view budgets, you need at least read access for your Azure account.

If you have a new subscription, you can't immediately create a budget or use other CostManagement features. It might take up to 48 hours before you can use all CostManagement features.

For Azure EA subscriptions, you must have read access to view budgets. To create andmanage budgets, you must have contributor permission.

The following Azure permissions, or scopes, are supported per subscription for budgetsby user and group.

Owner – Can create, modify, or delete budgets for a subscription.
Contributor and Cost Management contributor – Can create, modify, or deletetheir own budgets. Can modify the budget amount for budgets created by others.
Reader and Cost Management reader – Can view budgets that they havepermission to.


For more information about scopes, including access needed to configure exports forEnterprise Agreement and Microsoft Customer agreement scopes, see Understandand work with scopes. For more information about assigning permission to CostManagement data, see Assign access to Cost Management data.

Sign in to Azure


Sign in to the Azure portal at https://portal.azure.com.


Create a budget in the Azure portal

You can create an Azure subscription budget for a monthly, quarterly, or annual period.

To create or view a budget, open a scope in the Azure portal and select Budgets in themenu. For example, navigate to Subscriptions, select a subscription from the list, andthen select Budgets in the menu. Use the Scope pill to switch to a different scope, like amanagement group, in Budgets. For more information about scopes, see Understandand work with scopes.

After you create budgets, they show a simple view of your current spending againstthem.

Select Add.

Screenthost showing a list of budgets already created.


In the Create budget window, make sure that the scope shown is correct. Choose anyfilters that you want to add. Filters allow you to create budgets on specific costs, such asresource groups in a subscription or a service like virtual machines. For moreinformation about the common filter properties that you can use in budgets and costanalysis, see Group and filter properties.

After you identify your scope and filters, type a budget name. Then, choose a monthly,
quarterly, or annual budget reset period. The reset period determines the time windowthat's analyzed by the budget. The cost evaluated by the budget starts at zero at thebeginning of each new period. When you create a quarterly budget, it works in the same


way as a monthly budget. The difference is that the budget amount for the quarter isevenly divided among the three months of the quarter. An annual budget amount isevenly divided among all 12 months of the calendar year.

If you have a Pay-As-You-Go, MSDN, or Visual Studio subscription, your invoice billingperiod might not align to the calendar month. For those subscription types and resourcegroups, you can create a budget that's aligned to your invoice period or to calendarmonths. To create a budget aligned to your invoice period, select a reset period ofBilling month, Billing quarter, or Billing year. To create a budget aligned to thecalendar month, select a reset period of Monthly, Quarterly, or Annually.

Next, identify the expiration date when the budget becomes invalid and stopsevaluating your costs.

Based on the fields chosen in the budget so far, a graph is shown to help you select athreshold to use for your budget. The suggested budget is based on the highestforecasted cost that you might incur in future periods. You can change the budgetamount.

Screenshot showing budget creation with monthly cost data.


After you configure the budget amount, select Next to configure budget alerts foractual cost and forecasted budget alerts.

Configure actual costs budget alerts

Budgets require at least one cost threshold (% of budget) and a corresponding emailaddress. You can optionally include up to five thresholds and five email addresses in asingle budget. When a budget threshold is met, email notifications are normally sentwithin an hour of the evaluation. Actual costs budget alerts are generated for the actualcost you've accrued in relation to the budget thresholds configured.




Configure forecasted budget alerts

Forecasted alerts provide advanced notification that your spending trends are likely toexceed your budget. The alerts use forecasted cost predictions. Alerts are generatedwhen the forecasted cost projection exceeds the set threshold. You can configure aforecasted threshold (% of budget). When a forecasted budget threshold is met,
notifications are normally sent within an hour of the evaluation.

To toggle between configuring an Actual vs Forecasted cost alert, use the Type fieldwhen configuring the alert as shown in the following image.

If you want to receive emails, add azure-noreply@microsoft.com to your approvedsenders list so that emails don't go to your junk email folder. For more informationabout notifications, see Use cost alerts.

In the following example, an email alert gets generated when 90% of the budget isreached. If you create a budget with the Budgets API, you can also assign roles topeople to receive alerts. Assigning roles to people isn't supported in the Azure portal.
For more about the Budgets API, see Budgets API. If you want to have an email alertsent in a different language, see Supported locales for budget alert emails.

Alert limits support a range of 0.01% to 1000% of the budget threshold that you'veprovided.

Screenshot showing alert conditions.


After you create a budget, it's shown in cost analysis. Viewing your budget against yourspending trend is one of the first steps when you start to analyze your costs andspending.


Screenshot showing an example budget with spending shown in cost analysis.


In the preceding example, you created a budget for a subscription. You can also create abudget for a resource group. If you want to create a budget for a resource group,
navigate to Cost Management + Billing > Subscriptions > select a subscription >
Resource groups > select a resource group > Budgets > and then Add a budget.

Create a budget for combined Azure and AWS costs

You can group your Azure and AWS costs together by assigning a management groupto your connector along with it's consolidated and linked accounts. Assign your Azuresubscriptions to the same management group. Then create a budget for the combinedcosts.

1. In Cost Management, select Budgets.
2. Select Add.
3. Select Change scope and then select the management group.
4. Continue creating the budget until complete.


Costs in budget evaluations

Budget cost evaluations now include reserved instance and purchase data. If the chargesapply to you, then you might receive alerts as charges are incorporated into your


evaluations. Sign in to the Azure portal to verify that budget thresholds are properlyconfigured to account for the new costs. Your Azure billed charges aren't changed.
Budgets now evaluate against a more complete set of your costs. If the charges don'tapply to you, then your budget behavior remains unchanged.

If you want to filter the new costs so that budgets are evaluated against first party Azureconsumption charges only, add the following filters to your budget:

Publisher Type: Azure
Charge Type: Usage


Budget cost evaluations are based on actual cost. They don't include amortization. Formore information about filtering options available to you in budgets, see Understandinggrouping and filtering options.

Trigger an action group

When you create or edit a budget for a subscription or resource group scope, you canconfigure it to call an action group. The action group can perform various actions whenyour budget threshold is met. You can receive mobile push notifications when yourbudget threshold is met by enabling Azure app push notifications while configuring theaction group.

Action groups are currently only supported for subscription and resource group scopes.
For more information about creating action groups, see action groups.

For more information about using budget-based automation with action groups, seeManage costs with budgets.

To create or update action groups, select Manage action group while you're creating orediting a budget.


Screenshot showing an example of creating a budget to show Manage action groups.


Next, select Add action group and create the action group.

Budget integration with action groups works for action groups that have enabled ordisabled common alert schema. For more information on how to enable common alertschema, see How do I enable the common alert schema?

Budgets in the Azure mobile app

You can view budgets for your subscriptions and resource groups from the CostManagement card in the Azure app.

1. Navigate to any subscription or resource group.
2. Find the Cost Management card and tap More.
3. Budgets load below the Current cost card. They're sorted by descending order ofusage.


To receive mobile push notifications when your budget threshold is met, you canconfigure action groups. When setting up budget alerts, make sure to select an actiongroup that has Azure app push notifications enabled.

Note

Currently, the Azure mobile app only supports the subscription and resource groupscopes for budgets.


Screenshot showing budgets in the Azure app.


Create and edit budgets with PowerShell

If you're an EA customer, you can create and edit budgets programmatically using theAzure PowerShell module. However, we recommend that you use REST APIs to createand edit budgets because CLI commands might not support the latest version of theAPIs.

Note

Customers with a Microsoft Customer Agreement should use the Budgets RESTAPI to create budgets programmatically.

To download the latest version of Azure PowerShell, run the following command:

Azure PowerShell
install-module -name Az
The following example commands create a budget.

Azure PowerShell#Sign into Azure PowerShell with your account
Connect-AzAccount
#Select a subscription to to monitor with a budget
select-AzSubscription -Subscription "Your Subscription"
#Create an action group email receiver and corresponding action group
$email1 = New-AzActionGroupReceiver -EmailAddress test@test.com -Name 
EmailReceiver1
$ActionGroupId = (Set-AzActionGroup -ResourceGroupName YourResourceGroup -
Name TestAG -ShortName TestAG -Receiver $email1).Id
#Create a monthly budget that sends an email and triggers an Action Group to 
send a second email. Make sure the StartDate for your monthly budget is set 
to the first day of the current month. Note that Action Groups can also be 
used to trigger automation such as Azure Functions or Webhooks.
Get-AzContext
New-AzConsumptionBudget -Amount 100 -Name TestPSBudget -Category Cost -
StartDate 2020-02-01 -TimeGrain Monthly -EndDate 2022-12-31 -ContactEmail 
test@test.com -NotificationKey Key1 -NotificationThreshold 0.8 -
NotificationEnabled -ContactGroup $ActionGroupId
Create a budget with an Azure ResourceManager template

You can create a budget using an Azure Resource Manager template. To use thetemplate, see Create a budget with an Azure Resource Manager template.

Clean up resources

If you created a budget and you no longer need it, view its details and delete it.

Next steps

In this tutorial, you learned how to:


Create a budget in the Azure portal
Create and edit budgets with PowerShell
Create a budget with an Azure Resource Manager template


Advance to the next tutorial to create a recurring export for your cost managementdata.

Create and manage exported data


Quickstart: Create a budget with Bicep

Article
03/08/2023


Budgets in Cost Management help you plan for and drive organizational accountability.
With budgets, you can account for the Azure services you consume or subscribe toduring a specific period. They help you inform others about their spending toproactively manage costs and monitor how spending progresses over time. When thebudget thresholds you've created are exceeded, notifications are triggered. None ofyour resources are affected and your consumption isn't stopped. You can use budgets tocompare and track spending as you analyze costs. This quickstart shows you how tocreate a budget named 'MyBudget' using Bicep.

Bicep is a domain-specific language (DSL) that uses declarative syntax to deploy Azureresources. It provides concise syntax, reliable type safety, and support for code reuse.
Bicep offers the best authoring experience for your infrastructure-as-code solutions inAzure.

Prerequisites

If you don't have an Azure subscription, create a free account before you begin.

If you have a new subscription, you can't immediately create a budget or use other CostManagement features. It might take up to 48 hours before you can use all CostManagement features.

Budgets are supported for the following types of Azure account types and scopes:

Azure role-based access control (Azure RBAC) scopes
Management groups
Subscription



Enterprise Agreement scopes
Billing account
Department
Enrollment account



Individual agreements
Billing account



Microsoft Customer Agreement scopes
Billing account
Billing profile
Invoice section
Customer






AWS scopes
External account
External subscription





To view budgets, you need at least read access for your Azure account.

For Azure EA subscriptions, you must have read access to view budgets. To create andmanage budgets, you must have contributor permission.

The following Azure permissions, or scopes, are supported per subscription for budgetsby user and group. For more information about scopes, see Understand and work withscopes.

Owner: Can create, modify, or delete budgets for a subscription.
Contributor and Cost Management contributor: Can create, modify, or delete theirown budgets. Can modify the budget amount for budgets created by others.
Reader and Cost Management reader: Can view budgets that they have permissionto.


For more information about assigning permission to Cost Management data, see Assignaccess to Cost Management data.

No filter

Review the Bicep file

The Bicep file used in this quickstart is from Azure Quickstart Templates.

BiceptargetScope = 'subscription'
@description('Name of the Budget. It should be unique within a resource 
group.')
param budgetName string = 'MyBudget'
@description('The total amount of cost or usage to track with the budget')
param amount int = 1000
@description('The time covered by a budget. Tracking of the amount will be 
reset based on the time grain.')
@allowed([ 
'Monthly' 
'Quarterly' 
'Annually'
])

param timeGrain string = 'Monthly'
@description('The start date must be first of the month in YYYY-MM-DD 
format. Future start date should not be more than three months. Past start 
date should be selected within the timegrain preiod.')
param startDate string
@description('The end date for the budget in YYYY-MM-DD format. If not 
provided, we default this to 10 years from the start date.')
param endDate string
@description('Threshold value associated with a notification. Notification 
is sent when the cost exceeded the threshold. It is always percent and has 
to be between 0.01 and 1000.')
param firstThreshold int = 90
@description('Threshold value associated with a notification. Notification 
is sent when the cost exceeded the threshold. It is always percent and has 
to be between 0.01 and 1000.')
param secondThreshold int = 110
@description('The list of email addresses to send the budget notification to 
when the threshold is exceeded.')
param contactEmails array
resource budget 'Microsoft.Consumption/budgets@2021-10-01' = { 
name: budgetName 
properties: { 
timePeriod: { 
startDate: startDate 
endDate: endDate 
} 
timeGrain: timeGrain 
amount: amount 
category: 'Cost' 
notifications: { 
NotificationForExceededBudget1: { 
enabled: true 
operator: 'GreaterThan' 
threshold: firstThreshold 
contactEmails: contactEmails 
} 
NotificationForExceededBudget2: { 
enabled: true 
operator: 'GreaterThan' 
threshold: secondThreshold 
contactEmails: contactEmails 
} 
} 
}
}
One Azure resource is defined in the Bicep file:


Microsoft.Consumption/budgets: Create a budget.


Deploy the Bicep file

1. Save the Bicep file as main.bicep to your local computer.


2. Deploy the Bicep file using either Azure CLI or Azure PowerShell.

CLIAzure CLImyContactEmails ='("user1@contoso.com", "user2@contoso.com")'
az deployment sub create --name demoSubDeployment --location 
centralus --template-file main.bicep --parameters startDate=<start-
date> endDate=<end-date> contactEmails=$myContactEmails
You need to enter the following parameters:

startDate: Replace <start-date> with the start date. It must be the first of themonth in YYYY-MM-DD format. A future start date shouldn't be more thanthree months in the future. A past start date should be selected within thetimegrain period.
endDate: Replace <end-date> with the end date in YYYY-MM-DD format. Ifnot provided, it defaults to ten years from the start date.
contactEmails: First create a variable that holds your emails and then passthat variable. Replace the sample emails with the email addresses to send thebudget notification to when the threshold is exceeded.


Note

When the deployment finishes, you should see a message indicating thedeployment succeeded.




One filter

Review the Bicep file

The Bicep file used in this quickstart is from Azure Quickstart Templates.


BiceptargetScope = 'subscription'
@description('Name of the Budget. It should be unique within a resource 
group.')
param budgetName string = 'MyBudget'
@description('The total amount of cost or usage to track with the budget')
param amount int = 1000
@description('The time covered by a budget. Tracking of the amount will be 
reset based on the time grain.')
@allowed([ 
'Monthly' 
'Quarterly' 
'Annually'
])
param timeGrain string = 'Monthly'
@description('The start date must be first of the month in YYYY-MM-DD 
format. Future start date should not be more than three months. Past start 
date should be selected within the timegrain preiod.')
param startDate string
@description('The end date for the budget in YYYY-MM-DD format. If not 
provided, we default this to 10 years from the start date.')
param endDate string
@description('Threshold value associated with a notification. Notification 
is sent when the cost exceeded the threshold. It is always percent and has 
to be between 0.01 and 1000.')
param firstThreshold int = 90
@description('Threshold value associated with a notification. Notification 
is sent when the cost exceeded the threshold. It is always percent and has 
to be between 0.01 and 1000.')
param secondThreshold int = 110
@description('The list of email addresses to send the budget notification to 
when the threshold is exceeded.')
param contactEmails array
@description('The set of values for the resource group filter.')
param resourceGroupFilterValues array
resource budget 'Microsoft.Consumption/budgets@2021-10-01' = { 
name: budgetName 
properties: { 
timePeriod: { 
startDate: startDate 
endDate: endDate 
} 
timeGrain: timeGrain

 amount: amount 
category: 'Cost' 
notifications: { 
NotificationForExceededBudget1: { 
enabled: true 
operator: 'GreaterThan' 
threshold: firstThreshold 
contactEmails: contactEmails 
} 
NotificationForExceededBudget2: { 
enabled: true 
operator: 'GreaterThan' 
threshold: secondThreshold 
contactEmails: contactEmails 
} 
} 
filter: { 
dimensions: { 
name: 'ResourceGroupName' 
operator: 'In' 
values: resourceGroupFilterValues 
} 
} 
}
}
One Azure resource is defined in the Bicep file:

Microsoft.Consumption/budgets: Create a budget.


Deploy the Bicep file

1. Save the Bicep file as main.bicep to your local computer.


2. Deploy the Bicep file using either Azure CLI or Azure PowerShell.

CLIAzure CLImyContactEmails ='("user1@contoso.com", "user2@contoso.com")'
myRgFilterValues ='("resource-group-01", "resource-group-02")'
az deployment sub create --name demoSubDeployment --location 
centralus --template-file main.bicep --parameters startDate=<start-
date> endDate=<end-date> contactEmails=$myContactEmails 
resourceGroupFilterValues=$myRgFilterValues



You need to enter the following parameters:

startDate: Replace <start-date> with the start date. It must be the first of themonth in YYYY-MM-DD format. A future start date shouldn't be more thanthree months in the future. A past start date should be selected within thetimegrain period.
endDate: Replace <end-date> with the end date in YYYY-MM-DD format. Ifnot provided, it defaults to ten years from the start date.
contactEmails: First create a variable that holds your emails and then passthat variable. Replace the sample emails with the email addresses to send thebudget notification to when the threshold is exceeded.
resourceGroupFilterValues First create a variable that holds your resourcegroup filter values and then pass that variable. Replace the sample filtervalues with the set of values for your resource group filter.


Note

When the deployment finishes, you should see a message indicating thedeployment succeeded.




Two or more filters

Review the Bicep file

The Bicep file used in this quickstart is from Azure Quickstart Templates.

BiceptargetScope = 'subscription'
@description('Name of the Budget. It should be unique within a resource 
group.')
param budgetName string = 'MyBudget'
@description('The total amount of cost or usage to track with the budget')
param amount int = 1000
@description('The time covered by a budget. Tracking of the amount will be 
reset based on the time grain.')
@allowed([ 
'Monthly' 
'Quarterly' 
'Annually'
])

param timeGrain string = 'Monthly'
@description('The start date must be first of the month in YYYY-MM-DD 
format. Future start date should not be more than three months. Past start 
date should be selected within the timegrain preiod.')
param startDate string
@description('The end date for the budget in YYYY-MM-DD format. If not 
provided, we default this to 10 years from the start date.')
param endDate string
@description('Threshold value associated with a notification. Notification 
is sent when the cost exceeded the threshold. It is always percent and has 
to be between 0.01 and 1000.')
param firstThreshold int = 90
@description('Threshold value associated with a notification. Notification 
is sent when the cost exceeded the threshold. It is always percent and has 
to be between 0.01 and 1000.')
param secondThreshold int = 110
@description('The list of contact roles to send the budget notification to 
when the threshold is exceeded.')
param contactRoles array = [ 
'Owner' 
'Contributor' 
'Reader'
]
@description('The list of email addresses to send the budget notification to 
when the threshold is exceeded.')
param contactEmails array
@description('The list of action groups to send the budget notification to 
when the threshold is exceeded. It accepts array of strings.')
param contactGroups array
@description('The set of values for the resource group filter.')
param resourceGroupFilterValues array
@description('The set of values for the meter category filter.')
param meterCategoryFilterValues array
resource budget 'Microsoft.Consumption/budgets@2021-10-01' = { 
name: budgetName 
properties: { 
timePeriod: { 
startDate: startDate 
endDate: endDate 
} 
timeGrain: timeGrain 
amount: amount 
category: 'Cost' 
notifications: { 
NotificationForExceededBudget1: {

 enabled: true 
operator: 'GreaterThan' 
threshold: firstThreshold 
contactEmails: contactEmails 
contactRoles: contactRoles 
contactGroups: contactGroups 
} 
NotificationForExceededBudget2: { 
enabled: true 
operator: 'GreaterThan' 
threshold: secondThreshold 
contactEmails: contactEmails 
contactRoles: contactRoles 
contactGroups: contactGroups 
thresholdType: 'Forecasted' 
} 
} 
filter: { 
and: [ 
{ 
dimensions: { 
name: 'ResourceGroupName' 
operator: 'In' 
values: resourceGroupFilterValues 
} 
} 
{ 
dimensions: { 
name: 'MeterCategory' 
operator: 'In' 
values: meterCategoryFilterValues 
} 
} 
] 
} 
}
}
One Azure resource is defined in the Bicep file:

Microsoft.Consumption/budgets: Create a budget.


Deploy the Bicep file

1. Save the Bicep file as main.bicep to your local computer.


2. Deploy the Bicep file using either Azure CLI or Azure PowerShell.

CLI



Azure CLImyContactEmails ='("user1@contoso.com", "user2@contoso.com")'
myContactGroups ='("/subscriptions/{sub-id}/resourceGroups/{rg-
name}/providers/microsoft.insights/actionGroups/groupone", 
"/subscriptions/{sub-id}/resourceGroups/{rg-
name}/providers/microsoft.insights/actionGroups/grouptwo")'
myRgFilterValues ='("resource-group-01", "resource-group-02")'
myMeterCategoryFilterValues ='("meter-category-01", "meter-
category-02")'
az deployment sub create --name demoSubDeployment --location 
centralus --template-file main.bicep --parameters startDate=<start-
date> endDate=<end-date> contactEmails=$myContactEmails 
contactGroups=$myContactGroups 
resourceGroupFilterValues=$myRgFilterValues 
meterCategoryFilterValues=$myMeterCategoryFilterValues
You need to enter the following parameters:

startDate: Replace <start-date> with the start date. It must be the first of themonth in YYYY-MM-DD format. A future start date shouldn't be more thanthree months in the future. A past start date should be selected within thetimegrain period.
endDate: Replace <end-date> with the end date in YYYY-MM-DD format. Ifnot provided, it defaults to ten years from the start date.
contactEmails: First create a variable that holds your emails and then passthat variable. Replace the sample emails with the email addresses to send thebudget notification to when the threshold is exceeded.
contactGroups: First create a variable that holds your contact groups andthen pass that variable. Replace the sample contact groups with the list ofaction groups to send the budget notification to when the threshold isexceeded. You must pass the resource ID of the action group, which you canget with az monitor action-group show or Get-AzActionGroup.
resourceGroupFilterValues: First create a variable that holds your resourcegroup filter values and then pass that variable. Replace the sample filtervalues with the set of values for your resource group filter.
meterCategoryFilterValues: First create a variable that holds your metercategory filter values and then pass that variable. Replace the sample filtervalues within parentheses with the set of values for your meter category filter.


Note





When the deployment finishes, you should see a message indicating thedeployment succeeded.




Review deployed resources

Use the Azure portal, Azure CLI, or Azure PowerShell to list the deployed resources inthe resource group.

CLIAzure CLIaz consumption budget list
Clean up resources

When you no longer need the budget, use the Azure portal, Azure CLI, or AzurePowerShell to delete it:

CLIAzure CLIaz consumption budget delete --budget-name MyBudget
Next steps

In this quickstart, you created a budget and deployed it using Bicep. To learn moreabout Cost Management and Billing and Bicep, continue on to the articles below.

Read the Cost Management and Billing overview.
Create budgets in the Azure portal.
Learn more about Bicep.



Quickstart: Create a budget with anARM template

Article
04/05/2023


Budgets in Cost Management help you plan for and drive organizational accountability.
With budgets, you can account for the Azure services you consume or subscribe toduring a specific period. They help you inform others about their spending toproactively manage costs, and to monitor how spending progresses over time. Whenthe budget thresholds you've created are exceeded, notifications are triggered. None ofyour resources are affected and your consumption isn't stopped. You can use budgets tocompare and track spending as you analyze costs. This quickstart shows you how tocreate a budget using three different Azure Resource Manager templates (ARMtemplate).

A resource manager template is a JavaScript Object Notation (JSON) file that defines theinfrastructure and configuration for your project. The template uses declarative syntax.
In declarative syntax, you describe your intended deployment without writing thesequence of programming commands to create the deployment.

If your environment meets the prerequisites and you're familiar with using ARMtemplates, select the Deploy to Azure button for one of the following templates. Thetemplate will open in the Azure portal.

TemplateDeployment buttonNo filterOne filterTwo or more filters

Prerequisites

If you don't have an Azure subscription, create a free account before you begin.

If you have a new subscription, you can't immediately create a budget or use other CostManagement features. It might take up to 48 hours before you can use all CostManagement features.


Budgets are supported for the following types of Azure account types and scopes:

Azure role-based access control (Azure RBAC) scopes
Management groups
Subscription



Enterprise Agreement scopes
Billing account
Department
Enrollment account



Individual agreements
Billing account



Microsoft Customer Agreement scopes
Billing account
Billing profile
Invoice section
Customer



AWS scopes
External account
External subscription





To view budgets, you need at least read access for your Azure account.

For Azure EA subscriptions, you must have read access to view budgets. To create andmanage budgets, you must have contributor permission.

The following Azure permissions, or scopes, are supported per subscription for budgetsby user and group. For more information about scopes, see Understand and work withscopes.

Owner – Can create, modify, or delete budgets for a subscription.
Contributor and Cost Management contributor – Can create, modify, or deletetheir own budgets. Can modify the budget amount for budgets created by others.
Reader and Cost Management reader – Can view budgets that they havepermission to.


For more information about assigning permission to Cost Management data, see Assignaccess to Cost Management data.

Use one of the following templates, based on your needs.

TemplateDescriptionNo filterThe ARM template doesn't have any filters.


TemplateDescriptionOne filterThe ARM template has a filter for resource groups.
Two or morefiltersThe ARM template has a filter for resource groups and a filter for metercategories.

Review and deploy the template

No filter
Review the template

The template used in this quickstart is from Azure Quickstart Templates.

JSON{ 
"$schema": "https://schema.management.azure.com/schemas/2018-05-
01/subscriptionDeploymentTemplate.json#", 
"contentVersion": "1.0.0.0", 
"metadata": { 
"_generator": { 
"name": "bicep", 
"version": "0.5.6.12127", 
"templateHash": "15851432186142062555" 
} 
}, 
"parameters": { 
"budgetName": { 
"type": "string", 
"defaultValue": "MyBudget", 
"metadata": { 
"description": "Name of the Budget. It should be unique within a 
resource group." 
} 
}, 
"amount": { 
"type": "int", 
"defaultValue": 1000, 
"metadata": { 
"description": "The total amount of cost or usage to track with 
the budget" 
} 
}, 
"timeGrain": { 
"type": "string", 
"defaultValue": "Monthly",

 "allowedValues": [ 
"Monthly", 
"Quarterly", 
"Annually" 
], 
"metadata": { 
"description": "The time covered by a budget. Tracking of the 
amount will be reset based on the time grain." 
} 
}, 
"startDate": { 
"type": "string", 
"metadata": { 
"description": "The start date must be first of the month in 
YYYY-MM-DD format. Future start date should not be more than three 
months. Past start date should be selected within the timegrain preiod." 
} 
}, 
"endDate": { 
"type": "string", 
"metadata": { 
"description": "The end date for the budget in YYYY-MM-DD 
format. If not provided, we default this to 10 years from the start 
date." 
} 
}, 
"firstThreshold": { 
"type": "int", 
"defaultValue": 90, 
"metadata": { 
"description": "Threshold value associated with a notification. 
Notification is sent when the cost exceeded the threshold. It is always 
percent and has to be between 0.01 and 1000." 
} 
}, 
"secondThreshold": { 
"type": "int", 
"defaultValue": 110, 
"metadata": { 
"description": "Threshold value associated with a notification. 
Notification is sent when the cost exceeded the threshold. It is always 
percent and has to be between 0.01 and 1000." 
} 
}, 
"contactEmails": { 
"type": "array", 
"metadata": { 
"description": "The list of email addresses to send the budget 
notification to when the threshold is exceeded." 
} 
} 
}, 
"resources": [ 
{ 
"type": "Microsoft.Consumption/budgets",

 "apiVersion": "2021-10-01", 
"name": "[parameters('budgetName')]", 
"properties": { 
"timePeriod": { 
"startDate": "[parameters('startDate')]", 
"endDate": "[parameters('endDate')]" 
}, 
"timeGrain": "[parameters('timeGrain')]", 
"amount": "[parameters('amount')]", 
"category": "Cost", 
"notifications": { 
"NotificationForExceededBudget1": { 
"enabled": true, 
"operator": "GreaterThan", 
"threshold": "[parameters('firstThreshold')]", 
"contactEmails": "[parameters('contactEmails')]" 
}, 
"NotificationForExceededBudget2": { 
"enabled": true, 
"operator": "GreaterThan", 
"threshold": "[parameters('secondThreshold')]", 
"contactEmails": "[parameters('contactEmails')]" 
} 
} 
} 
} 
]
}
One Azure resource is defined in the template:

Microsoft.Consumption/budgets: Create a budget.


Deploy the template

1. Select the following image to sign in to Azure and open a template. Thetemplate creates a budget without any filters.




2. Select or enter the following values.





Resource Manager template, Create budget without a filter, deploy portal.


Subscription: select an Azure subscription.
Resource group: if required, select an existing resource group, or Createnew.
Region: select an Azure region. For example, Central US.
Budget Name: enter a name for the budget. It should be unique within aresource group. Only alphanumeric, underscore, and hyphen charactersare allowed.
Amount: enter the total amount of cost to track with the budget.
Time Grain: enter the time covered by a budget. Allowed values areMonthly, Quarterly, or Annually. The budget resets at the end of the timegrain.
Start Date: enter the start date with the first day of the month in YYYY-
MM-DD format. A future start date shouldn't be more than three monthsfrom today. You can specify a past start date with the Time Grain period.






End Date: enter the end date for the budget in YYYY-MM-DD format.
First Threshold: enter a threshold value for the first notification. Anotification is sent when the cost exceeds the threshold. It's alwayspercent and has to be between 0.01 and 1000.
Second Threshold: enter a threshold value for the second notification. Anotification is sent when the cost exceeds the threshold. It's alwayspercent and has to be between 0.01 and 1000.
Contact Emails enter a list of email addresses to send the budgetnotification to when a threshold is exceeded. It accepts an array ofstrings. Expected format is ["user1@domain.com","user2@domain.com"].



3. Depending on your Azure subscription type, do one of the following actions:

Select Review + create.
Review the terms and conditions, select I agree to the terms andconditions stated above, and then select Purchase.



4. If you selected Review + create, your template is validated. Select Create.

Resource Manager template, budget no filters, deploy portal notification.





The Azure portal is used to deploy the template. In addition to the Azure portal, youcan also use Azure PowerShell, Azure CLI, and REST API. To learn about otherdeployment templates, see Deploy templates.

Validate the deployment

Use one of the following ways to verify that the budget is created.

Azure portal
Navigate to Cost Management + Billing > select a scope > Budgets.




Clean up resources

When you no longer need a budget, delete it by using one the following methods:

Azure portal
Navigate to Cost Management + Billing > select a billing scope > Budgets > selecta budget > then select Delete budget.

Next steps

In this quickstart, you created a budget and deployed it. To learn more about CostManagement and Billing and Azure Resource Manager, continue on to the articlesbelow.

Read the Cost Management and Billing overview
Create budgets in the Azure portal
Learn more about Azure Resource Manager



Use cost alerts to monitor usage andspending

Article
04/06/2023


This article helps you understand and use Cost Management alerts to monitor yourAzure usage and spending. Cost alerts are automatically generated based when Azureresources are consumed. Alerts show all active cost management and billing alertstogether in one place. When your consumption reaches a given threshold, alerts aregenerated by Cost Management. There are three main types of cost alerts: budgetalerts, credit alerts, and department spending quota alerts.

You can also create a cost anomaly alert to automatically get notified when an anomalyis detected.

Required permissions for alerts

The following table shows how Cost Management alerts are used by each role. Thebehavior below is applicable to all Azure RBAC scopes.

Feature/RoleOwnerContributorReaderCost ManagementReaderCost ManagementContributorAlertsRead,
UpdateRead,
UpdateReadonlyRead onlyRead, Update

Budget alerts

Budget alerts notify you when spending, based on usage or cost, reaches or exceeds theamount defined in the alert condition of the budget. Cost Management budgets arecreated using the Azure portal or the Azure Consumption API.

In the Azure portal, budgets are defined by cost. Using the Azure Consumption API,
budgets are defined by cost or by consumption usage. Budget alerts support both cost-
based and usage-based budgets. Budget alerts are generated automatically wheneverthe budget alert conditions are met. You can view all cost alerts in the Azure portal.
Whenever an alert is generated, it's shown in cost alerts. An alert email is also sent tothe people in the alert recipients list of the budget.

If you have an Enterprise Agreement, you can Create and edit budgets with PowerShell.
Customers with a Microsoft Customer Agreement should use the Budgets REST API to


create budgets programmatically.

You can use the Budget API to send email alerts in a different language. For moreinformation, see Supported locales for budget alert emails.

Credit alerts

Credit alerts notify you when your Azure Prepayment (previously called monetarycommitment) is consumed. Azure Prepayment is for organizations with EnterpriseAgreements. Credit alerts are generated automatically at 90% and at 100% of yourAzure Prepayment credit balance. Whenever an alert is generated, it's reflected in costalerts and in the email sent to the account owners.

Department spending quota alerts

Department spending quota alerts notify you when department spending reaches afixed threshold of the quota. Spending quotas are configured in the EA portal.
Whenever a threshold is met it generates an email to department owners and is shownin cost alerts. For example, 50% or 75% of the quota.

Supported alert features by offer categories

Support for alert types depends on the type of Azure account that you have (Microsoftoffer). The following table shows the alert features that are supported by variousMicrosoft offers. You can view the full list of Microsoft offers at Understand CostManagement data.

Alert typeEnterpriseAgreementMicrosoft CustomerAgreementWeb direct/Pay-As-
You-GoBudget✔✔✔
Credit✔✘✘
Department spendingquota
✔✘✘

View cost alerts

To view cost alerts, open the desired scope in the Azure portal and select Budgets in themenu. Use the Scope pill to switch to a different scope. Select Cost alerts in the menu.


For more information about scopes, see Understand and work with scopes.

Example image of alerts shown in Cost Management


The total number of active and dismissed alerts appears on the cost alerts page.

All alerts show the alert type. A budget alert shows the reason why it was generated andthe name of the budget it applies to. Each alert shows the date it was generated, itsstatus, and the scope (subscription or management group) that the alert applies to.

Possible status includes active and dismissed. Active status indicates that the alert is stillrelevant. Dismissed status indicates that someone has marked the alert to set it as nolonger relevant.

Select an alert from the list to view its details. Alert details show more information aboutthe alert. Budget alerts include a link to the budget. If a recommendation is available fora budget alert, then a link to the recommendation is also shown. Budget, credit, anddepartment spending quota alerts have a link to analyze in cost analysis where you canexplore costs for the alert's scope. The following example shows spending for adepartment with alert details.


Example image showing spending for a department with alert details


When you view the details of a dismissed alert, you can reactivate it if manual action isneeded. The following image shows an example.

Example image showing dismiss and reactivate options


See also

If you haven't already created a budget or set alert conditions for a budget,
complete the Create and manage budgets tutorial.



Manage costs with budgets

Article
12/07/2022


Cost control is a critical component to maximizing the value of your investment in thecloud. There are several scenarios where cost visibility, reporting, and cost-basedorchestration are critical to continued business operations. Cost Management APIsprovide a set of APIs to support each of these scenarios. The APIs provide usage details,
allowing you to view granular instance level costs.

Budgets are commonly used as part of cost control. Budgets can be scoped in Azure.
For instance, you could narrow your budget view based on subscription, resourcegroups, or a collection of resources. In addition to using the budgets API to notify youvia email when a budget threshold is reached, you can use Azure Monitor action groupsto trigger an orchestrated set of actions resulting from a budget event.

A common budgets scenario for a customer running a non-critical workload could occurwhen they want to manage against a budget and also get to a predictable cost whenlooking at the monthly invoice. This scenario requires some cost-based orchestration ofresources that are part of the Azure environment. In this scenario, a monthly budget of$1000 for the subscription is set. Also, notification thresholds are set to trigger a feworchestrations. This scenario starts with an 80% cost threshold, which will stop all VMs inthe resource group Optional. Then, at the 100% cost threshold, all VM instances will bestopped.

To configure this scenario, you'll complete the following actions by using the stepsprovided in each section of this tutorial.

These actions included in this tutorial allow you to:

Create an Azure Automation Runbook to stop VMs by using webhooks.
Create an Azure Logic App to be triggered based on the budget threshold valueand call the runbook with the right parameters.
Create an Azure Monitor Action Group that will be configured to trigger the AzureLogic App when the budget threshold is met.
Create the budget with the wanted thresholds and wire it to the action group.


Create an Azure Automation Runbook

Azure Automation is a service that enables you to script most of your resourcemanagement tasks and run those tasks as either scheduled or on-demand. As part ofthis scenario, you'll create an Azure Automation runbook that will be used to stop VMs.


You'll use the Stop Azure V2 VMs graphical runbook from the gallery to build thisscenario. By importing this runbook into your Azure account and publishing it, you canstop VMs when a budget threshold is reached.

Create an Azure Automation account

1. Sign in to the Azure portal with your Azure account credentials.
2. Select the Create a resource button found on the upper left corner of Azure.
3. Select Management Tools > Automation.
Note

If you don't have an Azure account, you can create a free account.


4. Enter your account information. For Create Azure Run As account, choose Yes toautomatically enable the settings needed to simplify authentication to Azure.
5. When complete, select Create, to start the Automation account deployment.


Import the Stop Azure V2 VMs runbook

Using an Azure Automation runbook, import the Stop Azure V2 VMs graphicalrunbook from the gallery.

1. Sign in to the Azure portal with your Azure account credentials.
2. Open your Automation account by selecting All services > Automation Accounts.
Then, select your Automation Account.
3. Select Runbooks gallery from the Process Automation section.
4. Set the Gallery Source to Script Center and select OK.
5. Locate and select the Stop Azure V2 VMs gallery item within the Azure portal.
6. Select Import to display the Import area and select OK. The runbook overviewarea will be displayed.
7. Once the runbook has completed the import process, select Edit to display thegraphical runbook editor and publishing option.



Azure - Edit graphical runbook
8. Select Publish to publish the runbook and then select Yes when prompted. Whenyou publish a runbook, you override any existing published version with the draftversion. In this case, you've no published version because you've created therunbook.
For more information about publishing a runbook, see Create a graphicalrunbook.


Create webhooks for the runbook

Using the Stop Azure V2 VMs graphical runbook, you create two Webhooks to startthe runbook in Azure Automation through a single HTTP request. The first webhookinvokes the runbook at an 80% budget threshold with the resource group name as aparameter, allowing the optional VMs to be stopped. Then, the second webhookinvokes the runbook with no parameters (at 100%), which stops all remaining VMinstances.

1. From the Runbooks page in the Azure portal, select the StopAzureV2Vmrunbook that displays the runbook's overview area.
2. Select Webhook at the top of the page to open the Add Webhook area.
3. Select Create new webhook to open the Create a new webhook area.



4. Set the Name of the Webhook to Optional. The Enabled property must be Yes.
You don't need to change the Expires value. For more information about Webhookproperties, see Webhook properties.
5. Next to the URL value, select the copy icon to copy the URL of the webhook.
Important

Save the URL of the webhook named Optional in a safe place. You'll use theURL later in this tutorial. For security reasons, once you create the webhook,
you cannot view or retrieve the URL again.


6. Select OK to create the new webhook.
7. Select Configure parameters and run settings to view parameter values for therunbook.
Note

If the runbook has mandatory parameters, then you are not able to create thewebhook unless values are provided.


8. Select OK to accept the webhook parameter values.
9. Select Create to create the webhook.
10. Next, follow the steps above to create a second webhook named Complete.
Important

Be sure to save both webhook URLs to use later in this tutorial. For securityreasons, once you create the webhook, you cannot view or retrieve the URLagain.




You should now have two configured webhooks that are each available using the URLsthat you saved.


Webhooks - Optional and Complete


You're now done with the Azure Automation setup. You can test the webhooks with asimple Postman test to validate that the webhook works. Next, you must create theLogic App for orchestration.

Create an Azure Logic App for orchestration

Logic Apps helps you build, schedule, and automate processes as workflows so you canintegrate apps, data, systems, and services across enterprises or organizations. In thisscenario, the Logic App you create will do a little more than just call the automationwebhook you created.

Budgets can be set up to trigger a notification when a specified threshold is met. Youcan provide multiple thresholds to be notified at and the Logic App will demonstrate theability for you to perform different actions based on the threshold met. In this example,
you'll set up a scenario where you get a couple of notifications, the first notification isfor when 80% of the budget has been reached and the second notification is when100% of the budget has been reached. The logic app will be used to shut down all VMsin the resource group. First, the Optional threshold will be reached at 80%, then thesecond threshold will be reached where all VMs in the subscription will be shut down.

Logic apps allow you to provide a sample schema for the HTTP trigger, but require youto set the Content-Type header. Because the action group doesn't have custom headersfor the webhook, you must parse out the payload in a separate step. You'll use the Parseaction and provide it with a sample payload.

Create the logic app

The logic app will perform several actions. The following list provides a high-level set ofactions that the logic app will perform:


Recognizes when an HTTP request is received
Parse the passed in JSON data to determine the threshold value that has beenreached
Use a conditional statement to check whether the threshold amount has reached80% or more of the budget range, but not greater than or equal to 100%.
If this threshold amount has been reached, send an HTTP POST using thewebhook named Optional. This action will shut down the VMs in the "Optional"
group.



Use a conditional statement to check whether the threshold amount has reachedor exceeded 100% of the budget value.
If the threshold amount has been reached, send an HTTP POST using thewebhook named Complete. This action will shut down all remaining VMs.





The following steps are needed to create the logic app that will perform the abovesteps:

1. In the Azure portal, select Create a resource > Integration > Logic App.
Azure - Select the Logic App resource
2. In the Create logic app area, provide the details need to create your logic app,
select Pin to dashboard, and select Create.



Azure - Create a Logic App


After Azure deploys your logic app, the Logic Apps Designer opens and shows an areawith an introduction video and commonly used triggers.

Add a trigger

Every logic app must start with a trigger, which fires when a specific event happens orwhen a specific condition is met. Each time the trigger fires, the Logic Apps enginecreates a logic app instance that starts and runs your workflow. Actions are all the stepsthat happen after the trigger.

1. Under Templates of the Logic Apps Designer area, choose Blank Logic App.
2. Add a trigger by entering "http request" in the Logic Apps Designer search box tofind and select the trigger named Request – When an HTTP request is received.



Azure - Logic app - Http trigger
3. Select New step > Add an action.
Azure - New step - Add an action
4. Search for "parse JSON" in the Logic Apps Designer search box to find and selectthe Data Operations - Parse JSON action.



Azure - Logic app - Add parse JSON action
5. Enter "Payload" as the Content name for the Parse JSON payload or use the "Body"
tag from dynamic content.
6. Select the Use sample payload to generate schema option in the Parse JSON box.
Azure - Logic app - Use sample JSON data to generate schema
7. Paste the following JSON sample payload into the textbox:
{"schemaId":"AIPBudget Notification","data":{"SubscriptionName":"CCM - Microsoft AzureEnterprise - 1","SubscriptionId":"
<GUID>","SpendingAmount":"100","BudgetStartDate":"6/1/2018","Budget":"50","Unit":"USD","BudgetCreator":"email@contoso.com","BudgetName":"BudgetName","BudgetType":"Cost","ResourceGroup":"","NotificationThresholdAmount":"0.8"}}
The



textbox will appear as:
Azure - Logic app - The sample JSON payload
8. Select Done.


Add the first conditional action

Use a conditional statement to check whether the threshold amount has reached 80% ormore of the budget range, but not greater than or equal to 100%. If this thresholdamount has been reached, send an HTTP POST using the webhook named Optional.
This action will shut down the VMs in the Optional group.

1. Select New step > Add a condition.
Azure - Logic app - Add a condition



2. In the Condition box, select the textbox containing Choose a value to display a listof available values.
Azure - Logic app - Condition box






3. Select Expression at the top of the list and enter the following expression in theexpression editor:
float()
Azure - Logic app - Float expression



4. Select Dynamic content, place the cursor inside the parenthesis (), and selectNotificationThresholdAmount from the list to populate the complete expression.
The expression will be:
float(body('Parse_JSON')?['data']?['NotificationThresholdAmount'])


5. Select OK to set the expression.


6. Select is greater than or equal to in the dropdown box of the Condition.


7. In the Choose a value box of the condition, enter .8.
Screenshot shows the Condition dialog box with values selected.






8. Select Add > Add row within the Condition box to add an additional part of thecondition.


9. In the Condition box, select the textbox containing Choose a value.


10. Select Expression at the top of the list and enter the following expression in theexpression editor:
float()


11. Select Dynamic content, place the cursor inside the parenthesis (), and selectNotificationThresholdAmount from the list to populate the complete expression.


12. Select OK to set the expression.


13. Select is less than in the dropdown box of the Condition.


14. In the Choose a value box of the condition, enter 1.
Screenshot shows the Condition dialog box with two conditions.



15. In the If true box, select Add an action. You'll add an HTTP POST action that willshut down optional VMs.
Azure - Logic app - Add an action






16. Enter HTTP to search for the HTTP action and select the HTTP – HTTP action.
Azure - Logic app - Add HTTP action



17. Select Post for the Method value.


18. Enter the URL for the webhook named Optional that you created earlier in thistutorial as the Uri value.






Azure - Logic app - HTTP action URI



19. Select Add an action in the If true box. You'll add an email action that will send anemail notifying the recipient that the optional VMs have been shut down.


20. Search for "send email" and select a send email action based on the email serviceyou use.
Azure - Logic app - Send email action






For personal Microsoft accounts, select Outlook.com. For Azure work or schoolaccounts, select Office 365 Outlook. If you don't already have a connection, you'reasked to sign in to your email account. Logic Apps creates a connection to youremail account.
You'll need to allow the Logic App to access your email information.
Azure - Logic app - Access notice






21. Add the To, Subject, and Body text for the email that notifies the recipient that theoptional VMs have been shut down. Use the BudgetName and theNotificationThresholdAmount dynamic content to populate the subject and bodyfields.
Azure - Logic app - Email details





Add the second conditional action

Use a conditional statement to check whether the threshold amount has reached orexceeded 100% of the budget value. If the threshold amount has been reached, send anHTTP POST using the webhook named Complete. This action will shut down allremaining VMs.

1. Select New step > Add a Condition.
Screenshot shows the If true dialog box with Add an action called out.
2. In the Condition box, select the textbox containing Choose a value to display a listof available values.
3. Select Expression at the top of the list and enter the following expression in theexpression editor:
float()
4. Select Dynamic content, place the cursor inside the parenthesis (), and selectNotificationThresholdAmount from the list to populate the complete expression.
The expression will resemble:
float(body('Parse_JSON')?['data']?['NotificationThresholdAmount'])
5. Select OK to set the expression.
6. Select is greater than or equal to in the dropdown box of the Condition.



7. In the Choose a value box for the condition, enter 1.
Azure - Logic app - Set condition value
8. In the If true box, select Add an action. You'll add an HTTP POST action that willshut down all the remaining VMs.
Screenshot shows the If true dialog box with where you can add an H T T P POST action.
9. Enter HTTP to search for the HTTP action and select the HTTP – HTTP action.
10. Select Post as the Method value.
11. Enter the URL for the webhook named Complete that you created earlier in thistutorial as the Uri value.
Screenshot shows the H T T P dialog box where you can enter the U R L value.
12. Select Add an action in the If true box. You'll add an email action that will send anemail notifying the recipient that the remaining VMs have been shut down.
13. Search for "send email" and select a send email action based on the email serviceyou use.
14. Add the To, Subject, and Body text for the email that notifies the recipient that theoptional VMs have been shut down. Use the BudgetName and theNotificationThresholdAmount dynamic content to populate the subject and body



fields.
Azure - Logic app - Send email details
15. Select Save at the top of the Logic App Designer area.


Logic App summary

Here's what your Logic App looks like once you're done. In the most basic of scenarioswhere you don't need any threshold-based orchestration, you could directly call theautomation script from Monitor and skip the Logic App step.

Azure - Logic app - Complete view


When you saved your logic app, a URL was generated that you'll be able to call. You'lluse this URL in the next section of this tutorial.




Create an Azure Monitor Action Group

An action group is a collection of notification preferences that you define. When an alertis triggered, a specific action group can receive the alert by being notified. An Azurealert proactively raises a notification based on specific conditions and provides theopportunity to take action. An alert can use data from multiple sources, includingmetrics and logs.

Action groups are the only endpoint that you'll integrate with your budget. You can setup notifications in a number of channels, but for this scenario you'll focus on the LogicApp you created earlier in this tutorial.

Create an action group in Azure Monitor

When you create the action group, you'll point to the Logic App that you created earlierin this tutorial.

1. If you are not already signed-in to the Azure portal, sign in and select Allservices > Monitor.
2. Select Alerts then select Manage actions.
3. Select Add an action group from the Action groups area.
4. Add and verify the following items:
Action group name
Short name
Subscription
Resource group
Azure - Logic app - Add an action group



5. Within the Add action group pane, add a LogicApp action. Name the actionBudget-BudgetLA. In the Logic App pane, select the Subscription and theResource group. Then, select the Logic app that you created earlier in this tutorial.
6. Select OK to set the Logic App. Then, select OK in the Add action group pane tocreate the action group.



You're done with all the supporting components needed to effectively orchestrate yourbudget. Now all you need to do is create the budget and configure it to use the actiongroup you created.

Create the budget

You can create a budget in the Azure portal using the Budget feature in CostManagement. Or, you can create a budget using REST APIs, PowerShell cmdlets, or usethe CLI. The following procedure uses the REST API. Before calling the REST API, you'llneed an authorization token. To create an authorization token, you can use theARMClient project. The ARMClient allows you to authenticate yourself to the AzureResource Manager and get a token to call the APIs.

Create an authentication token

1. Navigate to the ARMClient project on GitHub.


2. Clone the repo to get a local copy.


3. Open the project in Visual Studio and build it.


4. Once the build is successful, the executable should be in the \bin\debug folder.


5. Run the ARMClient. Open a command prompt and navigate to the \bin\debugfolder from the project root.


6. To sign in and authenticate, enter the following command at the commandprompt:
ARMClient login prod


7. Copy the subscription guid from the output.


8. To copy an authorization token to your clipboard, enter the following command atthe command prompt, but sure to use the copied subscription ID from the stepabove: 
ARMClient token <subscription GUID from previous step>

Once you have completed the step above, you'll see:
Token copied to clipboard successfully.


9. Save the token to be used for steps in the next section of this tutorial.




Create the Budget


Next, you'll configure Postman to create a budget by calling the Azure ConsumptionREST APIs. Postman is an API Development environment. You'll import environment andcollection files into Postman. The collection contains grouped definitions of HTTPrequests that call Azure Consumption REST APIs. The environment file contains variablesthat are used by the collection.

1. Download and open the Postman REST client to execute the REST APIs.


2. In Postman, create a new request.
Postman - Create a new request






3. Save the new request as a collection, so that the new request has nothing on it.
Postman - Save the new request



4. Change the request from a Get to a Put action.


5. Modify the following URL by replacing {subscriptionId} with the Subscription IDthat you used in the previous section of this tutorial. Also, modify the URL toinclude "SampleBudget" as the value for {budgetName}:
https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Consumption/budgets/{budgetName}?api-version=2018-03-31


6. Select the Headers tab within Postman.


7. Add a new Key named "Authorization".





8. Set the Value to the token that was created using the ArmClient at the end of thelast section.


9. Select Body tab within Postman.


10. Select the raw button option.


11. In the textbox, paste in the below sample budget definition, however you mustreplace the subscriptionID, resourcegroupname, and actiongroupname parameterswith your subscription ID, a unique name for your resource group, and the actiongroup name you created in both the URL and the request body:

 { 
"properties": { 
"category": "Cost", 
"amount": 100.00, 
"timeGrain": "Monthly", 
"timePeriod": { 
"startDate": "2018-06-01T00:00:00Z", 
"endDate": "2018-10-31T00:00:00Z" 
}, 
"filters": {}, 
"notifications": { 
"Actual_GreaterThan_80_Percent": { 
"enabled": true, 
"operator": "GreaterThan", 
"threshold": 80, 
"contactEmails": [], 
"contactRoles": [], 
"contactGroups": [ 
"/subscriptions/{subscriptionid}/resourceGroups/{resourcegroupname}/providers/microsoft.insights/actionGroups/{actiongroupname}" 
] 
}, 
"Actual_EqualTo_100_Percent": { 
"operator": "EqualTo", 
"threshold": 100, 
"contactGroups": [ 
"/subscriptions/{subscriptionid}/resourceGroups/{resourcegroupname}/providers/microsoft.insights/actionGroups/{actiongroupname}" 
] 
} 
} 
} 
}
12. Press Send to send the request.





You now have all the pieces you need to call the budgets API. The budgets API referencehas additional details on the specific requests, including:

budgetName - Multiple budgets are supported. Budget names must be unique.
category - Must be either Cost or Usage. The API supports both cost and usagebudgets.
timeGrain - A monthly, quarterly, or yearly budget. The amount resets at the endof the period.
filters - Filters allow you to narrow the budget to a specific set of resources withinthe selected scope. For example, a filter could be a collection of resource groupsfor a subscription level budget.
notifications – Determines the notification details and thresholds. You can set upmultiple thresholds and provide an email address or an action group to receive anotification.


Summary

By using this tutorial, you learned:

How to create an Azure Automation Runbook to stop VMs.
How to create an Azure Logic App that is triggered based on the budget thresholdvalues and call the related runbook with the right parameters.
How to create an Azure Monitor Action Group that was configured to trigger theAzure Logic App when the budget threshold is met.
How to create the budget with the desired thresholds and wire it to the actiongroup.


You now have a fully functional budget for your subscription that will shut down yourVMs when you reach your configured budget thresholds.

Next steps

For more information about Azure billing scenarios, see Billing and costmanagement automation scenarios.



Alerts

Reference


Service:Cost ManagementAPI Version:2023-03-01
Operations

DismissDismisses the specified alert

GetGets the alert for the scope by alert ID.

ListLists the alerts for scope defined.

List ExternalLists the Alerts for external cloud provider type defined.




Scheduled Actions

Reference


Service:Cost ManagementAPI Version:2023-03-01
Operations

Check Name AvailabilityChecks availability and correctness of the name for a scheduledaction.

Check Name Availability ByScope
Checks availability and correctness of the name for a scheduledaction within the given scope.

Create Or UpdateCreate or update a private scheduled action.

Create Or Update By ScopeCreate or update a shared scheduled action within the givenscope.

DeleteDelete a private scheduled action.

Delete By ScopeDelete a scheduled action within the given scope.

GetGet the private scheduled action by name.

Get By ScopeGet the shared scheduled action from the given scope by name.

ListList all private scheduled actions.

List By ScopeList all shared scheduled actions within the given scope.

RunProcesses a private scheduled action.

Run By ScopeRuns a shared scheduled action within the given scope.




Microsoft.Consumption budgets

Article
12/28/2022


Bicep resource definition

The budgets resource type is an extension resource, which means you can apply it toanother resource.

Use the scope property on this resource to set the scope for this resource. See Setscope on extension resources in Bicep.

Valid deployment scopes for the budgets resource are:

Resource groups - See resource group deployment commands
Subscriptions - See subscription deployment commands


For a list of changed properties in each API version, see change log.

Resource format

To create a Microsoft.Consumption/budgets resource, add the following Bicep to yourtemplate.

Bicepresource symbolicname 'Microsoft.Consumption/budgets@2021-10-01' = { 
name: 'string' 
scope: resourceSymbolicName 
eTag: 'string' 
properties: { 
amount: int 
category: 'Cost' 
filter: { 
and: [ 
{ 
dimensions: { 
name: 'string' 
operator: 'In' 
values: [ 
'string' 
] 
} 
tags: { 
name: 'string' 
operator: 'In' 
values: [

 'string' 
] 
} 
} 
] 
dimensions: { 
name: 'string' 
operator: 'In' 
values: [ 
'string' 
] 
} 
tags: { 
name: 'string' 
operator: 'In' 
values: [ 
'string' 
] 
} 
} 
notifications: {} 
timeGrain: 'string' 
timePeriod: { 
endDate: 'string' 
startDate: 'string' 
} 
}
}
Property values

budgets

NameDescriptionValuenameThe resource namestring (required)
Character limit: 1-63
Valid characters:
Alphanumerics, hyphens, andunderscores.
scopeUse when creating an extension resource at ascope that is different than the deploymentscope.
Target resource
For Bicep, set this property tothe symbolic name of theresource to apply the extensionresource.


NameDescriptionValueeTageTag of the resource. To handle concurrentupdate scenario, this field will be used todetermine whether the user is updating the latestversion or not.
stringpropertiesThe properties of the budget.BudgetProperties

BudgetProperties

NameDescriptionValueamountThe total amount of cost to track with the budgetint (required)
categoryThe category of the budget, whether the budget tracks costor usage.
'Cost' (required)
filterMay be used to filter budgets by user-specified dimensionsand/or tags.
BudgetFilternotificationsDictionary of notifications associated with the budget. Budgetcan have up to five notifications.
objecttimeGrainThe time covered by a budget. Tracking of the amount will bereset based on the time grain. BillingMonth, BillingQuarter,
and BillingAnnual are only supported by WD customers'Annually'
'BillingAnnual'
'BillingMonth'
'BillingQuarter'
'Monthly'
'Quarterly'
(required)
timePeriodHas start and end date of the budget. The start date must befirst of the month and should be less than the end date.
Budget start date must be on or after June 1, 2017. Futurestart date should not be more than twelve months. Past startdate should be selected within the timegrain period. There areno restrictions on the end date.
BudgetTimePeriod(required)

BudgetFilter

NameDescriptionValueandThe logical "AND" expression. Must have at least 2items.
BudgetFilterProperties[]
dimensionsHas comparison expression for a dimensionBudgetComparisonExpression


NameDescriptionValuetagsHas comparison expression for a tagobject

BudgetFilterProperties

NameDescriptionValuedimensionsHas comparison expression for a dimensionBudgetComparisonExpressiontagsHas comparison expression for a tagobject

BudgetComparisonExpression

NameDescriptionValuenameThe name of the column to use in comparison.string (required)
operatorThe operator to use for comparison.'In' (required)
valuesArray of values to use for comparisonstring[] (required)

BudgetTimePeriod

NameDescriptionValueendDateThe end date for the budget. If not provided, we default this to 10years from the start date.
stringstartDateThe start date for the budget.string(required)

Quickstart templates

The following quickstart templates deploy this resource type.

TemplateDescriptionCreate a Budget
This template shows how to create a budgetunder a subscription.


TemplateDescriptionCreate a Budget with Filter
This template shows how to create a budgetunder a subscription.
Create a Simple BudgetThis template shows how to create a budgetunder a subscription.


Tutorial: Optimize costs fromrecommendations

Article
12/08/2022


Cost Management works with Azure Advisor to provide cost optimizationrecommendations. Azure Advisor helps you optimize and improve efficiency byidentifying idle and underutilized resources. This tutorial walks you through an examplewhere you identify underutilized Azure resources and then you take action to reducecosts.

Watch the video Optimizing cloud investments in Cost Management to learn moreabout using Advisor to optimize your costs. To watch other videos, visit the CostManagement YouTube channel.

https://www.youtube-nocookie.com/embed/cSNPoAb-TNc
In this tutorial, you learn how to:

View cost optimization recommendations to view potential usage inefficiencies
Act on a recommendation to resize a virtual machine to a more cost-effectiveoption
Verify the action to ensure that the virtual machine was successfully resized


Prerequisites

Recommendations are available for a variety of scopes and Azure account types. To viewthe full list of supported account types, see Understand Cost Management data. Youmust have at least read access to one or more of the following scopes to view cost data.
For more information about scopes, see Understand and work with scopes.

Subscription
Resource group


If you have a new subscription, you can't immediately use Cost Management features. Itmight take up to 48 hours before you can use all Cost Management features. Also, youmust have active virtual machines with at least 14 days of activity.

Sign in to Azure

Sign in to the Azure portal at https://portal.azure.com.




View cost optimization recommendations

To view cost optimization recommendations for a subscription, open the desired scopein the Azure portal and select Advisor recommendations.

To view recommendations for a management group, open the desired scope in theAzure portal and select Cost analysis in the menu. Use the Scope pill to switch to adifferent scope, such as a management group. Select Advisor recommendations in themenu. For more information about scopes, see Understand and work with scopes.

Cost Management Advisor recommendations shown in the Azure portal


The list of recommendations identifies usage inefficiencies or shows purchaserecommendations that can help you save additional money. The totaled Potential yearlysavings shows the total amount that you can save if you shut down or deallocate all ofyour VMs that meet recommendation rules. If you don't want to shut them down, youshould consider resizing them to a less expensive VM SKU.

The Impact category, along with the Potential yearly savings, are designed to helpidentify recommendations that have the potential to save as much as possible.

High impact recommendations include:

Buy an Azure savings plan to save money on a variety of compute services
Buy reserved virtual machine instances to save money over pay-as-you-go costs
Optimize virtual machine spend by resizing or shutting down underutilizedinstances
Use Standard Storage to store Managed Disks snapshots


Medium impact recommendations include:

Reduce costs by eliminating un-provisioned ExpressRoute circuits



Reduce costs by deleting or reconfiguring idle virtual network gateways


Act on a recommendation

Azure Advisor monitors your virtual machine usage for seven days and then identifiesunderutilized virtual machines. Virtual machines whose CPU utilization is five percent orless and network usage is seven MB or less for four or more days are considered low-
utilization virtual machines.

The 5% or less CPU utilization setting is the default, but you can adjust the settings. Formore information about adjusting the setting, see the Configure the average CPUutilization rule or the low usage virtual machine recommendation.

Although some scenarios can result in low utilization by design, you can often savemoney by changing the size of your virtual machines to less expensive sizes. Your actualsavings might vary if you choose a resize action. Let's walk through an example ofresizing a virtual machine.

In the list of recommendations, select the Right-size or shutdown underutilized virtualmachines recommendation. In the list of virtual machine candidates, choose a virtualmachine to resize and then select the virtual machine. The virtual machine's details areshown so that you can verify the utilization metrics. The potential yearly savings value iswhat you can save if you shut down or remove the VM. Resizing a VM will probably saveyou money, but you won't save the full amount of the potential yearly savings.

Example of Recommendation details


In the VM details, check the utilization of the virtual machine to confirm that it's asuitable resize candidate.


Example VM details showing historical utilization


Note the current virtual machine's size. After you've verified that the virtual machineshould be resized, close the VM details so that you see the list of virtual machines.

In the list of candidates to shut down or resize, select Resize<FromVirtualMachineSKU> to <ToVirtualMachineSKU>.
Example recommendation with the option to resize the virtual machine


Next, you're presented with a list of available resize options. Choose the one that willgive the best performance and cost-effectiveness for your scenario. In the followingexample, the option chosen resizes from Standard_D8s_v3 to Standard_D2s_v3.

Example list of available VM sizes where you can choose a size


After you choose a suitable size, select Resize to start the resize action.


Resizing requires an actively running virtual machine to restart. If the virtual machine isin a production environment, we recommend that you run the resize operation afterbusiness hours. Scheduling the restart can reduce disruptions caused by momentarilyunavailability.

Verify the action

When the VM resizing completes successfully, an Azure notification is shown.

Successful resized virtual machine notification


Next steps

In this tutorial, you learned how to:

View cost optimization recommendations to view potential usage inefficiencies
Act on a recommendation to resize a virtual machine to a more cost-effectiveoption
Verify the action to ensure that the virtual machine was successfully resized


If you haven't already read the Cost Management best practices article, it provides high-
level guidance and principles to consider to help manage costs.

Cost Management best practices


Reservation recommendations

Article
03/20/2023


Azure reserved instance (RI) purchase recommendations are provided through AzureConsumption Reservation Recommendation API, Azure Advisor, and through thereservation purchase experience in the Azure portal.

The following steps define how recommendations are calculated:

1. The recommendation engine evaluates the hourly usage for your resources in thegiven scope over the past 7, 30, and 60 days.
2. Based on the usage data, the engine simulates your costs with and withoutreservations.
3. The costs are simulated for different quantities, and the quantity that maximizesthe savings is recommended.
4. If your resources are shut down regularly, the simulation can't find any savings, andno purchase recommendation is provided.
5. The recommendation calculations include any special discounts that you mighthave for your on-demand usage rates.


The recommendations account for existing reservations and savings plans. So,
previously purchased reservations and savings plans are excluded when providingrecommendations.

Recommendations in the Azure portal

Reservation purchase recommendations are also shown in the Azure portal in thepurchase experience. Recommendations are shown with the Recommended Quantity.
When purchased, the quantity that Azure recommends gives the maximum savingspossible. Although you can buy any quantity that you like, if you buy a different quantityyour savings aren't optimal.

Let's look at some examples why.

In the following example image for the selected recommendation, Azure recommends apurchase quantity of 6.


Example showing a reservation purchase recommendation


More information about the recommendation appears when you select See details. Thefollowing image shows details about the recommendation. The quantity recommendedis calculated for the highest possible usage and it's based on your historical usage. Yourrecommendation might not be for 100% utilization if you have inconsistent usage. In theexample, notice that utilization fluctuated over time. The cost of the reservation,
possible savings, and utilization percentage is shown.

Example showing details for a reservation purchase recommendation 



The chart and estimated values change when you increase the recommended quantity.
When you increase the reservation quantity, your savings are reduced because you endup with reduced reservation use. In other words, you pay for reservations that aren'tfully used.

If you lower the reservation quantity, your savings are also reduced. Although utilizationis increased, there might be periods when your reservations don't fully cover your use.
Usage beyond your reservation quantity is used by more expensive pay-as-you-goresources. The following example image illustrates the point. We've manually reducedthe reservation quantity to 4. The reservation utilization is increased, but the overallsavings are reduced because pay-as-you go costs are present.

Example showing changed reservation purchase recommendation details


To maximize savings with reservations, try to purchase reservations as close to therecommendation as possible.

Recommendations in Azure Advisor

Reservation purchase recommendations are available in Azure Advisor. Keep in mind thefollowing points:

Advisor has only single-subscription scope recommendations. If you want to seerecommendations for the entire billing scope (Billing account or billing profile),
then:
In the Azure portal, navigate to Reservations > Add and then select the typethat you want to see the recommendations for.






Recommendations available in Advisor consider your past 30-day usage trend.
The recommendations quantity and savings are for a three-year reservation, whereavailable. If a three-year reservation isn't sold for the service, the recommendationis calculated using the one-year reservation price.
The recommendation calculations include any special discounts that you mighthave on your on-demand usage rates.
If you purchase a shared-scope reservation, Advisor reservation purchaserecommendations can take up to five days to disappear.
Azure classic compute resources such as classic VMs are explicitly excluded fromreservation recommendations. Microsoft recommends that users avoid makinglong-term commitments to legacy services that are being deprecated.


Other expected API behavior

When using a look-back period of seven days, you might not getrecommendations when VMs are shut down for more than a day.


Next steps

Get Reservation recommendations using REST APIs.
Learn about how the Azure reservation discount is applied to virtual machines.



Determine what reservation to purchase

Article
06/27/2023


All reservations, except Azure Databricks, are applied on an hourly basis. You shouldpurchase reservations based on consistent base usage. There are multiple ways todetermine what to purchase and this article helps you determine which reservation youshould purchase.

Purchasing more capacity than your historical usage results in an underutilizedreservation. You should avoid underutilization whenever possible. Unused reservedcapacity doesn't carry over from one hour to next. Usage exceeding the reservedquantity is charged using more expensive pay-as-you-go rates.

Analyze usage data

Use the following sections to help analyze your daily usage data to determine yourbaseline usage and what reservation to purchase. Before you begin, review the View anddownload your Azure usage and charges article to get details about how to downloadthe usage file.

Analyze usage for a VM reserved instance purchase

Identify the right VM size for your purchase. For example, a reservation purchased for ESseries VMs doesn't apply to E series VMs, and vice-versa.

Promo series VMs don't get a reservation discount, so remove them from your analysis.

To narrow down to eligible VM usage, apply the following filters on your usage data:

Filter MeterCategory to Virtual Machines.
Get ServiceType information from AdditionalInfo. The information suggests theright VM size. For example, D2s_v3.
Use the ResourceLocation field to determine the usage data center.


Ignore resources that have less than 24 hours of usage in a day.

Here's an example of the usage file showing the usage file with filters applied. In theexample, AdditionalInfo suggests a D2s_v3 virtual machine.


Screenshot showing the usage file with filters applied.


If you want to analyze at the instance size family level, you can get the instance sizeflexibility values from https://isfratio.blob.core.windows.net/isfratio/ISFRatio.csv.
Combine the values with your data to do the analysis. For more information aboutinstance size flexibility, see Virtual machine size flexibility with Reserved VM Instances.

Analyze usage for an Azure Synapse Analytics reservedinstance purchase

Reserved capacity applies to Azure Synapse Analytics DWU pricing. It doesn't apply toAzure Synapse Analytics license cost or any costs other than compute.

To narrow eligible usage, apply the following filters to your usage data:

Filter MeterCategory for SQL Database.
Filter MeterName for vCore.
Filter MeterSubCategory for all usage records that have Compute in the name.


From AdditionalInfo, get the vCores value. It tells you how many vCores were used. Thequantity is vCores multiplied by the number of hours the database was used.

The data informs you about the consistent usage for:

Combination of database type. For example, managed instance or elastic pool persingle database.
Service tier. For example, general purpose or business critical.
Generation. For example, Gen 5.
Resource Location


Analysis for Azure Synapse Analytics

Reserved capacity applies to Azure Synapse Analytics DWU usage and is purchased inincrements on 100 DWU. To narrow eligible usage, apply the following filters on yourusage data:

Filter MeterName for 100 DWUs.
Filter Meter Sub-Category for Compute Optimized Gen2.



Use the Resource Location field to determine the usage for Azure Synapse Analytics in aregion.

Azure Synapse Analytics usage can scale up and down throughout the day. Talk to theteam that managed the Azure Synapse Analytics instance to learn about the base usage.

Go to Reservations in the Azure portal and purchase Azure Synapse Analytics reservedcapacity in multiples of 100 DWUs.

Reservation purchase recommendations

Reservation purchase recommendations are calculated by analyzing your hourly usagedata over last 7, 30, and 60 days. Azure calculates what your costs would have been ifyou had a reservation and compares it with your actual pay-as-you-go costs incurredover the time duration. The calculation is performed for every quantity that you usedduring the time frame. The quantity that maximizes your savings is recommended.

For example, you might use 500 VMs most of the time, but sometimes usage spikes to700 VMs. In this example, Azure calculates your savings for both the 500 and 700 VMquantities. Since the 700 VM usage is sporadic, the recommendation calculationdetermines that savings are maximized for a 500 VM reservation purchase and therecommendation is provided for the 500 quantity.

Note the following points:

Reservation recommendations are calculated using the on-demand usage ratesthat apply to you.
Recommendations are calculated for individual sizes, not for the instance sizefamily.
The recommended quantity for a scope is reduced on the same day that youpurchase reservations for the scope.
However, an update for the reservation quantity recommendation across scopescan take up to 25 days. For example, if you purchase based on shared scoperecommendations, the single subscription scope recommendations can take upto 25 days to adjust down.



Currently, Azure doesn't generate recommendations for the management groupscope.


Recommendations in the Azure portal

Reservation purchases calculated by the recommendations engine are shown on theRecommended tab in the Azure portal. Here's an example image.


Image showing recommendations


Learn more about recommendations.

Recommendations in the Cost ManagementPower BI app

Enterprise Agreement customers can use the VM RI Coverage reports for VMs andpurchase recommendations. The coverage reports show total usage and the usagethat's covered by reserved instances.

1. Get the Cost Management App.
2. Go to the VM RI Coverage report – Shared or Single scope, depending on whichscope you want to purchase at.
3. Select the region, instance size family to see the usage, RI coverage, and thepurchase recommendation for the selected filter.


Recommendations in Azure Advisor

Reservation purchase recommendations are available in Azure Advisor.

Advisor has only single-subscription scope recommendations. If you want to seerecommendations for the entire billing scope (Billing account or billing profile),
then:
In the Azure portal, navigate to Reservations > Add and then select the type thatyou want to see the recommendations for.



The recommendations quantity and savings are for a three-year reservation, whereavailable. If a three-year reservation isn't sold for the service, the recommendationis calculated using the one-year reservation price.
The recommendation calculations include any special discounts that you mighthave on your on-demand usage rates.
If you purchase a shared-scope reservation, Advisor reservation purchaserecommendations can take up to five days to disappear.
Azure classic compute resources such as classic VMs are explicitly excluded fromreservation recommendations. Microsoft recommends that users avoid makinglong-term commitments to legacy services that are being deprecated.


Recommendations using APIs

Use the Reservation Recommendations REST API to view recommendationsprogrammatically.

Next steps

Manage Azure Reservations
Understand reservation usage for your subscription with pay-as-you-go rates
Understand reservation usage for your Enterprise enrollment
Windows software costs not included with reservations



Buy a reservation

Article
12/07/2022


Azure Reservations help you save money by committing to one-year or three-yearsplans for many Azure resources. Before you enter a commitment to buy a reservation,
be sure to review the following sections to prepare for your purchase.

Who can buy a reservation

To buy a reservation, you must have owner role or reservation purchaser role on anAzure subscription that's of type Enterprise (MS-AZR-0017P or MS-AZR-0148P) or Pay-
As-You-Go (MS-AZR-0003P or MS-AZR-0023P) or Microsoft Customer Agreement.
Cloud solution providers can use the Azure portal or Partner Center to purchase AzureReservations. You will not be able to purchase a reservation if you have a custom rolethat mimics owner role or reservation purchaser role on an Azure subscription, you mustuse built-in owner or built-in reservation purchaser role.

Enterprise Agreement (EA) customers can limit purchases to EA admins by disabling theAdd Reserved Instances option in the EA Portal. Direct EA customers can now disableReserved Instance setting in Azure portal. Navigate to Policies menu to changesettings.

EA admins must have owner or reservation purchaser access on at least one EAsubscription to purchase a reservation. The option is useful for enterprises that want acentralized team to purchase reservations.

A reservation discount only applies to resources associated with subscriptionspurchased through Enterprise, Cloud Solution Provider (CSP), Microsoft CustomerAgreement and individual plans with pay-as-you-go rates.

Scope reservations

You can scope a reservation to a subscription or resource groups. Setting the scope for areservation selects where the reservation savings apply. When you scope the reservationto a resource group, reservation discounts apply only to the resource group—not theentire subscription.

Reservation scoping options

You have four options to scope a reservation, depending on your needs:


Single resource group scope — Applies the reservation discount to the matchingresources in the selected resource group only.
Single subscription scope — Applies the reservation discount to the matchingresources in the selected subscription.
Shared scope — Applies the reservation discount to matching resources in eligiblesubscriptions that are in the billing context. If a subscription was moved todifferent billing context, the benefit will no longer be applied to this subscriptionand will continue to apply to other subscriptions in the billing context.
For Enterprise Agreement customers, the billing context is the enrollment. Thereservation shared scope would include multiple Active Directory tenants in anenrollment.
For Microsoft Customer Agreement customers, the billing scope is the billingprofile.
For individual subscriptions with pay-as-you-go rates, the billing scope is alleligible subscriptions created by the account administrator.



Management group — Applies the reservation discount to the matching resourcein the list of subscriptions that are a part of both the management group andbilling scope. To buy a reservation for a management group, you must have atleast read permission on the management group and be a reservation owner orreservation purchaser on the billing subscription.


While applying reservation discounts on your usage, Azure processes the reservation inthe following order:

1. Reservations with a single resource group scope
2. Reservations with a single subscription scope
3. Reservations scoped to a management group
4. Reservations with a shared scope (multiple subscriptions), described previously


You can always update the scope after you buy a reservation. To do so, go to thereservation, select Configuration, and rescope the reservation. Rescoping a reservationisn't a commercial transaction. Your reservation term isn't changed. For moreinformation about updating the scope, see Update the scope after you purchase areservation.


Example showing a reservation scope change


Discounted subscription and offer types

Reservation discounts apply to the following eligible subscriptions and offer types.

Enterprise agreement (offer numbers: MS-AZR-0017P or MS-AZR-0148P)
Microsoft Customer Agreement subscriptions.
Individual plans with pay-as-you-go rates (offer numbers: MS-AZR-0003P or MS-
AZR-0023P)
CSP subscriptions


Resources that run in a subscription with other offer types don't receive the reservationdiscount.

Purchase reservations

You can purchase reservations from Azure portal, APIs, PowerShell, CLI. Read thefollowing articles that apply to you when you're ready to make a reservation purchase:

App Service
App Service - JBoss EA Integrated Support
Azure Backup
Azure Cache for Redis
Azure Data Factory
Azure Database for MariaDB
Azure Database for MySQL
Azure Database for PostgreSQL
Azure Blob storage
Azure Files
Azure VMware Solution



Azure Cosmos DB
Azure SQL Edge
Databricks
Data Explorer
Dedicated Host
Disk Storage
SAP HANA Large Instances
Software plans
SQL Database
Synapse Analytics - data warehouse
Synapse Analytics - Pre-purchase
Virtual machines
Virtual machine software


Buy reservations with monthly payments

You can pay for reservations with monthly payments. Unlike an up-front purchase whereyou pay the full amount, the monthly payment option divides the total cost of thereservation evenly over each month of the term. The total cost of up-front and monthlyreservations is the same and you don't pay any extra fees when you choose to paymonthly.

If reservation is purchased using Microsoft customer agreement (MCA), your monthlypayment amount may vary, depending on the current month's market exchange rate foryour local currency.

Monthly payments are not available for: Databricks, Synapse Analytics - Pre-purchase,
SUSE Linux reservations, Red Hat Plans and Azure Red Hat OpenShift Licenses.

View payments made

You can view payments that were made using APIs, usage data, and in cost analysis. Forreservations paid for monthly, the frequency value is shown as recurring in usage dataand Reservation Charges API. For reservations paid up front, the value is shown asonetime.

Cost analysis shows monthly purchases in the default view. Apply the purchase filter toCharge type and recurring for Frequency to see all purchases. To view only reservations,
apply a filter for Reservation.


Example showing reservation purchase costs in cost analysis


Exchange and refunds

Like other reservations, you can refund or exchange reservations purchased withmonthly billing.

When you exchange a reservation that's paid for monthly, the total lifetime cost of thenew purchase should be greater than the leftover payments that are canceled for thereturned reservation. There are no other limits or fees for exchanges. You can exchangea reservation that's paid for up front to purchase a new reservation that's billed monthly.
However, the lifetime value of the new reservation should be greater than the proratedvalue of the reservation being returned.

If you cancel a reservation that's paid for monthly, canceled future payments accruetowards the $50,000 USD refund limit.

For more information about exchange and refunds, see Self-service exchanges andrefunds for Azure Reservations.

Reservation notifications

Depending on how you pay for your Azure subscription, email reservation notificationsare sent to the following users in your organization. Notifications are sent for variousevents including:

Purchase
Upcoming reservation expiration
Expiry
Renewal
Cancellation
Scope change



Notifications are sent to the following users:

Customers with EA subscriptions
Notifications are sent to the EA notification contacts, EA admin, reservationowners, and the reservation administrator.



Customers with Microsoft Customer Agreement (Azure Plan)
Notifications are sent to the reservation owners and the reservationadministrator.



Cloud Solution Provider and new commerce partners
Emails are sent to the partner notification contact.



Individual subscription customers with pay-as-you-go rates
Emails are sent to users who are set up as account administrators, reservationowners, and the reservation administrator.





Next steps

Learn more about Reservations permissions
Manage Reservations for Azure resources
Automate using REST APIs
Automate using Azure PowerShell
Automate using CLI



Permissions to view and manage Azurereservations

Article
03/03/2023


This article explains how reservation permissions work and how users can view andmanage Azure reservations in the Azure portal and with Azure PowerShell.

Note

We recommend that you use the Azure Az PowerShell module to interact withAzure. See Install Azure PowerShell to get started. To learn how to migrate to theAz PowerShell module, see Migrate Azure PowerShell from AzureRM to Az.

Who can manage a reservation by default

By default, the following users can view and manage reservations:

The person who buys a reservation and the account administrator of the billingsubscription used to buy the reservation are added to the reservation order.
Enterprise Agreement and Microsoft Customer Agreement billing administrators.
Users with elevated access to manage all Azure subscriptions and managementgroups
A Reservation administrator for reservations in their Azure Active Directory (AzureAD) tenant (directory)
A Reservation reader has read-only access to reservations in their Azure ActiveDirectory tenant (directory)


The reservation lifecycle is independent of an Azure subscription, so the reservation isn'ta resource under the Azure subscription. Instead, it's a tenant-level resource with its ownAzure RBAC permission separate from subscriptions. Reservations don't inheritpermissions from subscriptions after the purchase.

View and manage reservations

If you're a billing administrator, use following steps to view and manage all reservationsand reservation transactions in the Azure portal.

1. Sign into the Azure portal and navigate to Cost Management + Billing.



If you're an EA admin, in the left menu, select Billing scopes and then in thelist of billing scopes, select one.
If you're a Microsoft Customer Agreement billing profile owner, in the leftmenu, select Billing profiles. In the list of billing profiles, select one.



2. In the left menu, select Products + services > Reservations.
3. The complete list of reservations for your EA enrollment or billing profile is shown.
4. Billing administrators can take ownership of a reservation by selecting one ormultiple reservations, selecting Grant access and selecting Grant access in thewindow that appears. For a Microsoft Customer Agreement, user should be in thesame Azure Active Directory (Azure AD) tenant (directory) as the reservation.


Add billing administrators

Add a user as billing administrator to an Enterprise Agreement or a Microsoft CustomerAgreement in the Azure portal.

For an Enterprise Agreement, add users with the Enterprise Administrator role toview and manage all reservation orders that apply to the Enterprise Agreement.
Enterprise administrators can view and manage reservations in Cost Management+ Billing.
Users with the Enterprise Administrator (read only) role can only view thereservation from Cost Management + Billing.
Department admins and account owners can't view reservations unless they'reexplicitly added to them using Access control (IAM). For more information, seeManaging Azure Enterprise roles.



For a Microsoft Customer Agreement, users with the billing profile owner role orthe billing profile contributor role can manage all reservation purchases madeusing the billing profile. Billing profile readers and invoice managers can view allreservations that are paid for with the billing profile. However, they can't makechanges to reservations.
For more information, see Billing profile roles and tasks.


View reservations with Azure RBAC access

If you purchased the reservation or you're added to a reservation, use the followingsteps to view and manage reservations in the Azure portal.

1. Sign in to the Azure portal.
2. Select All Services > Reservations to list reservations that you have access to.





Manage subscriptions and managementgroups with elevated access

You can elevate a user's access to manage all Azure subscriptions and managementgroups.

After you have elevated access:

1. Navigate to All Services > Reservation to see all reservations that are in thetenant.
2. To make modifications to the reservation, add yourself as an owner of thereservation order using Access control (IAM).


Grant access to individual reservations

Users who have owner access on the reservations and billing administrators candelegate access management for an individual reservation order in the Azure portal.

To allow other people to manage reservations, you have two options:

Delegate access management for an individual reservation order by assigning theOwner role to a user at the resource scope of the reservation order. If you want togive limited access, select a different role.
For detailed steps, see Assign Azure roles using the Azure portal.


Add a user as billing administrator to an Enterprise Agreement or a MicrosoftCustomer Agreement:

For an Enterprise Agreement, add users with the Enterprise Administrator role toview and manage all reservation orders that apply to the Enterprise Agreement.
Users with the Enterprise Administrator (read only) role can only view thereservation. Department admins and account owners can't view reservationsunless they're explicitly added to them using Access control (IAM). For moreinformation, see Managing Azure Enterprise roles.

Enterprise Administrators can take ownership of a reservation order and they canadd other users to a reservation using Access control (IAM).


For a Microsoft Customer Agreement, users with the billing profile owner role orthe billing profile contributor role can manage all reservation purchases madeusing the billing profile. Billing profile readers and invoice managers can view allreservations that are paid for with the billing profile. However, they can't make








changes to reservations.
For more information, see Billing profile roles andtasks.







Grant access with PowerShell

Users that have owner access for reservations orders, users with elevated access, andUser Access Administrators can delegate access management for all reservation ordersthey have access to.

Access granted using PowerShell isn't shown in the Azure portal. Instead, you use theget-AzRoleAssignment command in the following section to view assigned roles.

Assign the owner role for all reservations

Use the following Azure PowerShell script to give a user Azure RBAC access to allreservations orders in their Azure AD tenant (directory).

Azure PowerShellImport-Module Az.Accounts
Import-Module Az.Resources 
Connect-AzAccount -Tenant <TenantId> 
$response = Invoke-AzRestMethod -Path 
/providers/Microsoft.Capacity/reservations?api-version=2020-06-01 -Method 
GET 
$responseJSON = $response.Content | ConvertFrom-JSON 
$reservationObjects = $responseJSON.value 
foreach ($reservation in $reservationObjects)
{ 
$reservationOrderId = $reservation.id.substring(0, 84) 
Write-Host "Assigning Owner role assignment to "$reservationOrderId 
New-AzRoleAssignment -Scope $reservationOrderId -ObjectId <ObjectId> -
RoleDefinitionName Owner
}
When you use the PowerShell script to assign the ownership role and it runssuccessfully, a success message isn’t returned.

Parameters


-ObjectId Azure AD ObjectId of the user, group, or service principal.

Type: String
Aliases: Id, PrincipalId
Position: Named
Default value: None
Accept pipeline input: True
Accept wildcard characters: False


-TenantId Tenant unique identifier.

Type: String
Position: 5
Default value: None
Accept pipeline input: False
Accept wildcard characters: False


Tenant-level access

User Access Administrator rights are required before you can grant users or groups theReservations Administrator and Reservations Reader roles at the tenant level. In order toget User Access Administrator rights at the tenant level, follow Elevate access steps.

Add a Reservations Administrator role or ReservationsReader role at the tenant level

You can assign these roles from Azure portal.

1. Sign in to the Azure portal and navigate to Reservations.
2. Select a reservation that you have access to.
3. At the top of the page, select Role Assignment.
4. Select the Roles tab.
5. To make modifications, add a user as a Reservations Administrator or ReservationsReader using Access control.


Add a Reservation Administrator role at the tenant levelusing Azure PowerShell script

Use the following Azure PowerShell script to add a Reservation Administrator role at thetenant level with PowerShell.


Azure PowerShellImport-Module Az.Accounts
Import-Module Az.Resources
Connect-AzAccount -Tenant <TenantId>
New-AzRoleAssignment -Scope "/providers/Microsoft.Capacity" -PrincipalId 
<ObjectId> -RoleDefinitionName "Reservations Administrator"
Parameters

-ObjectId Azure AD ObjectId of the user, group, or service principal.

Type: String
Aliases: Id, PrincipalId
Position: Named
Default value: None
Accept pipeline input: True
Accept wildcard characters: False


-TenantId Tenant unique identifier.

Type: String
Position: 5
Default value: None
Accept pipeline input: False
Accept wildcard characters: False


Assign a Reservation Reader role at the tenant level usingAzure PowerShell script

Use the following Azure PowerShell script to assign the Reservation Reader role at thetenant level with PowerShell.

Azure PowerShellImport-Module Az.Accounts
Import-Module Az.Resources
Connect-AzAccount -Tenant <TenantId>
New-AzRoleAssignment -Scope "/providers/Microsoft.Capacity" -PrincipalId 
<ObjectId> -RoleDefinitionName "Reservations Reader"



Parameters

-ObjectId Azure AD ObjectId of the user, group, or service principal.

Type: String
Aliases: Id, PrincipalId
Position: Named
Default value: None
Accept pipeline input: True
Accept wildcard characters: False


-TenantId Tenant unique identifier.

Type: String
Position: 5
Default value: None
Accept pipeline input: False
Accept wildcard characters: False


Next steps

Manage Azure Reservations.



View Azure reservations as a CloudSolution Provider (CSP)

Article
12/07/2022


Cloud Solution Providers can access reservations that are purchased for their customers.
Use the following information to view reservations in the Azure portal.

1. Contact your global admin to get yourself added as an admin agent in yourtenant.
The option is available to global admins in the Partner Center. It's underSettings (the gear symbol on the top right of the page) > User management.
2. After you have admin agent privilege, go to the Azure portal using the Admin onBehalf Of link.
3. Navigate to Partner Center > Customers > expand customer details > MicrosoftAzure Management Portal.
4. In the Azure portal, go to Reservations.


Note

Being a guest in the customer's tenant prevents you from viewing reservations. Ifyou have guest access, you need to remove it from the tenant. Admin agentprivilege doesn't override guest access.

To remove your guest access in the Partner Center, navigate to My Account >
Organizations and then select Leave organization.


Alternately, ask another user who can access the reservation to add your guest accountto the reservation order.

Next steps

View Azure reservations



Self-service exchanges and refunds forAzure Reservations

Article
05/03/2023


Azure Reservations provide flexibility to help meet your evolving needs. Reservationproducts are interchangeable with each other if they're the same type of reservation. Forexample, you can exchange multiple compute reservations including Azure DedicatedHost, Azure VMware Solution, and Azure Virtual Machines with each other all at once.
You can also exchange multiple SQL database reservation types including SQL ManagedInstances and Elastic Pool with each other.

However, you can't exchange dissimilar reservations. For example, you can't exchangean Azure Cosmos DB reservation for SQL Database.

You can also exchange a reservation to purchase another reservation of a similar type ina different region. For example, you can exchange a reservation that's in West US 2region for one that's in West Europe region.

Note

Exchanges will be unavailable for all compute reservations - Azure Reserved VirtualMachine Instances, Azure Dedicated Host reservations, and Azure App Servicesreservations - purchased on or after January 1, 2024. Compute reservationspurchased prior to January 1, 2024 will reserve the right to exchange one moretime after the policy change goes into effect. Microsoft launched Azure savingsplan for compute and it's designed to help you save broadly on predictablecompute usage. The savings plan provides more flexibility needed to accommodatechanges such as virtual machine series and regions. With savings plan providing theflexibility automatically, we’re adjusting our reservations exchange policy. You cancontinue to use instance size flexibility for VM sizes, but we'll no longer supportexchanging instance series or regions for Azure Reserved Virtual Machine Instances,
Azure Dedicated Host reservations, and Azure App Services reservations. For moreinformation about the exchange policy change, see Changes to the Azurereservation exchange policy.

You may trade-in your Azure compute reservations for a savings plan. Or, you maycontinue to use and purchase reservations for those predictable, stable workloadswhere you know the specific configuration you’ll need and want additional savings.
Learn more about Azure savings plan for compute and how it works withreservations.


When you exchange a reservation, you can change your term from one-year to three-
year. Or, you can change the term from three-year to one-year.

You can also refund reservations, but the sum total of all canceled reservationcommitment in your billing scope (such as EA, Microsoft Customer Agreement, andMicrosoft Partner Agreement) can't exceed USD 50,000 in a 12 month rolling window.

The following reservations aren't eligible for refunds:

Azure Databricks reserved capacity
Synapse Analytics Pre-purchase plan
Azure VMware solution by CloudSimple
Azure Red Hat Open Shift
Red Hat plans
SUSE Linux plans


Note

You must have owner or Reservation administrator access on theReservation Order to exchange or refund an existing reservation. You canAdd or change users who can manage a reservation.
Microsoft is not currently charging early termination fees for reservationrefunds. We might charge the fees for refunds made in the future. Wecurrently don't have a date for enabling the fee.


How to exchange or refund an existingreservation

You can exchange your reservation from Azure portal.


1. Select the reservations that you want to refund and select Exchange.
Example image showing reservations to return
2. Select the VM product that you want to purchase and type a quantity. Make surethat the new purchase total is more than the return total. Determine the right sizebefore you purchase.
Example image showing the VM product to purchase with an exchange



3. Review and complete the transaction.
Example image showing the VM product to purchase with an exchange, completing the return


To refund a reservation, go to Reservation Details and select Refund.

Exchange multiple reservations

You can return similar types of reservations in one action.

When you exchange reservations, the new purchase currency amount must be greaterthan the refund amount. You can exchange any number of reservations for otherallowed reservations if the currency amount is greater or equal to returned (exchanged)
reservations. If your new purchase amount is less than the refund amount, an errormessage appears. If you see the error, reduce the quantity you want to return orincrease the amount to purchase.

1. Sign in to the Azure portal and navigate to Reservations.
2. In the list of reservations, select the box for each reservation that you want toexchange.
3. At the top of the page, select Exchange.
4. If needed, revise the quantity to return for each reservation.
5. If you select the autofill return quantity, you can choose to Refund all to fill the listwith the full quantity that you own for each reservation. Or, select Optimize forutilization (7-day) to fill the list with a quantity that optimizes for utilization basedon the last seven days of usage. Select Apply.
6. At the bottom of the page, select Next: Purchase.
7. On the purchase tab, select the available products that you want to exchange for.
You can select multiple products of different types.
8. In the Select the product you want to purchase pane, select the products you wantand then select Add to cart and then select Close.
9. When done, select Next: Review.
10. Review your reservations to return and new reservations to purchase and thenselect Confirm exchange.





Exchange nonpremium storage for premiumstorage

You can exchange a reservation purchased for a VM size that doesn't support premiumstorage to a corresponding VM size that does. For example, an F1 for an F1s. To makethe exchange, go to Reservation Details and select Exchange. The exchange doesn'treset the term of the reserved instance or create a new transaction.
If you're exchangingfor a different size, series, region or payment frequency, the term is reset for the newreservation.

How transactions are processed

Microsoft cancels the existing reservation. Then the pro-rated amount for thatreservation is refunded. If there's an exchange, the new purchase is processed. Microsoftprocesses refunds using one of the following methods, depending on your account typeand payment method.

Enterprise agreement customers

Money is added to the Azure Prepayment (previously called monetary commitment) forexchanges and refunds if the original purchase was made using one. If the AzurePrepayment term using the reservation was purchased is no longer active, then credit isadded to your current enterprise agreement Azure Prepayment term. The credit is validfor 90 days from the date of refund. Unused credit expires at the end of 90 days.

If the original purchase was made as an overage, the original invoice on which thereservation was purchased and all later invoices are reopened and readjusted. Microsoftissues a credit memo for the refunds.

Pay-as-you-go invoice payments and CSP program

The original reservation purchase invoice is canceled and then a new invoice is createdfor the refund. For exchanges, the new invoice shows the refund and the new purchase.
The refund amount is adjusted against the purchase. If you only refunded a reservation,
then the prorated amount stays with Microsoft and it's adjusted against a futurereservation purchase. If you bought a reservation at pay-as-you-go rates and later moveto a CSP, the reservation can be returned and repurchased without a penalty.

Although a CSP customer can’t exchange, cancel, renew, or refund a reservationthemself, they can ask their partner to do it on their behalf.




Pay-as-you-go credit card customers

The original invoice is canceled, and a new invoice is created. The money is refunded tothe credit card that was used for the original purchase. If you've changed your card,
contact support.

Cancel, exchange, and refund policies

Azure has the following policies for cancellations, exchanges, and refunds.

Exchange policies

You can return multiple existing reservations to purchase one new reservation ofthe same type. You can't exchange reservations of one type for another. Forexample, you can't return a VM reservation to purchase a SQL reservation. You canchange a reservation property such as family, series, version, SKU, region, quantity,
and term with an exchange.
Only reservation owners can process an exchange. Learn how to Add or changeusers who can manage a reservation.
An exchange is processed as a refund and a repurchase – different transactions arecreated for the cancellation and the new reservation purchase. The proratedreservation amount is refunded for the reservations that's traded-in. You'recharged fully for the new purchase. The prorated reservation amount is the dailyprorated residual value of the reservation being returned.
You can exchange or refund reservations even if the enterprise agreement used topurchase the reservation is expired and was renewed as a new agreement.
The new reservation's lifetime commitment should equal or be greater than thereturned reservation's remaining commitment. Example: for a three-yearreservation that's $100 per month and exchanged after the 18th payment, the newreservation's lifetime commitment should be $1,800 or more (paid monthly orupfront).
The new reservation purchased as part of exchange has a new term starting fromthe time of exchange.
There's no penalty or annual limits for exchanges.


Refund policies

We're currently not charging an early termination fee, but in the future there mightbe a 12% early termination fee for cancellations.
The total canceled commitment can't exceed 50,000 USD in a 12-month rollingwindow for a billing profile or single enrollment. For example, assume you have athree-year reservation (36 months). It costs 100 USD per month. It's refunded in



the 12th month. The canceled commitment is 2,400 USD (for the remaining 24months). After the refund, your new available limit for refund is 47,600 USD(50,000-2,400). In 365 days from the refund, the 47,600 USD limit increases by2,400 USD. Your new pool is 50,000 USD. Any other reservation cancellation for thebilling profile or EA enrollment depletes the same pool, and the samereplenishment logic applies.
Azure doesn't process any refund that exceeds the 50,000 USD limit in a 12-monthwindow for a billing profile or EA enrollment.
Refunds that result from an exchange don't count against the refund limit.



Refunds are calculated based on the lowest price of either your purchase price orthe current price of the reservation.
Only reservation order owners can process a refund. Learn how to Add or changeusers who can manage a reservation.
For CSP program, the 50,000 USD limit is per customer.


Let's look at an example with the previous points in mind. If you bought a $300,000reservation, you can exchange it at any time for another reservation that equals or costsmore (of the remaining reservation balance, not the original purchase price). For thisexample:

There's no penalty or annual limits for exchanges.
The refund that results from the exchange doesn't count against the refund limit.


Need help? Contact us.

If you have questions or need help, create a support request.

Next steps

To learn how to manage a reservation, see Manage Azure Reservations.
Learn about Azure savings plan for compute
To learn more about Azure Reservations, see the following articles:
What are Azure Reservations?
Manage Reservations in Azure
Understand how the reservation discount is applied
Understand reservation usage for your Pay-As-You-Go subscription
Understand reservation usage for your Enterprise enrollment
Windows software costs not included with reservations
Azure Reservations in the CSP program






Self-service exchanges and refunds forAzure Reservations

Article
05/03/2023


Azure Reservations provide flexibility to help meet your evolving needs. Reservationproducts are interchangeable with each other if they're the same type of reservation. Forexample, you can exchange multiple compute reservations including Azure DedicatedHost, Azure VMware Solution, and Azure Virtual Machines with each other all at once.
You can also exchange multiple SQL database reservation types including SQL ManagedInstances and Elastic Pool with each other.

However, you can't exchange dissimilar reservations. For example, you can't exchangean Azure Cosmos DB reservation for SQL Database.

You can also exchange a reservation to purchase another reservation of a similar type ina different region. For example, you can exchange a reservation that's in West US 2region for one that's in West Europe region.

Note

Exchanges will be unavailable for all compute reservations - Azure Reserved VirtualMachine Instances, Azure Dedicated Host reservations, and Azure App Servicesreservations - purchased on or after January 1, 2024. Compute reservationspurchased prior to January 1, 2024 will reserve the right to exchange one moretime after the policy change goes into effect. Microsoft launched Azure savingsplan for compute and it's designed to help you save broadly on predictablecompute usage. The savings plan provides more flexibility needed to accommodatechanges such as virtual machine series and regions. With savings plan providing theflexibility automatically, we’re adjusting our reservations exchange policy. You cancontinue to use instance size flexibility for VM sizes, but we'll no longer supportexchanging instance series or regions for Azure Reserved Virtual Machine Instances,
Azure Dedicated Host reservations, and Azure App Services reservations. For moreinformation about the exchange policy change, see Changes to the Azurereservation exchange policy.

You may trade-in your Azure compute reservations for a savings plan. Or, you maycontinue to use and purchase reservations for those predictable, stable workloadswhere you know the specific configuration you’ll need and want additional savings.
Learn more about Azure savings plan for compute and how it works withreservations.


When you exchange a reservation, you can change your term from one-year to three-
year. Or, you can change the term from three-year to one-year.

You can also refund reservations, but the sum total of all canceled reservationcommitment in your billing scope (such as EA, Microsoft Customer Agreement, andMicrosoft Partner Agreement) can't exceed USD 50,000 in a 12 month rolling window.

The following reservations aren't eligible for refunds:

Azure Databricks reserved capacity
Synapse Analytics Pre-purchase plan
Azure VMware solution by CloudSimple
Azure Red Hat Open Shift
Red Hat plans
SUSE Linux plans


Note

You must have owner or Reservation administrator access on theReservation Order to exchange or refund an existing reservation. You canAdd or change users who can manage a reservation.
Microsoft is not currently charging early termination fees for reservationrefunds. We might charge the fees for refunds made in the future. Wecurrently don't have a date for enabling the fee.


How to exchange or refund an existingreservation

You can exchange your reservation from Azure portal.


1. Select the reservations that you want to refund and select Exchange.
Example image showing reservations to return
2. Select the VM product that you want to purchase and type a quantity. Make surethat the new purchase total is more than the return total. Determine the right sizebefore you purchase.
Example image showing the VM product to purchase with an exchange



3. Review and complete the transaction.
Example image showing the VM product to purchase with an exchange, completing the return


To refund a reservation, go to Reservation Details and select Refund.

Exchange multiple reservations

You can return similar types of reservations in one action.

When you exchange reservations, the new purchase currency amount must be greaterthan the refund amount. You can exchange any number of reservations for otherallowed reservations if the currency amount is greater or equal to returned (exchanged)
reservations. If your new purchase amount is less than the refund amount, an errormessage appears. If you see the error, reduce the quantity you want to return orincrease the amount to purchase.

1. Sign in to the Azure portal and navigate to Reservations.
2. In the list of reservations, select the box for each reservation that you want toexchange.
3. At the top of the page, select Exchange.
4. If needed, revise the quantity to return for each reservation.
5. If you select the autofill return quantity, you can choose to Refund all to fill the listwith the full quantity that you own for each reservation. Or, select Optimize forutilization (7-day) to fill the list with a quantity that optimizes for utilization basedon the last seven days of usage. Select Apply.
6. At the bottom of the page, select Next: Purchase.
7. On the purchase tab, select the available products that you want to exchange for.
You can select multiple products of different types.
8. In the Select the product you want to purchase pane, select the products you wantand then select Add to cart and then select Close.
9. When done, select Next: Review.
10. Review your reservations to return and new reservations to purchase and thenselect Confirm exchange.





Exchange nonpremium storage for premiumstorage

You can exchange a reservation purchased for a VM size that doesn't support premiumstorage to a corresponding VM size that does. For example, an F1 for an F1s. To makethe exchange, go to Reservation Details and select Exchange. The exchange doesn'treset the term of the reserved instance or create a new transaction.
If you're exchangingfor a different size, series, region or payment frequency, the term is reset for the newreservation.

How transactions are processed

Microsoft cancels the existing reservation. Then the pro-rated amount for thatreservation is refunded. If there's an exchange, the new purchase is processed. Microsoftprocesses refunds using one of the following methods, depending on your account typeand payment method.

Enterprise agreement customers

Money is added to the Azure Prepayment (previously called monetary commitment) forexchanges and refunds if the original purchase was made using one. If the AzurePrepayment term using the reservation was purchased is no longer active, then credit isadded to your current enterprise agreement Azure Prepayment term. The credit is validfor 90 days from the date of refund. Unused credit expires at the end of 90 days.

If the original purchase was made as an overage, the original invoice on which thereservation was purchased and all later invoices are reopened and readjusted. Microsoftissues a credit memo for the refunds.

Pay-as-you-go invoice payments and CSP program

The original reservation purchase invoice is canceled and then a new invoice is createdfor the refund. For exchanges, the new invoice shows the refund and the new purchase.
The refund amount is adjusted against the purchase. If you only refunded a reservation,
then the prorated amount stays with Microsoft and it's adjusted against a futurereservation purchase. If you bought a reservation at pay-as-you-go rates and later moveto a CSP, the reservation can be returned and repurchased without a penalty.

Although a CSP customer can’t exchange, cancel, renew, or refund a reservationthemself, they can ask their partner to do it on their behalf.




Pay-as-you-go credit card customers

The original invoice is canceled, and a new invoice is created. The money is refunded tothe credit card that was used for the original purchase. If you've changed your card,
contact support.

Cancel, exchange, and refund policies

Azure has the following policies for cancellations, exchanges, and refunds.

Exchange policies

You can return multiple existing reservations to purchase one new reservation ofthe same type. You can't exchange reservations of one type for another. Forexample, you can't return a VM reservation to purchase a SQL reservation. You canchange a reservation property such as family, series, version, SKU, region, quantity,
and term with an exchange.
Only reservation owners can process an exchange. Learn how to Add or changeusers who can manage a reservation.
An exchange is processed as a refund and a repurchase – different transactions arecreated for the cancellation and the new reservation purchase. The proratedreservation amount is refunded for the reservations that's traded-in. You'recharged fully for the new purchase. The prorated reservation amount is the dailyprorated residual value of the reservation being returned.
You can exchange or refund reservations even if the enterprise agreement used topurchase the reservation is expired and was renewed as a new agreement.
The new reservation's lifetime commitment should equal or be greater than thereturned reservation's remaining commitment. Example: for a three-yearreservation that's $100 per month and exchanged after the 18th payment, the newreservation's lifetime commitment should be $1,800 or more (paid monthly orupfront).
The new reservation purchased as part of exchange has a new term starting fromthe time of exchange.
There's no penalty or annual limits for exchanges.


Refund policies

We're currently not charging an early termination fee, but in the future there mightbe a 12% early termination fee for cancellations.
The total canceled commitment can't exceed 50,000 USD in a 12-month rollingwindow for a billing profile or single enrollment. For example, assume you have athree-year reservation (36 months). It costs 100 USD per month. It's refunded in



the 12th month. The canceled commitment is 2,400 USD (for the remaining 24months). After the refund, your new available limit for refund is 47,600 USD(50,000-2,400). In 365 days from the refund, the 47,600 USD limit increases by2,400 USD. Your new pool is 50,000 USD. Any other reservation cancellation for thebilling profile or EA enrollment depletes the same pool, and the samereplenishment logic applies.
Azure doesn't process any refund that exceeds the 50,000 USD limit in a 12-monthwindow for a billing profile or EA enrollment.
Refunds that result from an exchange don't count against the refund limit.



Refunds are calculated based on the lowest price of either your purchase price orthe current price of the reservation.
Only reservation order owners can process a refund. Learn how to Add or changeusers who can manage a reservation.
For CSP program, the 50,000 USD limit is per customer.


Let's look at an example with the previous points in mind. If you bought a $300,000reservation, you can exchange it at any time for another reservation that equals or costsmore (of the remaining reservation balance, not the original purchase price). For thisexample:

There's no penalty or annual limits for exchanges.
The refund that results from the exchange doesn't count against the refund limit.


Need help? Contact us.

If you have questions or need help, create a support request.

Next steps

To learn how to manage a reservation, see Manage Azure Reservations.
Learn about Azure savings plan for compute
To learn more about Azure Reservations, see the following articles:
What are Azure Reservations?
Manage Reservations in Azure
Understand how the reservation discount is applied
Understand reservation usage for your Pay-As-You-Go subscription
Understand reservation usage for your Enterprise enrollment
Windows software costs not included with reservations
Azure Reservations in the CSP program






Automatically renew reservations

Article
12/07/2022


You can renew reservations to automatically purchase a replacement when an existingreservation expires. Automatic renewal provides an easy way to continue gettingreservation discounts. It also saves you from having to closely monitor a reservation'sexpiration. With automatic renewal, you prevent savings benefits loss by not having tomanually renew. The renewal setting is turned off by default. Enable or disable therenewal setting anytime, up to the expiration of the existing reservation.

Renewing a reservation creates a new reservation when the existing reservation expires.
It doesn't extend the term of the existing reservation.

Opt in to automatically renew at any time. The renewal price is available 30 days beforethe expiry of existing reservation. When you enable renewal more than 30 days beforethe reservation expiration, you're sent an email detailing renewal costs 30 days beforeexpiration. The reservation price might change between the time that you lock therenewal price and the renewal time. If so, your renewal will not be processed and youcan purchase a new reservation in order to continue getting the benefit.

There's no obligation to renew and you can opt out of the renewal at any time beforethe existing reservation expires.

Set up renewal

Go to Azure portal > Reservations.

1. Select the reservation.
2. Select Renewal.



3. Select Automatically purchase a new reservation upon expiry.
Example showing reservation renewal


If you don't renew

Your services continue to run normally. You're charged pay-as-you-go rates for yourusage after the reservation expires. If the reservation wasn't set for automatic renewalbefore expiration, you can't renew an expired reservation. To continue to receive savings,
you can buy a new reservation.

Required renewal permissions

The following conditions are required to renew a reservation:

You must be an owner of the existing reservation.
You must be an owner of the subscription if the reservation is scoped to a singlesubscription or resource group.
You must be an owner of the subscription if it has a shared scope or managementgroup scope.


Default renewal settings

By default, the renewal inherits all properties except automatic renewal setting from theexpiring reservation. A reservation renewal purchase has the same SKU, region, scope,


billing subscription, term, and quantity.

However, you can update the renewal reservation purchase quantity, billing frequency,
and commitment term to optimize your savings.

When the new reservation is purchased

A new reservation is purchased when the existing reservation expires. We try to preventany delay between the two reservations. Continuity ensures that your costs arepredictable, and you continue to get discounts.

Changing parent reservation after settingrenewal

If you make any of the following changes to the expiring reservation, the reservationrenewal is canceled:

Split
Merge
Transferring the reservation from one account to another
Transferring the reservation from a WebDirect subscription to an enterpriseagreement (EA) subscription, or any other purchase method
Renew the enrollment


The new reservation inherits the scope and instance size flexibility setting from theexpiring reservation during renewal.

New reservation permissions

Azure copies the permissions from the expiring reservation to the new reservation.
Additionally, the subscription account administrator of the reservation purchase hasaccess to the new reservation.

Potential renewal problems

Azure may not process the renewal if:

Payment can't be collected
A system error occurs during renewal
The expiring SKU isn't active during renewal



The EA is renewed into a different EA


You'll receive an email notification if any of the preceding conditions occur and therenewal is deactivated.

Renewal notification

Renewal notification emails are sent 30 days before expiration and again on theexpiration date. The sending email address is azure-noreply@microsoft.com. You mightwant to add the email address to your safe senders or allowlist.

Emails are sent to different people depending on your purchase method:

Customers with EA subscriptions
Notifications are sent to the EA notification contacts, EA admin, reservationowners, and the reservation administrator.



Customers with Microsoft Customer Agreement (Azure Plan)
Notifications are sent to the reservation owners and the reservationadministrator.



Cloud Solution Provider and new commerce partners
Emails are sent to the partner notification contact.



Individual subscription customers with pay-as-you-go rates
Emails are sent to users who are set up as account administrators, reservationowners, and the reservation administrator.





Next steps

To learn more about Azure Reservations, see What are Azure Reservations?



Group and allocate costs using taginheritance

Article
04/17/2023


Azure tags are widely used to group costs to align with different business units,
engineering environments, and cost departments. Tags provide the visibility needed forbusinesses to manage and allocate costs across the different groups.

This article explains how to use the tag inheritance setting in Cost Management. Whenenabled, tag inheritance applies resource group and subscription tags to child resourceusage records. You don't have to tag every resource or rely on resources that emit usageto have their own tags.

Tag inheritance is available for the following billing account types:

Enterprise Agreement (EA)
Microsoft Customer Agreement (MCA)
Microsoft Partner Agreement (MPA) with Azure plan subscriptions


Here's an example diagram showing how a tag is inherited. Note that inherited tags areapplied to child resource usage records and not the resources themselves.



Required permissions

For subscriptions:
Cost Management reader to view
Cost Management Contributor to edit






For EA billing accounts:
Enterprise Administrator (read-only) to view
Enterprise Administrator to edit



For MCA billing profiles:
Billing profile reader to view
Billing profile contributor to edit





Enable tag inheritance

You can enable the tag inheritance setting in the Azure portal. You apply the setting atthe EA billing account, MCA billing profile, and subscription scopes. After the setting isenabled, all resource group and subscription tags are automatically applied to childresource usage records.

To enable tag inheritance in the Azure portal for an EAbilling account

1. In the Azure portal, search for Cost Management and select it (the green hexagon-
shaped symbol, not Cost Management + Billing).
2. Select a scope.
3. In the left menu under Settings, select Manage billing account.
4. Under Tag inheritance, select Edit.
Screenshot showing the Edit option for Tag inheritance for an EA billing account.
5. In the Tag inheritance (Preview) window, select Automatically apply subscriptionand resource group tags to new data.



Screenshot showing the Automatically apply subscription and resource group tags to new data option for a billing account.


To enable tag inheritance in the Azure portal for an MCAbilling profile

1. In the Azure portal, search for Cost Management and select it (the green hexagon-
shaped symbol, not Cost Management + Billing).
2. Select a scope.
3. In the left menu under Settings, select Manage billing profile.
4. Under Tag inheritance, select Edit.
Screenshot showing the Edit option for Tag inheritance for an MCA billing profile.
5. In the Tag inheritance (Preview) window, select Automatically apply subscriptionand resource group tags to new data.



Screenshot showing the Automatically apply subscription and resource group tags to new data option for a billing profile.


To enable tag inheritance in the Azure portal for asubscription

1. In the Azure portal, search for Cost Management and select it (the green hexagon-
shaped symbol, not Cost Management + Billing).
2. Select a subscription scope.
3. In the left menu under Settings, select Manage subscription.
4. Under Tag inheritance, select Edit.
Screenshot showing the Edit option for Tag inheritance for a subscription.
5. In the Tag inheritance (Preview) window, select Automatically apply subscriptionand resource group tags to new data.



Screenshot showing the Automatically apply subscription and resource group tags to new data option for a subscription.


Choose between resource and inherited tags

When a resource tag matches the resource group or subscription tag being applied, theresource tag is applied to its usage record by default. You can change the defaultbehavior to have the subscription or resource group tag override the resource tag.

In the Tag inheritance window, select the Use the subscription or resource group tagoption.

Screenshot showing the override options.


Let's look at an example of how a resource tag gets applied. In the following diagram,
resource 4 and resource group 2 have the same tag: App. Because the user chose tokeep the resource tag, usage record 4 is updated with the resource tag value E2E.




Let's look at another example where a resource tag gets overridden. In the followingdiagram, resource 4 and resource group 2 have the same tag: App. Because the userchose to use the resource group or subscription tag, usage record 4 is updated with theresource group tag value, which is backend¹.

¹ When the subscription and resource group tags are the same as the resource tag andyou’ve selected the Use the subscription or resource group tag option, the subscriptiontag is used.



Usage record updates

After the tag inheritance setting is enabled, it takes about 8-24 hours for the childresource usage records to get updated with subscription and resource group tags. Theusage records are updated for the current month using the existing subscription andresource group tags.


For example, if the tag inheritance setting is enabled on October 20, child resourceusage records are updated from October 1 using the tags that existed on October 20.

Similarly, if the tag inheritance setting is disabled, the inherited tags will be removedfrom the usage records for the current month.

Note

If there are purchases or resources that don’t emit usage at a subscription scope,
they will not have the subscription tags applied even if the setting is enabled.

View costs grouped by tags

You can use cost analysis to view the costs grouped by tags.

1. In the Azure portal, navigate to Cost Management.
2. In the left menu, select Cost Analysis.
3. Select a scope.
4. In the Group by list, select the tag you want to view costs for.


Here's an example showing costs for the org tag.

Screenshot showing costs for the org example tag.


You can also view the inherited tags by downloading your Azure usage. For moreinformation, see View and download your Azure usage and charges.




Next steps

Learn how to split shared costs.



Create and manage Azure costallocation rules (Preview)

Article
03/28/2023


Large enterprises often centrally manage Azure services or resources. However, differentinternal departments or business units use them. Typically, the centrally managing teamwants to reallocate the cost of the shared services back out to the internal departmentsor organizational business units who are actively using the services. This article helpsyou understand and use cost allocation in Cost Management.

With cost allocation, you can reassign or distribute the costs of shared services. Costsfrom subscriptions, resource groups, or tags get assigned to other subscriptions,
resource groups or tags in your organization. Cost allocation shifts costs of the sharedservices to another subscription, resource groups, or tags owned by the consuminginternal departments or business units. In other words, cost allocation helps to manageand show cost accountability from one place to another.

Cost allocation doesn't affect your billing invoice. Billing responsibilities don't change.
The primary purpose of cost allocation is to help you charge back costs to others. Allchargeback processes happen in your organization outside of Azure. Cost allocationhelps you charge back costs by showing them as the get reassigned or distributed.

Allocated costs appear in cost analysis. They appear as other items associated with thetargeted subscriptions, resource groups, or tags that you specify when you create a costallocation rule.

Note

Cost Management's cost allocation feature is currently in public preview. Somefeatures in Cost Management might not be supported or might have limitedcapabilities.

Prerequisites

Cost allocation currently only supports customers with:
A Microsoft Customer Agreement (MCA) in the Enterprise motion where youbuy Azure services through a Microsoft representative. It's also called an MCAenterprise agreement.






A Microsoft Customer Agreement that you bought through the Azurewebsite. It's also called an MCA individual agreement.
An Enterprise Agreement (EA).



To create or manage a cost allocation rule, you must use an EnterpriseAdministrator account for Enterprise Agreements. Or you must be a Billing accountowner for Microsoft Customer Agreements.


Create a cost allocation rule

1. Sign in to the Azure portal at https://portal.azure.com.
2. Navigate to Cost Management + Billing > Cost Management.
3. Under Settings > Configuration, select Cost allocation (Preview).
4. Ensure that you select the correct EA enrollment or billing account.
5. Select +Add.
6. Enter descriptive text for the cost allocation rule name.


Example showing creating a rule name


The rule's evaluation start date generates the cost allocation percentages and prefillsthem.

1. Select Add sources and then select either subscriptions, resource groups, or tagsto choose costs to distribute.
2. Select Add targets and then select either subscriptions, resource groups, or tags toreceive the allocated costs.
3. If you need to create more cost allocation rules, repeat this process.


Configure the allocation percentage

Configure the allocation percentage to define how costs proportionally divide betweenthe specified targets. You can manually define whole number percentages to create anallocation rule. Or you can split the costs proportionally based on the current usage ofthe compute, storage, or network across the specified targets.

When you distribute costs by compute cost, storage cost, or network cost, theproportional percentage is derived by evaluating the selected target's costs. The costsare associated with the resource type for the current billing month.


When you distribute costs proportional to total cost, the proportional percentageallocates by the sum or total cost of the selected targets for the current billing month.

Example showing allocation percentage


Once set, the prefilled percentages defined don't change. All ongoing allocations usethem. The percentages change only when you manually update the rule.

1. Select one of the following options in the Prefill percentage to list.
Distribute evenly – Each of the targets receives an even percentageproportion of the total cost.
Total cost – Creates a ratio proportional to the targets based on their totalcost. It uses the ratio to distribute costs from the selected sources.
Compute cost - Creates a ratio proportional to the targets based on theirAzure compute cost (resource types in the Microsoft.Compute namespace. Ituses the ratio to distribute costs from the selected sources.
Storage cost - Creates a ratio proportional to the targets based on theirAzure storage cost (resource types in the Microsoft.Storage namespace). Ituses the ratio to distribute costs from the selected sources.
Network cost - Creates a ratio proportional to the targets based on theirAzure network cost (resource types in the Microsoft.Network namespace). Ituses the ratio to distribute costs from the selected sources.
Custom – Allows you to manually specify a whole number percentage. Thespecified total must equal 100%.



2. When done, select Create.


The allocation rule starts processing. When the rule is active, all the selected source'scosts allocate to the specified targets.

Note


New rule processing can take up to two hours before it completes and is active.

Here's a video that demonstrates how to create a cost allocation rule.

https://www.youtube-nocookie.com/embed/nYzIIs2mx9Q
Verify the cost allocation rule

When the cost allocation rule is active, costs from the selected sources distribute to thespecified allocation targets. Use the following information to verify proper costallocation to targets.

View cost allocation for a subscription

You view the effect of the allocation rule in cost analysis. In the Azure portal, go toSubscriptions. Select a subscription in the list that is the target of an active costallocation rule. Then select Cost analysis in the menu. In Cost analysis, select Group byand then select Cost allocation. The resulting view shows a quick cost breakdowngenerated by the subscription. Costs allocated to the subscription appear, similar to thefollowing image.

Example showing cost breakdown


View cost allocation for a resource group

Use a similar process to assess the effect of a cost allocation rule for a resource group.
In the Azure portal, go to Resource groups. Select a resource group in the list that anactive cost allocation rule targets. Then select Cost analysis in the menu. In Costanalysis, select Group by and then select Cost allocation. The view shows you a quickcost breakdown generated by the resource group. It also shows cost allocated to theresource group.




View cost allocation for tags

In the Azure portal, navigate to Cost Management + Billing > Cost Management >
Cost analysis. In Cost analysis, select Add filter. Select Tag, choose the tag key, and tagvalues that have cost allocated to them.

Example showing costs for tagged items


View cost allocation in the downloaded Usage Details andin Exports CSV files

Cost allocation rules are also available in the downloaded Usage Details file and in theexported data. The data files have the column name costAllocationRuleName. If a Costallocation rule is applicable to an entry in Usage Details or Exports file, it populates therow with the Cost allocation rule name. The following example image shows a negativecharge with an entry for the source subscription. It's the charge getting allocated costfrom. There's also a positive charge for the Cost allocation rule's target.

Screenshot showing allocated costs in usage details file.


Azure invoice reconciliation

Azure invoice reconciliation also uses the Usage Details file. Showing any internalallocated costs during reconciliation could be confusing. To reduce any potentialconfusion and to align to the data shown on the invoice, you can filter out any Costallocation rules. After you remove the cost allocation rules, your Usage Details fileshould match the cost shown by the billed subscription invoice.

Screenshot showing allocated costs with rule name filtered out


Edit an existing cost allocation rule


You can edit a cost allocation rule to change the source or the target or if you want toupdate the prefilled percentage for either compute, storage, or network options. Editthe rules in the same way you create them. Modifying existing rules can take up to twohours to reprocess.

Current limitations

Currently, Cost Management supports cost allocation in Cost analysis, budgets, andforecast views. Allocated costs appear in the subscriptions list and on the Subscriptionsoverview page.

The following items are currently unsupported by the cost allocation public preview:

Billing subscriptions area
Cost Management Power BI App
Power BI Desktop connector


The Usage Details API version 2021-10-01 and later supports cost allocation data.

However, cost allocation data results might be empty if you're using an unsupported APIor if you don't have any cost allocation rules.

If you have cost allocation rules enabled, the UnitPrice field in your usage details file is0. We recommend that you use price sheet data to get unit price information until it'savailable in the usage details file.

Cost allocation to a target won't happen if that target doesn't have any costs associatedwith it.

Next steps

Read the Cost Management + Billing FAQ for questions and answers about costallocation.
Create or update allocation rules using the Cost allocation REST API
Learn more about How to optimize your cloud investment with Cost Management



Cost Allocation Rules

Reference


Service:Cost ManagementAPI Version:2020-03-01-preview
Operations

Check Name AvailabilityChecks availability and correctness of a name for a costallocation rule

Create Or UpdateCreate/Update a rule to allocate cost between differentresources within a billing account or enterprise enrollment.

DeleteDelete cost allocation rule for billing account or enterpriseenrollment.

GetGet a cost allocation rule by rule name and billing account orenterprise enrollment.

ListGet the list of all cost allocation rules for a billing account orenterprise enrollment.




Settings

Reference


Service:Cost ManagementAPI Version:2022-10-01-preview
Operations

Create Or Update By ScopeCreate or update a setting within the given scope.

Delete By ScopeDelete a setting within the given scope.

Get By ScopeGet the setting from the given scope by name.

ListList all cost management settings in the requested scope.




Cost Management automation overview

Article
07/17/2022


You can use Cost Management automation and reporting to build a custom set ofsolutions to retrieve and manage cost data. This article covers what APIs are available foruse and common scenarios for Cost Management automation.

Available APIs

There are many different APIs that can be used to interact with Cost Management data.
A summary of the available APIs and what they do is below. Multiple APIs may need tobe used to achieve a specific scenario. Review the common scenarios outlined later tolearn more.

For contractual information about how to call each API, review the API specificationarticles.

Cost Details APIs

The APIs below provide you with cost details data (formerly referred to as usage details).
Cost Details are the most granular usage and cost records that are available to youwithin the Azure ecosystem. All Cost Management experiences in the Azure portal andthe APIs are built upon the raw dataset. To learn more, see cost details overview.

Exports API - Configure a recurring task to export your cost details data to Azurestorage on a daily, weekly or monthly basis. Exported data is in CSV format. It's ourrecommended solution for ingesting cost data and is the most scalable for largeenterprises. To learn more, see Retrieve large cost datasets with exports.


Generate Cost Details - Download a cost details CSV file on demand. It's useful forsmaller, date range based datasets. For larger workloads, we strongly recommendthat you use Exports. To learn more about using this API, see Get small costdatasets on demand.




Pricing APIs

Azure Retail Prices - Get meter rates with pay-as-you-go pricing. You can use thereturned information with your resource usage information to manually calculatethe expected bill.





Price Sheet API - Get custom pricing for all meters. Enterprises can use this data incombination with usage details and marketplace usage information to manuallycalculate costs by using usage and marketplace data.




Budgets and Alerts APIs

Budgets API - Create either cost budgets for resources, resource groups, or billingmeters. When you've created budgets, you can configure alerts to notify you whenyou've exceeded defined budget thresholds. You can also configure actions tooccur when you've reached budget amounts. For more information, see Automatebudget creation and Configure budget based actions.


Alerts API - Manage all of the alerts that have been created by budgets and otherAzure alerting systems.




Invoicing APIs

Invoices API - Get list of invoices. The API returns a summary of your invoicesincluding total amount, payment status and a link to download a pdf copy of yourinvoice.


Transactions API - Get invoice line-items for an invoice. You can use the API to getall purchases, refunds and credits that are included in your invoice. The API is onlyavailable for customers with Microsoft Customer Agreement or Microsoft PartnerAgreement billing accounts.




Reservation APIs

Reservation Details API - Get the detailed resource consumption associated withyour reservation purchases.


Reservation Transactions API - Get reservation related purchase and managementtransactions.


Reservation Recommendations API - Get recommendations for reservationpurchases to make in the future along with expected savings information.


Reservation Recommendation Details API - Get detailed information for specificreservation purchases to perform a what-if analysis.




Common API scenarios


You can use the billing and cost management APIs in many scenarios to answer cost-
related and usage-related questions. Common scenarios and how to use the differentAPIs to achieve those scenarios are outlined below.

Invoice reconciliation

This scenario is used to address the following questions:

Did Microsoft charge me the right amount on my invoice?
What's my bill, and can I calculate it myself using the raw data?


To answer these questions, follow the steps below.

1. Call the Invoices API to get the info needed to download an invoice. If you're aMicrosoft Customer Agreement customer and just wish to get the specific lineitems seen on your invoice automatically, you can also utilize the Transactions APIto get those line items in an API-readable format.


2. Use either Exports or the Cost Details API to download the raw usage file.


3. Analyze the data in the raw usage file to compare it against the costs that arepresent on the invoice. For Azure consumption, the data in your invoice is rolled upbased on the meter associated with your usage.




Cross-charging

Once there's a good understanding of spending for a given month, organizations nextneed to determine what teams or divisions need to pay for the various charges accrued.
Follow the steps below.

1. Use either Exports or the Cost Details API to download the raw usage file.


2. Analyze the data in the raw usage file and allocate it based on the organizationalhierarchy that you have in place. Allocation could be based on resource groups,
subscriptions, cost allocation rules, tags or other Azure organization hierarchies.

To learn more about best practices to consider when configuring your Azureenvironments, see Cost management best practices.
To learn more about the scopes and the organizational structures available toyou, see Understand and work with scopes.
To set up allocation directly in Azure, see Allocate costs.





Azure spending prior to invoice closure


It's important to keep tabs on how costs are accruing throughout the month. Proactiveanalysis before the invoice is closed can provide opportunities to change spendingpatterns and get an invoice's projected costs down. To ingest all of the raw data that hasaccrued month-to-date, use Exports API.

Configuring automatic alerting can also ensure that spending doesn't unexpectedly getout of hand and removes the need for manual cost monitoring throughout the month.
To ensure your costs don't breach thresholds or aren't forecasted to breach thresholds,
use the Budgets API.

Cost trend reporting

Often it's useful to understand how much an organization is spending over time.
Understanding cost over time helps identify trends and areas for cost optimizationimprovement. Follow the steps below to set up a cost dataset that can be used forreporting cost over time at scale.

1. Extract the historical costs for prior months. See Seed a historical cost dataset withthe Exports API to learn more.
2. Ingest your historical data from the Azure storage account associated with yourExports into a queryable store. We recommend SQL or Azure Synapse.
3. Configure a month-to-date Export to storage at a scope with the costs that needto be analyzed. Export to storage is done in the Azure portal. See Export costs. Themonth-to-date Export will be used to properly extract costs moving forward.
4. Configure a data pipeline to ingest cost data for the open month into yourqueryable store. This pipeline should be used with the month-to-date Export thatyou've configured. Azure Data Factory provides good solutions for this kind ofingestion scenario.
5. Perform reporting as needed using reports built with your queryable store. PowerBI can be good for this scenario. If you're looking for a more out of the boxsolution, see our Power BI Template App.


Reservation related investigations

For more information about reservation-specific automation scenarios, see APIs forAzure reservation automation.

Next steps

To learn more about how to assign the proper permissions to call our APIsprogramatically, see Assign permissions to Cost Management APIs.





To learn more about working with cost details, see Ingest usage details data.


To learn more about budget automation, see Automate budget creation.


For information about using REST APIs retrieve prices for all Azure services, seeAzure Retail Prices overview.


To compare your invoice with the detailed daily usage file and the costmanagement reports in the Azure portal, see Understand your bill for MicrosoftAzure.


If you have questions or need help, create a support request.





Tutorial: Create and manage exporteddata

Article
03/14/2023


If you read the Cost Analysis tutorial, then you're familiar with manually downloadingyour Cost Management data. However, you can create a recurring task thatautomatically exports your Cost Management data to Azure storage on a daily, weekly,
or monthly basis. Exported data is in CSV format and it contains all the informationthat's collected by Cost Management. You can then use the exported data in Azurestorage with external systems and combine it with your own custom data. And you canuse your exported data in an external system like a dashboard or other financial system.

Watch the How to schedule exports to storage with Cost Management video aboutcreating a scheduled export of your Azure cost data to Azure Storage. To watch othervideos, visit the Cost Management YouTube channel.

https://www.youtube-nocookie.com/embed/rWa_xI1aRzo
The examples in this tutorial walk you through exporting your cost management dataand then verify that the data was successfully exported.

In this tutorial, you learn how to:

Create a daily export
Verify that data is collected


Prerequisites

Data export is available for various Azure account types, including Enterprise Agreement(EA) and Microsoft Customer Agreement customers. To view the full list of supportedaccount types, see Understand Cost Management data. The following Azurepermissions, or scopes, are supported per subscription for data export by user andgroup. For more information about scopes, see Understand and work with scopes.

Owner - Can create, modify, or delete scheduled exports for a subscription.
Contributor - Can create, modify, or delete their own scheduled exports. Canmodify the name of scheduled exports created by others.
Reader - Can schedule exports that they have permission to.
For more information about scopes, including access needed to configureexports for Enterprise Agreement and Microsoft Customer agreement scopes,
see Understand and work with scopes.






For Azure Storage accounts:

Write permissions are required to change the configured storage account,
independent of permissions on the export.
Your Azure storage account must be configured for blob or file storage.
The storage account must not have a firewall configured.
The storage account configuration must have the Permitted scope for copyoperations (preview) option set to From any storage account.
Screenshot showing the From any storage account option set.


If you have a new subscription, you can't immediately use Cost Management features. Itmight take up to 48 hours before you can use all Cost Management features.

Sign in to Azure

Sign in to the Azure portal at https://portal.azure.com.

Create a daily export

Portal
To create or view a data export or to schedule an export, choose a scope in theAzure portal and select Cost analysis in the menu. For example, navigate toSubscriptions, select a subscription from the list, and then select Cost analysis inthe menu. At the top of the Cost analysis page, select Settings, then Exports.

Note

Besides subscriptions, you can create exports on resource groups,
management groups, departments, and enrollments. For moreinformation about scopes, see Understand and work with scopes.
When you're signed in as a partner at the billing account scope or on acustomer's tenant, you can export data to an Azure Storage accountthat's linked to your partner storage account. However, you must have anactive subscription in your CSP tenant.


1. Select Add and type a name for the export.
2. For the Metric, make a selection:
Actual cost (Usage and Purchases) - Select to export standard usageand purchases
Amortized cost (Usage and Purchases) - Select to export amortizedcosts for purchases like Azure reservations and Azure savings plan forcompute.



3. For Export type, make a selection:
Daily export of month-to-date costs - Provides a new export file dailyfor your month-to-date costs. The latest data is aggregated fromprevious daily exports.
Weekly export of cost for the last seven days - Creates a weekly exportof your costs for the past seven days from the selected start date of yourexport.
Monthly export of last month's costs - Provides you with an export ofyour last month's costs compared to the current month that you createthe export. Afterward, the schedule runs an export on the fifth day ofevery new month with your previous months costs.
One-time export - Allows you to choose a date range for historical datato export to Azure blob storage. You can export a maximum of 90 daysof historical costs from the day you choose. This export runs immediatelyand is available in your storage account within two hours.
Depending on






your export type, either choose a start date, or choose a From and Todate.



4. Specify the subscription for your Azure storage account, then select a resourcegroup or create a new one.
5. Select the storage account name or create a new one.
6. Select the location (Azure region).
7. Specify the storage container and the directory path that you'd like the exportfile to go to.New export example
8. Review your export details and select Create.


Your new export appears in the list of exports. By default, new exports are enabled.
If you want to disable or delete a scheduled export, select any item in the list, andthen select either Disable or Delete.

Initially, it can take 12-24 hours before the export runs. However, it can take uplonger before data is shown in exported files.




Export schedule

Scheduled exports are affected by the time and day of week of when you initially createthe export. When you create a scheduled export, the export runs at the same frequencyfor each export that runs later. For example, for a daily export of month-to-date costsexport set at a daily frequency, the export runs during once each UTC day. Similarly for aweekly export, the export runs every week on the same UTC day as it is scheduled.
Individual export runs can occur at different times throughout the day. So, avoid takinga firm dependency on the exact time of the export runs. Run timing depends on theactive load present in Azure during a given UTC day. When an export run begins, yourdata should be available within 4 hours.

Exports are scheduled using Coordinated Universal Time (UTC). The Exports API alwaysuses and displays UTC.

When you create an export using the Exports API, specify the recurrencePeriod inUTC time. The API doesn’t convert your local time to UTC.
Example - A weekly export is scheduled on Friday, August 19 withrecurrencePeriod set to 2:00 PM. The API receives the input as 2:00 PM UTC,
Friday, August 19. The weekly export will be scheduled to run every Friday.



When you create an export in the Azure portal, its start date time is automaticallyconverted to the equivalent UTC time.
Example - A weekly export is scheduled on Friday, August 19 with the local timeof 2:00 AM IST (UTC+5:30) from the Azure portal. The API receives the input as8:30 PM, Thursday, August 18. The weekly export will be scheduled to run everyThursday.





Each export creates a new file, so older exports aren't overwritten.

Create an export for multiple subscriptions

If you have an Enterprise Agreement, then you can use a management group toaggregate subscription cost information in a single container. Then you can export costmanagement data for the management group. When you create an export in the Azureportal, select the Actual Costs option. When you create a management group exportusing the API, create a usage export. Currently, exports at the management group scopeonly support usage charges. Purchases including reservations and savings plans aren'tpresent in your exports file.

Exports for management groups of other subscription types aren't supported.


1. If you haven't already created a management group, create one group and assignsubscriptions to it.
2. In cost analysis, set the scope to your management group and select Select thismanagement group.Example showing the Select this management group option
3. Create an export at the scope to get cost management data for the subscriptionsin the management group.Example showing the Create new export option with a management group scope


File partitioning for large datasets

If you have a Microsoft Customer Agreement, Microsoft Partner Agreement, orEnterprise Agreement, you can enable Exports to chunk your file into multiple smallerfile partitions to help with data ingestion. When you initially configure your export, setthe File Partitioning setting to On. The setting is Off by default.

Screenshot showing File Partitioning option.



If you don't have a Microsoft Customer Agreement, Microsoft Partner Agreement, orEnterprise Agreement, then you won't see the File Partitioning option.

Partitioning isn't currently supported for resource groups or management group scopes.

Update existing exports to use file partitioning

If you have existing exports and you want to set up file partitioning, create a new export.
File partitioning is only available with the latest Exports version. There may be minorchanges to some of the fields in the usage files that get created.

If you enable file partitioning on an existing export, you may see minor changes to thefields in file output. Any changes are due to updates that were made to Exports afteryou initially set yours up.

Partitioning output

When file partitioning is enabled, you get a file for each partition of data in the exportalong with a _manifest.json file. The manifest contains a summary of the full dataset andinformation for each file partition in it. Each file partition has headers and contains onlya subset of the full dataset. To handle the full dataset, you must ingest each partition ofthe export.

Here's a _manifest.json example manifest file.

JSON{ 
"manifestVersion": "2021-01-01", 
"dataFormat": "csv", 
"blobCount": 1, 
"byteCount": 160769, 
"dataRowCount": 136, 
"blobs": [ 
{ 
"blobName": "blobName.csv", 
"byteCount": 160769, 
"dataRowCount": 136, 
"headerRowCount": 1, 
"contentMD5": "md5Hash" 
} 
]
}
Export versions


When you create a scheduled export in the Azure portal or with the API, it always runson the exports version used at creation time. Azure keeps your previously createdexports on the same version, unless you update it. Doing so prevents changes in thecharges and to CSV fields if the export version is changed. As the export functionalitychanges over time, field names are sometimes changed and new fields are added.

If you want to use the latest data and fields available, we recommend that you create anew export in the Azure portal. To update an existing export to the latest version,
update it in the Azure portal or with the latest Export API version. Updating an existingexport might cause you to see minor differences in the fields and charges in files thatare produced afterward.

Verify that data is collected

You can easily verify that your Cost Management data is being collected and view theexported CSV file using Azure Storage Explorer.

In the export list, select the storage account name. On the storage account page, selectOpen in Explorer. If you see a confirmation box, select Yes to open the file in AzureStorage Explorer.

Storage account page showing example information and link to Open in Explorer



In Storage Explorer, navigate to the container that you want to open and select thefolder corresponding to the current month. A list of CSV files is shown. Select one andthen select Open.

Example information shown in Storage Explorer


The file opens with the program or application that's set to open CSV file extensions.
Here's an example in Excel.

Example exported CSV data shown in Excel


Download an exported CSV data file

You can also download the exported CSV file in the Azure portal. The following stepsexplain how to find it from cost analysis.

1. In cost analysis, select Settings, and then select Exports.
2. In the list of exports, select the storage account for an export.
3. In your storage account, select Containers.
4. In list of containers, select the container.
5. Navigate through the directories and storage blobs to the date you want.
6. Select the CSV file and then select Download.



Example export download


View export run history

You can view the run history of your scheduled export by selecting an individual exportin the exports list page. The exports list page also provides you with quick access to viewthe run time of your previous exports and the next time and export will run. Here's anexample showing the run history.

Screenshot shows the Exports pane.


Select an export to view its run history.


Screenshot shows the run history of an export.


Export runs twice a day for the first five days of themonth

If you've created a daily export, you'll have two runs per day for the first five days ofeach month. One run executes and creates a file with the current month’s cost data. It'sthe run that's available for you to see in the run history. A second run also executes tocreate a file with all the costs from the prior month. The second run isn't currently visiblein the run history. Azure executes the second run to ensure that your latest file for thepast month contains all charges exactly as seen on your invoice. It runs because thereare cases where latent usage and charges are included in the invoice up to 72 hoursafter the calendar month has closed. To learn more about Cost Management usage dataupdates, see Cost and usage data updates and retention.

Access exported data from other systems

One of the purposes of exporting your Cost Management data is to access the datafrom external systems. You might use a dashboard system or other financial system.
Such systems vary widely so showing an example wouldn't be practical. However, youcan get started with accessing your data from your applications at Introduction to AzureStorage.




Next steps

In this tutorial, you learned how to:

Create a daily export
Verify that data is collected


Advance to the next tutorial to optimize and improve efficiency by identifying idle andunderutilized resources.

Review and act on optimization recommendations


Tutorial: Seed a historical cost datasetwith the Exports API

Article
07/17/2022


Large organizations often need to analyze their historical costs going back a year ormore. Creating the dataset might be needed for targeted one-time inquiries or to set upreporting dashboards to visualize cost trends over time. In either case, you need a wayto get the data reliably so that you can load it into a data store that you can query. Afteryour historical cost dataset is seeded, your data store can then be updated as new costscome in so that your reporting is kept up to date. Historical costs rarely change and ifso, you'll be notified. So we recommend that you refresh your historical costs no morethan once a month.

In this tutorial, you learn how to:

Get a bearer token for your service principal
Format the request
Execute the requests in one-month chunks


Prerequisites

You need proper permissions to successfully call the Exports API. We recommend usinga Service Principal in automation scenarios.

To learn more, see Assign permissions to Cost Management APIs.
To learn more about the specific permissions needed for the Exports API, seeUnderstand and work with scopes.


Additionally, you'll need a way to query the API directly. For this tutorial, we recommendusing PostMan.

Get a bearer token for your service principal

To learn how to get a bearer token with a service principal, see Acquire an Access token.

Format the request

See the following example request and create your own one-time data Export. Thefollowing example request creates a one-month Actual Cost dataset in the specified


Azure storage account. We recommend that you request no more than one month's ofdata per report. If you have a large dataset every month, we recommend settingpartitionData = true for your one-time export to split it into multiple files. For moreinformation, see File partitioning for large datasets.

HTTPPUT 
https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{enrollmentId}/providers/Microsoft.CostManagement/exports/{ExportName}?api-
version=2021-10-01
Request Headers

Authorization: <YOUR BEARER TOKEN>
Accept: /*/
Content-Type: application/json
Request Body

JSON{ 
"properties": { 
"definition": { 
"dataset": { 
"granularity": "Daily", 
"grouping": [] 
}, 
"timePeriod": { 
"from": "2021-09-01T00:00:00.000Z", 
"to": "2021-09-30T00:00:00.000Z" 
}, 
"timeframe": "Custom", 
"type": "ActualCost" 
}, 
"deliveryInfo": { 
"destination": { 
"container": "{containerName}", 
"rootFolderPath": "{folderName}", 
"resourceId": 
"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{storageAccountName}" 
} 
}, 
"format": "Csv", 
"partitionData": false

 }
}
Create Exports in one-month chunks

We recommend creating one-time data exports in one month chunks. If you want toseed a one-year historical dataset, then you should execute 12 Exports API requests -
one for each month. After you've seeded your historical dataset, you can then create ascheduled export to continue populating your cost data in Azure storage as yourcharges accrue over time.

Run each Export

Now that you have created the Export for each month, you need to manually run eachby calling the Execute API. An example request to the API is below.

HTTPPOST 
https://management.azure.com/{scope}/providers/Microsoft.CostManagement/exports/{exportName}/run?api-version=2021-10-01
Next steps

In this tutorial, you learned how to:

Get a bearer token for your service principal
Format the request
Execute the requests in one-month chunks


To learn more about cost details, see ingest cost details data.

To learn more about what data is available in the cost details dataset, see Understandcost details data fields.


Export cost data with an Azure Storageaccount SAS key

Article
06/07/2023


The following information applies to Microsoft partners only.

Often, partners don't have their own Azure subscriptions in the tenant that's associatedwith their own Microsoft Partner Agreement. Partners with a Microsoft PartnerAgreement plan who are global admins of their billing account can export and copy costdata into a storage account in a different tenant using a shared access service (SAS) key.
In other words, a storage account with a SAS key allows the partner to use a storageaccount that's outside of their partner agreement to receive exported information. Thisarticle helps partners create a SAS key and configure Cost Management exports.

Requirements

You must be a partner with a Microsoft Partner Agreement and have customers onthe Azure Plan.
You must be global admin for your partner organization's billing account.
You must have access to configure a storage account that's in a different tenant ofyour partner organization. You're responsible for maintaining permissions and dataaccess when your export data to your storage account.
The storage account must not have a firewall configured.
The storage account configuration must have the Permitted scope for copyoperations (preview) option set to From any storage account.


Configure Azure Storage with a SAS key

Get a storage account SAS token or create one using the Azure portal. To create on inthe Azure portal, use the following steps. To learn more about SAS keys, see Grantlimited access to data with shared access signatures (SAS).

1. Navigate to the storage account in the Azure portal.
If your account has access to multiple tenants, switch directories to access thestorage account. Select your account in the upper right corner of the Azureportal and then select Switch directories.
You might need to sign in to the Azure portal with the corresponding tenantaccount to access the storage account.






2. In the left menu, select Shared access signature.
Screenshot showing a configured Azure storage shared access signature.
3. Configure the token with the same settings as identified in the preceding image.
a. Select Blob for Allowed services.
b. Select Service, Container, and Object for Allowed resource types.
c. Select Read, Write, Delete, List, Add, and Create for Allowed permissions.
d. Choose expiration and dates. Make sure to update your export SAS tokenbefore it expires. The longer the time period you configure before expiration,
the longer your export runs before needing a new SAS token.



4. Select HTTPS only for Allowed protocols.
5. Select Basic for Preferred routing tier.
6. Select key1 for Signing key. If you rotate or update the key that's used to sign theSAS token, you'll need to regenerate a new SAS token for your export.
7. Select Generate SAS and connection string.
The SAS token value shown is thetoken that you need when you configure exports.





Create a new export with a SAS token

Navigate to Exports at the billing account scope and create a new export using thefollowing steps.

1. Select Create.
2. Configure the Export details as you would for a normal export. You can configurethe export to use an existing directory or container or you can specify a newdirectory or container and exports will create them for you.
3. When configuring Storage, select Use a SAS token.
Screenshot showing the New export where you select SAS token.
4. Enter the name of the storage account and paste in your SAS token.
5. Specify an existing container or Directory or identify new ones to be created.
6. Select Create.


The SAS token-based export only works while the token remains valid. Reset the tokenbefore the current one expires, or your export will stop working. Because the tokenprovides access to your storage account, protect the token as carefully as you would anyother sensitive information. You're responsible to maintain permissions and data accesswhen your export data to your storage account.

Troubleshoot exports using SAS tokens

The following are common issues that might happen when you configure or use SAStoken-based exports.


You don't see the SAS key option in the Azure portal.

Verify that you're a partner that has a Microsoft Partner Agreement and that youhave global admin permission to the billing account. They're the only peoplewho can export with a SAS key.



You get the following error message when trying to configure your export:

Please ensure the SAS token is valid for blob service, is valid for container andobject resource types, and has permissions: add create read write delete.
(Storage service error code: AuthorizationResourceTypeMismatch)

Make sure that you're configuring and generating the SAS key correctly in AzureStorage.



You can't see the full SAS key after you create an export.

Not seeing the key is expected behavior. After the SAS Export is configured, thekey is hidden for security reasons.



You can't access the storage account from the tenant where the export isconfigured.

It's expected behavior. If the storage account is in another tenant, you need tonavigate to that tenant first in the Azure portal to find the storage account.



Your export fails because of a SAS token-related error.

Your export works only while the SAS token remains valid. Create a new key andrun the export.





Next steps

For more information about exporting Cost Management data, see Create andexport data.
For information about exporting large amounts of usage data, see Retrieve largedatasets with exports.



Manage costs with automation

Article
03/26/2023


You can use Cost Management automation to build a custom set of solutions to retrieveand manage cost data. This article covers common scenarios for Cost Managementautomation and options available based on your situation. If you want to develop usingAPIs, common API request examples and presented to help accelerate yourdevelopment process.

Automate cost data retrieval for offline analysis

You might need to download your Azure cost data to merge it with other datasets. Oryou might need to integrate cost data into your own systems. There are differentoptions available depending on the amount of data involved. You must have CostManagement permissions at the appropriate scope to use APIs and tools in any case.
For more information, see Assign access to data.

Suggestions for handling large datasets

If your organization has a large Azure presence across many resources or subscriptions,
you'll have a large amount of usage details data. Excel often can't load such large files.
In this situation, we recommend the following options:

Power BI

Power BI is used to ingest and handle large amounts of data. If you're an EnterpriseAgreement customer, you can use the Power BI template app to analyze costs for yourbilling account. The report contains key views used by customers. For more information,
see Analyze Azure costs with the Power BI template app.

Power BI data connector

If you want to analyze your data daily, we recommend using the Power BI dataconnector to get data for detailed analysis. Any reports that you create are kept up todate by the connector as more costs accrue.

Cost Management exports

You might not need to analyze the data daily. If so, consider using Cost Management'sExports feature to schedule data exports to an Azure Storage account. Then you canload the data into Power BI as needed, or analyze it in Excel if the file is small enough.


Exports are available in the Azure portal or you can configure exports with the ExportsAPI.

Usage Details API

Consider using the Usage Details API if you have a small cost data set. Here arerecommended best practices:

If you want to get the latest cost data, we recommend that you query at most onceper day. Reports are refreshed every four hours. If you call more frequently, you'llreceive identical data.
Once you download your cost data for historical invoices, the charges won'tchange unless you're explicitly notified. We recommend caching your cost data in aqueryable store on to prevent repeated calls for identical data.
Chunk your calls into small date ranges to get more manageable files that you candownload. For example, we recommend chunking by day or by week if you havelarge Azure usage files month-to-month.
If you have scopes with a large amount of usage data (for example a BillingAccount), consider placing multiple calls to child scopes so you get moremanageable files that you can download.
If your dataset is more than 2 GB month-to-month, consider using exports as amore scalable solution.


Automate retrieval with Usage Details API

The Usage Details API provides an easy way to get raw, unaggregated cost data thatcorresponds to your Azure bill. The API is useful when your organization needs aprogrammatic data retrieval solution. Consider using the API if you're looking to analyzesmaller cost data sets. However, you should use other solutions identified previously ifyou have larger datasets. The data in Usage Details is provided on a per meter basis, perday. It's used when calculating your monthly bill. The general availability (GA) version ofthe APIs is 2019-10-01. Use 2019-04-01-preview to access the preview version forreservation and Azure Marketplace purchases with the APIs.

If you want to get large amounts of exported data regularly, see Retrieve large costdatasets recurringly with exports.

Usage Details API suggestions

Request schedule


We recommend that you make no more than one request to the Usage Details API perday. For more information about how often cost data is refreshed and how rounding ishandled, see Understand cost management data.

Target top-level scopes without filtering

Use the API to get all the data you need at the highest-level scope available. Wait untilall needed data is ingested before doing any filtering, grouping, or aggregated analysis.
The API is optimized specifically to provide large amounts of unaggregated raw costdata. To learn more about scopes available in Cost Management, see Understand andwork with scopes. Once you've downloaded the needed data for a scope, use Excel toanalyze data further with filters and pivot tables.

Notes about pricing

If you want to reconcile usage and charges with your price sheet or invoice, note thefollowing information.

Price Sheet price behavior - The prices shown on the price sheet are the prices that youreceive from Azure. They're scaled to a specific unit of measure. Unfortunately, the unitof measure doesn't always align to the unit of measure at which the actual resourceusage and charges are emitted.

Usage Details price behavior - Usage files show scaled information that may not matchprecisely with the price sheet. Specifically:

Unit Price - The price is scaled to match the unit of measure at which the chargesare actually emitted by Azure resources. If scaling occurs, then the price won'tmatch the price seen in the Price Sheet.
Unit of Measure - Represents the unit of measure at which charges are actuallyemitted by Azure resources.
Effective Price / Resource Rate - The price represents the actual rate that you endup paying per unit, after discounts are taken into account. It's the price that shouldbe used with the Quantity to do Price * Quantity calculations to reconcile charges.
The price takes into account the following scenarios and the scaled unit price that'salso present in the files. As a result, it might differ from the scaled unit price.
Tiered pricing - For example: $10 for the first 100 units, $8 for the next 100units.
Included quantity - For example: The first 100 units are free and then $10 perunit.
Reservations






Rounding that occurs during calculation – Rounding takes into account theconsumed quantity, tiered/included quantity pricing, and the scaled unit price.





A single resource might have multiple records for a singleday

Azure resource providers emit usage and charges to the billing system and populate theAdditional Info field of the usage records. Occasionally, resource providers might emitusage for a given day and stamp the records with different datacenters in theAdditional Info field of the usage records. It can cause multiple records for ameter/resource to be present in your usage file for a single day. In that situation, youaren't overcharged. The multiple records represent the full cost of the meter for theresource on that day.

Example Usage Details API requests

The following example requests are used by Microsoft customers to address commonscenarios that you might come across.

Get Usage Details for a scope during specific date range

The data that's returned by the request corresponds to the date when the usage wasreceived by the billing system. It might include costs from multiple invoices. The call touse varies by your subscription type.

For legacy customers with an Enterprise Agreement (EA) or a pay-as-you-gosubscription, use the following call:

HTTPGET 
https://management.azure.com/{scope}/providers/Microsoft.Consumption/usageDetails?$filter=properties%2FusageStart%20ge%20'2020-02-
01'%20and%20properties%2FusageEnd%20le%20'2020-02-29'&$top=1000&api-
version=2019-10-01
For modern customers with a Microsoft Customer Agreement, use the following call:

HTTPGET 
https://management.azure.com/{scope}/providers/Microsoft.Consumption/usageDe
tails?startDate=2020-08-01&endDate=2020-08-05&$top=1000&api-version=2019-10-
01
Note

The $filter parameter isn't supported by Microsoft Customer Agreements.

Get amortized cost details

If you need actual costs to show purchases as they're accrued, change the metric toActualCost in the following request. To use amortized and actual costs, you must usethe 2019-04-01-preview version. The current API version works the same as the 2019-10-
01 version, except for the new type/metric attribute and changed property names. If youhave a Microsoft Customer Agreement, your filters are startDate and endDate in thefollowing example.

HTTPGET 
https://management.azure.com/{scope}/providers/Microsoft.Consumption/usageDetails?metric=AmortizedCost&$filter=properties/usageStart+ge+'2019-04-
01'+AND+properties/usageEnd+le+'2019-04-30'&api-version=2019-04-01-preview
Automate alerts and actions with budgets

There are two critical components to maximizing the value of your investment in thecloud. One is automatic budget creation. The other is configuring cost-basedorchestration in response to budget alerts. There are different ways to automate budgetcreation. Various alert responses happen when your configured alert thresholds areexceeded.

The following sections cover available options and provide sample API requests to getyou started with budget automation.

How costs are evaluated against your budget threshold

Your costs are evaluated against your budget threshold once per day. When you createa new budget or at your budget reset day, the costs compared to the threshold will bezero/null because the evaluation might not have occurred.


When Azure detects that your costs have crossed the threshold, a notification istriggered within the hour of the detecting period.

View your current cost

To view your current costs, you need to make a GET call using the Query API.

A GET call to the Budgets API won't return the current costs shown in Cost Analysis.
Instead, the call returns your last evaluated cost.

Automate budget creation

You can automate budget creation using the Budgets API. You can also create a budgetwith a budget template. Templates are an easy way for you to standardize Azuredeployments while ensuring cost control is properly configured and enforced.

Supported locales for budget alert emails

With budgets, you're alerted when costs cross a set threshold. You can set up to fiveemail recipients per budget. Recipients receive the email alerts within 24 hours ofcrossing the budget threshold. However, your recipient might need to receive an emailin a different language. You can use the following language culture codes with theBudgets API. Set the culture code with the locale parameter similar to the followingexample.

JSON{ 
"eTag": "\"1d681a8fc67f77a\"", 
"properties": { 
"timePeriod": { 
"startDate": "2020-07-24T00:00:00Z", 
"endDate": "2022-07-23T00:00:00Z" 
}, 
"timeGrain": "BillingMonth", 
"amount": 1, 
"currentSpend": { 
"amount": 0, 
"unit": "USD" 
}, 
"category": "Cost", 
"notifications": { 
"actual_GreaterThan_10_Percent": { 
"enabled": true, 
"operator": "GreaterThan", 
"threshold": 20,

 "locale": "en-us", 
"contactEmails": [ 
"user@contoso.com" 
], 
"contactRoles": [], 
"contactGroups": [], 
"thresholdType": "Actual" 
} 
} 
}
}
Languages supported by a culture code:

Culture codeLanguageen-usEnglish (United States)
ja-jpJapanese (Japan)
zh-cnChinese (Simplified, China)
de-deGerman (Germany)
es-esSpanish (Spain, International)
fr-frFrench (France)
it-itItalian (Italy)
ko-krKorean (Korea)
pt-brPortuguese (Brazil)
ru-ruRussian (Russia)
zh-twChinese (Traditional, Taiwan)
cs-czCzech (Czech Republic)
pl-plPolish (Poland)
tr-trTurkish (Türkiye)
da-dkDanish (Denmark)
en-gbEnglish (United Kingdom)
hu-huHungarian (Hungary)
nb-noNorwegian Bokmal (Norway)
nl-nlDutch (Netherlands)


Culture codeLanguagept-ptPortuguese (Portugal)
sv-seSwedish (Sweden)

Common Budgets API configurations

There are many ways to configure a budget in your Azure environment. Consider yourscenario first and then identify the configuration options that enable it. Review thefollowing options:

Time Grain - Represents the recurring period your budget uses to accrue andevaluate costs. The most common options are Monthly, Quarterly, and Annual.
Time Period - Represents how long your budget is valid. The budget activelymonitors and alerts you only while it remains valid.
Notifications
Contact Emails – The email addresses receive alerts when a budget accruescosts and exceeds defined thresholds.
Contact Roles - All users who have a matching Azure role on the given scopereceive email alerts with this option. For example, Subscription Owners couldreceive an alert for a budget created at the subscription scope.
Contact Groups - The budget calls the configured action groups when an alertthreshold is exceeded.



Cost dimension filters - The same filtering you can do in Cost Analysis or theQuery API can also be done on your budget. Use this filter to reduce the range ofcosts that you're monitoring with the budget.


After you've identified the budget creation options that meet your needs, create thebudget using the API. The example below helps get you started with a common budgetconfiguration.

Create a budget filtered to multiple resources and tags

Request URL: PUT https://management.azure.com/subscriptions/{SubscriptionId}
/providers/Microsoft.Consumption/budgets/{BudgetName}/?api-version=2019-10-01

JSON{ 
"eTag": "\"1d34d016a593709\"", 
"properties": { 
"category": "Cost", 
"amount": 100.65,

 "timeGrain": "Monthly", 
"timePeriod": { 
"startDate": "2017-10-01T00:00:00Z", 
"endDate": "2018-10-31T00:00:00Z" 
}, 
"filter": { 
"and": [ 
{ 
"dimensions": { 
"name": "ResourceId", 
"operator": "In", 
"values": [ 
"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{meterName}", 
"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{meterName}" 
] 
} 
}, 
{ 
"tags": { 
"name": "category", 
"operator": "In", 
"values": [ 
"Dev", 
"Prod" 
] 
} 
}, 
{ 
"tags": { 
"name": "department", 
"operator": "In", 
"values": [ 
"engineering", 
"sales" 
] 
} 
} 
] 
}, 
"notifications": { 
"Actual_GreaterThan_80_Percent": { 
"enabled": true, 
"operator": "GreaterThan", 
"threshold": 80, 
"contactEmails": [ 
"user1@contoso.com", 
"user2@contoso.com" 
], 
"contactRoles": [ 
"Contributor", 
"Reader"

 ], 
"contactGroups": [ 
"/subscriptions/{subscriptionID}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/actionGroups/{actionGroupName} 
], 
"thresholdType": "Actual" 
} 
} 
}
}
Configure cost-based orchestration for budget alerts

You can configure budgets to start automated actions using Azure Action Groups. Tolearn more about automating actions using budgets, see Automation with budgets.

Data latency and rate limits

We recommend that you call the APIs no more than once per day. Cost Managementdata is refreshed every four hours as new usage data is received from Azure resourceproviders. Calling more frequently doesn't provide more data. Instead, it createsincreased load.

Query API query processing units

In addition to the existing rate limiting processes, the Query API also limits processingbased on the cost of API calls. The cost of an API call is expressed as query processingunits (QPUs). QPU is a performance currency, like Cosmos DB RUs. They abstract systemresources like CPU and memory.

QPU calculation

Currently, one QPU is deducted for one month of data queried from the allotted quotas.
This logic might change without notice.

QPU factors

The following factor affects the number of QPUs consumed by an API request.

Date range, as the date range in the request increases, the number of QPUsconsumed increases.



Other QPU factors might be added without notice.

QPU quotas

The following quotas are configured per tenant. Requests are throttled when any of thefollowing quotas are exhausted.

12 QPU per 10 seconds
60 QPU per 1 min
600 QPU per 1 hour


The quotas maybe be changed as needed and more quotas may be added.

Response headers

You can examine the response headers to track the number of QPUs consumed by anAPI request and number of QPUs remaining.

x-ms-ratelimit-microsoft.costmanagement-qpu-retry-after

Indicates the time to back-off in seconds. When a request is throttled with 429, back offfor the time specified in this header before retrying the request.

x-ms-ratelimit-microsoft.costmanagement-qpu-consumed

QPUs consumed by an API call.

x-ms-ratelimit-microsoft.costmanagement-qpu-remaining

List of remaining quotas.

Next steps

Analyze Azure costs with the Power BI template app.
Create and manage exported data with Exports.
Learn more about the Usage Details API.



Automation for partners

Article
07/17/2022


Azure Cost Management is natively available for direct partners who have onboardedtheir customers to a Microsoft Customer Agreement and have purchased an Azure Plan.
Partners and their customers can use Cost Management APIs common tasks. For moreinformation about non-automation scenarios, see Cost Management for Partners.

Azure Cost Management APIs - Direct andindirect providers

Partners with access to billing scopes in a partner tenant can use the following APIs toview invoiced costs.

APIs at the subscription scope can be called by a partner regardless of the cost policy, aslong as they have access to the subscription. Other users with access to the subscription,
like the customer or reseller, can call the APIs only after the partner enables the costpolicy for the customer tenant.

To get a list of billing accounts

HTTPGET 
https://management.azure.com/providers/Microsoft.Billing/billingAccounts?
api-version=2019-10-01-preview 
To get a list of customers

HTTPGET 
https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/customers?api-version=2019-10-01-preview 
To get a list of subscriptions

HTTP
GET 
https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingSubscriptions?api-version=2019-10-01-preview 
To get a list of invoices for a period of time

HTTPGET 
https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoices?api-version=2019-10-01-preview&periodStartDate=
{periodStartDate}&periodEndDate={periodEndDate} 
The API call returns an array of invoices that has elements similar to the following JSONcode.

JSON 
{ "id": 
"/providers/Microsoft.Billing/billingAccounts/{billingAccountID}/billingProfiles/{BillingProfileID}/invoices/{InvoiceID}", "name": "{InvoiceID}", 
"properties": { "amountDue": { "currency": "USD", 
"value": x.xx }, ... } 
Use the preceding returned ID field value and replace it in the following example as thescope to query for usage details.

HTTPGET 
https://management.azure.com/{id}/providers/Microsoft.Consumption/UsageDetails?api-version=2019-10-01 
The example returns the usage records associated with the specific invoice.

To get the policy for customers to view costs

HTTPGET 
https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/customers/{customerID}/policies/default?api-version=2019-
10-01-preview 



To set the policy for customers to view costs

HTTPPUT 
https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/customers/{customerID}/policies/default?api-version=2019-
10-01-preview 
To get Azure service usage for a billing account

We recommend that you configure an Export for these scenarios. For more information,
see Retrieve large usage datasets with exports.

To download a customer's Azure service usage

We recommend that you configure an Export for this scenario as well. If you need todownload the data on demand, however, you can use the Cost Details API. For moreinformation, see Get small cost datasets on demand.

To get or download the price sheet for consumed Azureservices

First, use the following post.

HTTPPOST 
https://management.azure.com/providers/Microsoft.Billing/BillingAccounts/{billingAccountName}/billingProfiles/{billingProfileID}/pricesheet/default/download?api-version=2019-10-01-preview&format=csv" -verbose 
Then, call the asynchronous operation property value. For example:

HTTPGET 
https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileID}/pricesheetDownloadOperations/{operation}?sessiontoken=0:11186&api-version=2019-10-01-preview 
The preceding get call returns the download link containing the price sheet.




To get aggregated costs

HTTPPOST 
https://management.azure.com/providers/microsoft.billing/billingAccounts/{billingAccountName}/providers/microsoft.costmanagement/query?api-version=2019-
10-01 
Create a budget for a partner

HTTPPUT 
https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/providers/Microsoft.CostManagement/budgets/partnerworkshopbudget?api-version=2019-10-01 
Create a budget for a customer

HTTPPUT 
https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/customers/{customerID}/providers/Microsoft.Consumption/budgets/{budgetName}?api-version=2019-10-01 
Delete a budget

HTTPDELETE 
https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/budgets/{budgetName}?api-
version=2019-10-01 
Next steps

Learn more about Cost Management automation at Cost Management automationoverview.
Automation scenarios.
Get started with Azure Cost Management for partners.
Retrieve large usage datasets with exports.



Understand usage details fields.



Automation for partners

Article
07/17/2022


Azure Cost Management is natively available for direct partners who have onboardedtheir customers to a Microsoft Customer Agreement and have purchased an Azure Plan.
Partners and their customers can use Cost Management APIs common tasks. For moreinformation about non-automation scenarios, see Cost Management for Partners.

Azure Cost Management APIs - Direct andindirect providers

Partners with access to billing scopes in a partner tenant can use the following APIs toview invoiced costs.

APIs at the subscription scope can be called by a partner regardless of the cost policy, aslong as they have access to the subscription. Other users with access to the subscription,
like the customer or reseller, can call the APIs only after the partner enables the costpolicy for the customer tenant.

To get a list of billing accounts

HTTPGET 
https://management.azure.com/providers/Microsoft.Billing/billingAccounts?
api-version=2019-10-01-preview 
To get a list of customers

HTTPGET 
https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/customers?api-version=2019-10-01-preview 
To get a list of subscriptions

HTTP
GET 
https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingSubscriptions?api-version=2019-10-01-preview 
To get a list of invoices for a period of time

HTTPGET 
https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoices?api-version=2019-10-01-preview&periodStartDate=
{periodStartDate}&periodEndDate={periodEndDate} 
The API call returns an array of invoices that has elements similar to the following JSONcode.

JSON 
{ "id": 
"/providers/Microsoft.Billing/billingAccounts/{billingAccountID}/billingProfiles/{BillingProfileID}/invoices/{InvoiceID}", "name": "{InvoiceID}", 
"properties": { "amountDue": { "currency": "USD", 
"value": x.xx }, ... } 
Use the preceding returned ID field value and replace it in the following example as thescope to query for usage details.

HTTPGET 
https://management.azure.com/{id}/providers/Microsoft.Consumption/UsageDetails?api-version=2019-10-01 
The example returns the usage records associated with the specific invoice.

To get the policy for customers to view costs

HTTPGET 
https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/customers/{customerID}/policies/default?api-version=2019-
10-01-preview 



To set the policy for customers to view costs

HTTPPUT 
https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/customers/{customerID}/policies/default?api-version=2019-
10-01-preview 
To get Azure service usage for a billing account

We recommend that you configure an Export for these scenarios. For more information,
see Retrieve large usage datasets with exports.

To download a customer's Azure service usage

We recommend that you configure an Export for this scenario as well. If you need todownload the data on demand, however, you can use the Cost Details API. For moreinformation, see Get small cost datasets on demand.

To get or download the price sheet for consumed Azureservices

First, use the following post.

HTTPPOST 
https://management.azure.com/providers/Microsoft.Billing/BillingAccounts/{billingAccountName}/billingProfiles/{billingProfileID}/pricesheet/default/download?api-version=2019-10-01-preview&format=csv" -verbose 
Then, call the asynchronous operation property value. For example:

HTTPGET 
https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileID}/pricesheetDownloadOperations/{operation}?sessiontoken=0:11186&api-version=2019-10-01-preview 
The preceding get call returns the download link containing the price sheet.




To get aggregated costs

HTTPPOST 
https://management.azure.com/providers/microsoft.billing/billingAccounts/{billingAccountName}/providers/microsoft.costmanagement/query?api-version=2019-
10-01 
Create a budget for a partner

HTTPPUT 
https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/providers/Microsoft.CostManagement/budgets/partnerworkshopbudget?api-version=2019-10-01 
Create a budget for a customer

HTTPPUT 
https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/customers/{customerID}/providers/Microsoft.Consumption/budgets/{budgetName}?api-version=2019-10-01 
Delete a budget

HTTPDELETE 
https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/budgets/{budgetName}?api-
version=2019-10-01 
Next steps

Learn more about Cost Management automation at Cost Management automationoverview.
Automation scenarios.
Get started with Azure Cost Management for partners.
Retrieve large usage datasets with exports.



Understand usage details fields.



Assign permissions to CostManagement APIs

Article
04/13/2023


Before using the Azure Cost Management APIs, you need to properly assign permissionsto an Azure service principal. From there you can use the service principal identity to callthe APIs.

Permissions configuration checklist

Get familiar with the Azure Resource Manager REST APIs.
Determine which Cost Management APIs you want to use. For more informationabout available APIs, see Cost Management automation overview.
Configure service authorization and authentication for the Azure ResourceManager APIs.
If you're not already using Azure Resource Manager APIs, register your clientapp with Azure AD. Registration creates a service principal for you to use to callthe APIs.
Assign the service principal access to the scopes needed, as outlined below.
Update any programming code to use Azure AD authentication with yourservice principal.





Assign service principal access to AzureResource Manager APIs

After you create a service principal to programmatically call the Azure ResourceManager APIs, you need to assign it the proper permissions to authorize against andexecute requests in Azure Resource Manager. There are two permission frameworks fordifferent scenarios.

Azure billing hierarchy access

If you have an Azure Enterprise Agreement or a Microsoft Customer Agreement, you canconfigure service principal access to Cost Management data in your billing account. Tolearn more about the billing hierarchies available and what permissions are needed tocall each API in Azure Cost Management, see Understand and work with scopes.


Enterprise Agreements - To assign service principal permissions to your enterprisebilling account, departments, or enrollment account scopes, see Assign roles toAzure Enterprise Agreement service principal names.


Microsoft Customer Agreements - To assign service principal permissions to yourMicrosoft Customer Agreement billing account, billing profile, invoice section orcustomer scopes, see Manage billing roles in the Azure portal. Configure thepermission to your service principal in the portal as you would a normal user. Ifyou want to automate permissions assignment, see the Billing Role AssignmentsAPI.




Azure role-based access control

Service principal support extends to Azure-specific scopes, like management groups,
subscriptions, and resource groups. You can assign service principal permissions to theescopes directly in the Azure portal or by using Azure PowerShell.

Next steps

Learn more about Cost Management automation at Cost Management automationoverview.



Assign roles to Azure Enterprise Agreement service principalnames

Article
05/31/2023


You can manage your Enterprise Agreement (EA) enrollment in the Azure Enterprise portal. Direct Enterprise customer can now manageEnterprise Agreement(EA) enrollment in Azure portal.
You can create different roles to manage your organization, view costs, and createsubscriptions. This article helps you automate some of those tasks by using Azure PowerShell and REST APIs with Azure service principalnames (SPNs).

Note

If you have multiple EA billing accounts in your organization, you must grant the EA roles to Azure SPNs individually in each EA billingaccount.

Before you begin, ensure that you're familiar with the following articles:

Enterprise agreement roles
Sign in with Azure PowerShell
How to call REST APIs with Postman


Create and authenticate your service principal

To automate EA actions by using an SPN, you need to create an Azure Active Directory (Azure AD) application. It can authenticate in anautomated manner.

Follow the steps in these articles to create and authenticate your service principal.

Create a service principal
Get tenant and app ID values for signing in


Here's an example of the application registration page.

Screenshot showing Register an application.


Find your SPN and tenant ID

You also need the object ID of the SPN and the tenant ID of the app. You need this information for permission assignment operations laterin this article. All applications are registered in Azure AD in the tenant. Two types of objects get created when the app registration iscompleted:


Application object - The application object ID is what you see under App Registrations in Azure AD. The object ID should not be usedto grant any EA roles.


Service Principal object - The Service Principal object is what you see in the Enterprise Registration window in Azure AD. The object IDis used to grant EA roles to the SPN.




1. Open Azure Active Directory, and then select Enterprise applications.


2. Find your app in the list.

Screenshot showing an example enterprise application.



3. Select the app to find the application ID and object ID:

Screenshot showing an application ID and object ID for an enterprise application.



4. Go to the Microsoft Azure AD Overview page to find the tenant ID.





Screenshot showing the tenant ID.





Note

Your tenant ID might be called a principal ID, SPN, or object ID in other locations. The value of your Azure AD tenant ID looks like aGUID with the following format: 11111111-1111-1111-1111-111111111111.

Permissions that can be assigned to the SPN

Later in this article, you'll give permission to the Azure AD app to act by using an EA role. You can assign only the following roles to theSPN, and you need the role definition ID, exactly as shown.

RoleActions allowedRoledefinition IDEnrollmentReaderEnrollment readers can view data at the enrollment, department, and account scopes. The data contains charges forall of the subscriptions under the scopes, including across tenants. Can view the Azure Prepayment (previously calledmonetary commitment) balance associated with the enrollment.
24f8edb6-
1668-4659-
b5e2-
40bb5f3a7d7eEA purchaserPurchase reservation orders and view reservation transactions. It has all the permissions of EnrollmentReader, whichwill in turn have all the permissions of DepartmentReader. It can view usage and charges across all accounts andsubscriptions. Can view the Azure Prepayment (previously called monetary commitment) balance associated with theenrollment.
da6647fb-
7651-49ee-
be91-
c43c4877f0c4DepartmentReaderDownload the usage details for the department they administer. Can view the usage and charges associated withtheir department.
db609904-
a47f-4794-
9be8-
9bd86fbffd8aSubscriptionCreatorCreate new subscriptions in the given scope of Account.a0bcee42-
bf30-4d1b-
926a-
48d21664ef71

An EnrollmentReader role can be assigned to an SPN only by a user who has an enrollment writer role. The EnrollmentReader roleassigned to an SPN isn't shown in the EA portal. It's created by programmatic means and is only for programmatic use.
A DepartmentReader role can be assigned to an SPN only by a user who has an enrollment writer or department writer role.
A SubscriptionCreator role can be assigned to an SPN only by a user who is the owner of the enrollment account (EA administrator).
The role isn't shown in the EA portal. It's created by programmatic means and is only for programmatic use.
The EA purchaser role isn't shown in the EA portal. It's created by programmatic means and is only for programmatic use.


When you grant an EA role to an SPN, you must use the billingRoleAssignmentName required property. The parameter is a unique GUIDthat you must provide. You can generate a GUID using the New-Guid PowerShell command. You can also use the Online GUID / UUIDGenerator website to generate a unique GUID.

An SPN can have only one role.

Assign enrollment account role permission to the SPN

1. Read the Role Assignments - Put REST API article. While you read the article, select Try it to get started by using the SPN.





Screenshot showing the Try It option in the Put article.



2. Use your account credentials to sign in to the tenant with the enrollment access that you want to assign.


3. Provide the following parameters as part of the API request.

billingAccountName: This parameter is the Billing account ID. You can find it in the Azure portal on the Cost Management +
Billing overview page.

Screenshot showing Billing account ID.



billingRoleAssignmentName: This parameter is a unique GUID that you need to provide. You can generate a GUID using the New-
Guid PowerShell command. You can also use the Online GUID / UUID Generator website to generate a unique GUID.


api-version: Use the 2019-10-01-preview version. Use the sample request body at Role Assignments - Put - Examples.

The request body has JSON code with three parameters that you need to use.

ParameterWhere to find itproperties.principalIdIt is the value of Object ID. See Find your SPN and tenant ID.
properties.principalTenantIdSee Find your SPN and tenant ID.
properties.roleDefinitionId/providers/Microsoft.Billing/billingAccounts/{BillingAccountName}/billingRoleDefinitions/24f8edb6-1668-
4659-b5e2-40bb5f3a7d7e

The billing account name is the same parameter that you used in the API parameters. It's the enrollment ID that you see in theEA portal and Azure portal.

Notice that 24f8edb6-1668-4659-b5e2-40bb5f3a7d7e is a billing role definition ID for an EnrollmentReader.





4. Select Run to start the command.





Screenshot showing an example role assignment put Try It with example information ready to run.


A 200 OK response shows that the SPN was successfully added.




Now you can use the SPN to automatically access EA APIs. The SPN has the EnrollmentReader role.




Assign EA Purchaser role permission to the SPN

For the EA purchaser role, use the same steps for the enrollment reader. Specify the roleDefinitionId, using the following example:

"/providers/Microsoft.Billing/billingAccounts/1111111/billingRoleDefinitions/ da6647fb-7651-49ee-be91-c43c4877f0c4"

Assign the department reader role to the SPN

1. Read the Enrollment Department Role Assignments - Put REST API article. While you read the article, select Try it.

Screenshot showing the Try It option in the Enrollment Department Role Assignments Put article.



2. Use your account credentials to sign in to the tenant with the enrollment access that you want to assign.


3. Provide the following parameters as part of the API request.

billingAccountName: This parameter is the Billing account ID. You can find it in the Azure portal on the Cost Management +
Billing overview page.

Screenshot showing Billing account ID.



billingRoleAssignmentName: This parameter is a unique GUID that you need to provide. You can generate a GUID using the New-
Guid PowerShell command. You can also use the Online GUID / UUID Generator website to generate a unique GUID.


departmentName: This parameter is the department ID. You can see department IDs in the Azure portal on the Cost Management+ Billing > Departments page.

For this example, we used the ACE department. The ID for the example is 84819.








Screenshot showing an example department ID.



api-version: Use the 2019-10-01-preview version. Use the sample at Enrollment Department Role Assignments - Put.

The request body has JSON code with three parameters that you need to use.

ParameterWhere to find itproperties.principalIdIt is the value of Object ID. See Find your SPN and tenant ID.
properties.principalTenantIdSee Find your SPN and tenant ID.
properties.roleDefinitionId/providers/Microsoft.Billing/billingAccounts/{BillingAccountName}/billingRoleDefinitions/db609904-a47f-
4794-9be8-9bd86fbffd8a

The billing account name is the same parameter that you used in the API parameters. It's the enrollment ID that you see in theEA portal and Azure portal.

The billing role definition ID of db609904-a47f-4794-9be8-9bd86fbffd8a is for a department reader.





4. Select Run to start the command.





Screenshot showing an example Enrollment Department Role Assignments – Put REST Try It with example information ready to run.


A 200 OK response shows that the SPN was successfully added.




Now you can use the SPN to automatically access EA APIs. The SPN has the DepartmentReader role.

Assign the subscription creator role to the SPN


1. Read the Enrollment Account Role Assignments - Put article. While you read it, select Try It to assign the subscription creator role tothe SPN.

Screenshot showing the Try It option in the Enrollment Account Role Assignments Put article.



2. Use your account credentials to sign in to the tenant with the enrollment access that you want to assign.


3. Provide the following parameters as part of the API request. Read the article at Enrollment Account Role Assignments - Put - URIParameters.

billingAccountName: This parameter is the Billing account ID. You can find it in the Azure portal on the Cost Management +
Billing overview page.

Screenshot showing the Billing account ID.



billingRoleAssignmentName: This parameter is a unique GUID that you need to provide. You can generate a GUID using the New-
Guid PowerShell command. You can also use the Online GUID/UUID Generator website to generate a unique GUID.


enrollmentAccountName: This parameter is the account ID. Find the account ID for the account name in the Azure portal on theCost Management + Billing page.

For this example, we used the GTM Test Account. The ID is 196987.








Screenshot showing the account ID.



api-version: Use the 2019-10-01-preview version. Use the sample at Enrollment Department Role Assignments - Put - Examples.

The request body has JSON code with three parameters that you need to use.

ParameterWhere to find itproperties.principalIdIt is the value of Object ID. See Find your SPN and tenant ID.
properties.principalTenantIdSee Find your SPN and tenant ID.
properties.roleDefinitionId/providers/Microsoft.Billing/billingAccounts/{BillingAccountID}/enrollmentAccounts/{enrollmentAccountID}/billingRobf30-4d1b-926a-48d21664ef71

The billing account name is the same parameter that you used in the API parameters. It's the enrollment ID that you see in theEA portal and the Azure portal.

The billing role definition ID of a0bcee42-bf30-4d1b-926a-48d21664ef71 is for the subscription creator role.





4. Select Run to start the command.





Screenshot showing the Try It option in the Enrollment Account Role Assignments - Put article


A 200 OK response shows that the SPN has been successfully added.




Now you can use the SPN to automatically access EA APIs. The SPN has the SubscriptionCreator role.

Verify SPN role assignments

SPN role assignments are not visible in the Azure portal. You can view enrollment account role assignments, including the subscriptioncreator role, with the Billing Role Assignments - List By Enrollment Account - REST API (Azure Billing) API. Use the API to verify that the roleassignment was successful.




Troubleshoot

You must identify and use the Enterprise application object ID where you granted the EA role. If you use the Object ID from some otherapplication, API calls will fail. Verify that you’re using the correct Enterprise application object ID.

If you receive the following error when making your API call, then you may be incorrectly using the SPN object ID value located in AppRegistrations. To resolve this error, ensure you're using the SPN object ID from Enterprise Applications, not App Registrations.

The provided principal Tenant Id = xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx and principal Object Id xxxxxxxx-xxxx-xxxx-xxxx-
xxxxxxxxxxxx are not valid

Next steps

Learn more about Azure EA portal administration.


Ingest cost details data

Article
05/23/2023


Cost details (formerly referred to as usage details) are the most granular cost recordsthat are available across Microsoft. Cost details records allow you to correlate Azuremeter-based charges with the specific resources responsible for the charges so that youcan properly reconcile your bill. The data also includes charges associated with NewCommerce products like Microsoft 365 and Dynamics 365 that are invoiced along withAzure. Currently, only Partners can purchase New Commerce non-Azure products. Tolearn more, see Understand cost management data.

This document outlines the main solutions available to you as you work with cost detailsdata. You might need to download your cost data to merge it with other datasets. Oryou might need to integrate cost data into your own systems. There are differentoptions available depending on the amount of data involved.

You must have Cost Management permissions at the appropriate scope to use APIs andtools in any case. For more information, see Assign access to data and Assignpermissions to Cost Management APIs.

How to get cost details

You can use exports or the Cost Details report to get cost details programmatically. Tolearn more about which solutions are best for your scenarios, see Choose a cost detailssolution.

For Azure portal download instructions, see How to get your Azure billing invoice anddaily usage data. If you have a small cost details dataset that you maintain from onemonth to another, you can open your CSV file in Microsoft Excel or another spreadsheetapplication.

Cost details data format

The Azure billing system uses cost details records at the end of the month to generateyour bill. Your bill is based on the net charges that were accrued by meter. Cost recordscontain daily rated usage based on negotiated rates, purchases (for example,
reservations, Marketplace fees), and refunds for the specified period. Fees don't includecredits, taxes, or other charges or discounts.


The following table shows the charges that are included in your cost details dataset foreach account type.

Account typeAzureusageMarketplaceusagePurchasesRefundsEnterprise Agreement (EA)✔✔✔✘
Microsoft Customer Agreement(MCA)
✔✔✔✔
Pay-as-you-go (PAYG)✔✔✘✘

A single Azure resource often has multiple meters emitting charges. For example, a VMmay have both Compute and Networking related meters.

To understand the fields that are available in cost details records, see Understand costdetails fields.

To learn more about Marketplace orders (also known as external services), seeUnderstand your Azure external service charges.

A single resource might have multiple records per day

Azure resource providers emit usage and charges to the billing system and populate theAdditional Info field of the usage records. Occasionally, resource providers might emitusage for a given day and stamp the records with different datacenters in the AdditionalInfo field of the cost records. It can cause multiple records for a meter or resource to bepresent in your cost file for a single day. In that situation, you aren't overcharged. Themultiple records represent the full cost of the meter for the resource on that day.

Pricing behavior in cost details

The cost details file exposes multiple price points today. These are outlined below.

PAYGPrice: It's the list price or on demand price for a given product or service.

PAYGPrice is populated only for first party Azure usage charges wherePricingModel is OnDemand. So for EA customers, PAYGprice isn't populated whenPricingModel = Reservations, Spot, Marketplace, or SavingsPlan.
PAYGPrice is the price customers pay if the VM was consumed as a StandardVM, instead of a Spot VM.



UnitPrice: It's the price for a given product or service inclusive of any negotiateddiscounts on top of the pay-as-you-go price.





EffectivePrice It's the price for a given product or service that represents the actualrate that you end up paying per unit. It's the price that should be used with theQuantity to do Price * Quantity calculations to reconcile charges. The price takesinto account the following scenarios:

Tiered pricing: For example: $10 for the first 100 units, $8 for the next 100 units.
Included quantity: For example: The first 100 units are free and then $10 for eachunit.
Reservations: For example, a VM that got a reservation benefit on a given day. Inamortized data for reservations, the effective price is the prorated hourlyreservation cost. The cost is the total cost of reservation usage by the resourceon that day.
Rounding that occurs during calculation: Rounding takes into account theconsumed quantity, tiered/included quantity pricing, and the scaled unit price.



Quantity: This is the number of units used by the given product or service for agiven day and is aligned to the unit of measure used in actual resource usage.




If you want to reconcile costs with your price sheet or invoice, note the followinginformation about unit of measure.

Price Sheet unit of measure behavior - The prices shown on the price sheet are theprices that you receive from Azure. They're scaled to a specific unit of measure.

Cost details unit of measure behavior - The unit of measure associated with the usagequantities and pricing seen in cost details aligns with actual resource usage.

Example pricing scenarios seen in cost details for a resource

MeterIdQuantityPAYGPriceUnitPriceEffectivePriceUnitOfMeasureNotes00000000-
0000-0000-
0000-
000000000002410.80.761 hourManualcalculationof theactualcharge:
multiply24 * 0.76 *
1 hour.

Unexpected charges

If you have charges that you don't recognize, there are several things you can do to helpunderstand why:


Review the invoice that has charges for the resource
Review your invoiced charges in Cost analysis
Find people responsible for the resource and engage with them
Analyze the audit logs
Analyze user permissions to the resource's parent scope
Create an Azure support request to help identify the charges


For more information, see Analyze unexpected charges.

Azure doesn't log most user actions. Instead, Azure logs resource usage for billing. Ifyou notice a usage spike in the past and you didn't have logging enabled, Azure can'tpinpoint the cause. Enable logging for the service that you want to view the increasedusage for so that the appropriate technical team can assist you with the issue.

Next steps

Learn more about Choose a cost details solution.
Create and manage exported data in the Azure portal with Exports.
Automate Export creation and ingestion at scale using the API.
Understand cost details fields.
Learn how to Get small cost datasets on demand.



Choose a cost details solution

Article
07/18/2022


There are multiple ways to work with the cost details dataset (formerly referred to asusage details). If your organization has a large Azure presence across many resources orsubscriptions, you'll have a large amount of cost details data. Excel often can't load suchlarge files. In this situation, we recommend the options below.

Exports

Exports are recurring data dumps to storage that can be configured to run on a customschedule. We recommend Exports as the solution to ingest cost details data. It's themost scalable for large enterprises. Exports are configured in the Azure portal or usingthe Exports API. Review the considerations below for analyzing whether this solution isbest for your particular data ingestion workload.

Exports are most scalable solution for your workloads.
Can be configured to use file partitioning for bigger datasets.
Great for establishing and growing a cost dataset that can be integrated with yourown queryable data stores.
Requires access to a storage account that can hold the data.


To learn more about how to properly call the API and ingest cost details at scale, seeRetrieve large datasets with exports.

Cost Details API

The Cost Details API is the go to solution for on demand download of the cost detailsdataset. Review the considerations below to analyze whether this solution is best foryour particular data ingestion workload.

Useful for small cost datasets. Exports scale better than the API. The API may notbe a good solution if you need to ingest many gigabytes worth of cost data monthover month. A GB of cost details data is roughly 1 million rows of data.
Useful for scenarios when Exports to Azure storage aren't feasible due to securityor manageability concerns.


If the Cost Details API is your chosen solution, review the best practices to call the APIbelow.


If you want to get the latest cost data, we recommend that you query at most onceper day. Reports are refreshed every four hours. If you call more frequently, you'llreceive identical data.
Once you download your cost data for historical invoices, the charges won'tchange unless you're explicitly notified. We recommend caching your cost data in aqueryable store on to prevent repeated calls for identical data.
Chunk your calls into small date ranges to get more manageable files that you candownload. For example, we recommend chunking by day or by week if you havelarge Azure usage files month-to-month.
If you have scopes with a large amount of usage data (for example a BillingAccount), consider placing multiple calls to child scopes so you get moremanageable files that you can download.
If you're bound by rate limits at a lower scope, consider calling a higher scope todownload data.
If your dataset is more than 2 GB month-to-month, consider using exports as amore scalable solution.


To learn more about how to properly call the Cost Details API, see Get small usage datasets on demand.

The Cost Details API is only available for customers with an Enterprise Agreement orMicrosoft Customer Agreement. If you're an MSDN, pay-as-you-go or Visual Studiocustomer, see Get usage details for pay-as-you-go subscriptions.

Power BI

Power BI is another solution that's used to work with cost details data. The followingPower BI solutions are available:

Azure Cost Management Template App: - If you're an Enterprise Agreement orMicrosoft Customer Agreement customer, you can use the Power BI template appto analyze costs for your billing account. It includes predefined reports that arebuilt on top of the cost details dataset, among others. For more information, seeAnalyze Azure costs with the Power BI template app.
Azure Cost Management Connector: - If you want to analyze your data daily, youcan use the Power BI data connector to get data for detailed analysis. Any reportsthat you create are kept up to date by the connector as more costs accrue.


Azure portal download


Only download your usage from the Azure portal if you have a small cost details datasetthat is capable of being loaded in Excel. Cost files that are larger than one or 2 GB maytake an exceedingly long time to generate on demand from the Azure portal. They'lltake longer to transfer over a network to your local computer. We recommend usingone of the above solutions if you have a large monthly usage dataset.

Next steps

Get an overview of how to ingest cost data.
Create and manage exported data in the Azure portal with Exports.
Automate Export creation and ingestion at scale using the API.
Understand cost details fields.
Learn how to Get small cost datasets on demand.



Understand cost details fields

Article
04/04/2023


This document describes the cost details (formerly known as usage details) fields foundin files from using Azure portal download, Exports from Cost Management, or the CostDetails API. For more information about cost details best practices, see Choose a costdetails solution.

Migration to new cost details formats

If you're using an older cost details solution and want to migrate to Exports or the CostDetails API, read the following articles.

Migrate from Enterprise Usage Details APIs
Migrate from EA to MCA APIs
Migrate from Consumption Usage Details API


List of fields and descriptions

The following table describes the important terms used in the latest version of the costdetails file. The list covers pay-as-you-go (also called Microsoft Online ServicesProgram), Enterprise Agreement (EA), Microsoft Customer Agreement (MCA), andMicrosoft Partner Agreement (MPA) accounts.

MPA accounts have all MCA terms, in addition to the MPA terms, as described in thefollowing table. To identify what account type you are, see supported Microsoft Azureoffers.

TermAccounttypeDescriptionAccountNameEA, pay-
as-you-
goDisplay name of the EA enrollment account or pay-as-
you-go billing account.
AccountOwnerId¹EA, pay-
as-you-
goUnique identifier for the EA enrollment account orpay-as-you-go billing account.
AdditionalInfo¹AllService-specific metadata. For example, an image typefor a virtual machine.
BillingAccountId¹AllUnique identifier for the root billing account.


TermAccounttypeDescriptionBillingAccountNameAllName of the billing account.
BillingCurrencyAllCurrency associated with the billing account.
BillingPeriodEA, pay-
as-you-
goThe billing period of the charge.
BillingPeriodEndDateAllThe end date of the billing period.
BillingPeriodStartDateAllThe start date of the billing period.
BillingProfileId¹AllUnique identifier of the EA enrollment, pay-as-you-gosubscription, MCA billing profile, or AWS consolidatedaccount.
BillingProfileNameAllName of the EA enrollment, pay-as-you-gosubscription, MCA billing profile, or AWS consolidatedaccount.
ChargeTypeAllIndicates whether the charge represents usage(Usage), a purchase (Purchase), or a refund (Refund).
ConsumedServiceAllName of the service the charge is associated with.
CostCenter¹EA, MCAThe cost center defined for the subscription fortracking costs (only available in open billing periodsfor MCA accounts).
CostEA, pay-
as-you-
goSee CostInBillingCurrency.
CostAllocationRuleNameEA, MCAName of the Cost Allocation rule that's applicable tothe record.
CostInBillingCurrencyMCACost of the charge in the billing currency beforecredits or taxes.
CostInPricingCurrencyMCACost of the charge in the pricing currency beforecredits or taxes.
CurrencyEA, pay-
as-you-
goSee BillingCurrency.
CustomerNameMPAName of the Azure Active Directory tenant for thecustomer's subscription.


TermAccounttypeDescriptionCustomerTenantIdMPAIdentifier of the Azure Active Directory tenant of thecustomer's subscription.
Date¹AllThe usage or purchase date of the charge.
EffectivePriceAllBlended unit price for the period. Blended pricesaverage out any fluctuations in the unit price, likegraduated tiering, which lowers the price as quantityincreases over time.
ExchangeRateDateMCADate the exchange rate was established.
ExchangeRatePricingToBillingMCAExchange rate used to convert the cost in the pricingcurrency to the billing currency.
FrequencyAllIndicates whether a charge is expected to repeat.
Charges can either happen once (OneTime), repeat ona monthly or yearly basis (Recurring), or be based onusage (UsageBased).
InvoiceIdpay-as-
you-go,
MCAThe unique document ID listed on the invoice PDF.
InvoiceSectionMCASee InvoiceSectionName.
InvoiceSectionId¹EA, MCAUnique identifier for the EA department or MCAinvoice section.
InvoiceSectionNameEA, MCAName of the EA department or MCA invoice section.
IsAzureCreditEligibleAllIndicates if the charge is eligible to be paid for usingAzure credits (Values: True or False).
LocationMCANormalized location of the resource, if differentresource locations are configured for the sameregions.
MeterCategoryAllName of the classification category for the meter. Forexample, Cloud services and Networking.
MeterId¹AllThe unique identifier for the meter.
MeterNameAllThe name of the meter.
MeterRegionAllName of the datacenter location for services pricedbased on location. See Location.
MeterSubCategoryAllName of the meter subclassification category.


TermAccounttypeDescriptionOfferId¹AllName of the offer purchased.
pay-as-you-goPriceAllRetail price for the resource.
PartnerEarnedCreditAppliedMPAIndicates whether the partner earned credit has beenapplied.
PartnerEarnedCreditRateMPARate of discount applied if there's a partner earnedcredit (PEC), based on partner admin link access.
PartnerNameMPAName of the partner Azure Active Directory tenant.
PartnerTenantIdMPAIdentifier for the partner's Azure Active Directorytenant.
PartNumber¹EA, pay-
as-you-
goIdentifier used to get specific meter pricing.
PlanNameEA, pay-
as-you-
goMarketplace plan name.
PreviousInvoiceIdMCAReference to an original invoice if the line item is arefund.
PricingCurrencyMCACurrency used when rating based on negotiatedprices.
PricingModelAllIdentifier that indicates how the meter is priced.
(Values: On Demand, Reservation, and Spot)
ProductAllName of the product.
ProductId¹MCAUnique identifier for the product.
ProductOrderIdAllUnique identifier for the product order.
ProductOrderNameAllUnique name for the product order.
ProviderAllIdentifier for product category or Line of Business. Forexample, Azure, Microsoft 365, and AWS.
PublisherIdMCAThe ID of the publisher. It's only available after theinvoice is generated.
PublisherNameAllPublisher for Marketplace services.


TermAccounttypeDescriptionPublisherTypeAllSupported values: Microsoft, Azure, AWS,
Marketplace. Values are Microsoft for MCA accountsand Azure for EA and pay-as-you-go accounts.
QuantityAllThe number of units purchased or consumed.
ResellerNameMPAThe name of the reseller associated with thesubscription.
ResellerMpnIdMPAID for the reseller associated with the subscription.
ReservationIdEA, MCAUnique identifier for the purchased reservationinstance.
ReservationNameEA, MCAName of the purchased reservation instance.
ResourceGroupAllName of the resource group the resource is in. Not allcharges come from resources deployed to resourcegroups. Charges that don't have a resource group willbe shown as null or empty, Others, or Not applicable.
ResourceId¹AllUnique identifier of the Azure Resource Managerresource.
ResourceLocation¹AllDatacenter location where the resource is running. SeeLocation.
ResourceNameEA, pay-
as-you-
goName of the resource. Not all charges come fromdeployed resources. Charges that don't have aresource type will be shown as null/empty, Others , orNot applicable.
ResourceTypeMCAType of resource instance. Not all charges come fromdeployed resources. Charges that don't have aresource type will be shown as null/empty, Others , orNot applicable.
RoundingAdjustmentEA, MCARounding adjustment represents the quantization thatoccurs during cost calculation. When the calculatedcosts are converted to the invoiced total, smallrounding errors can occur. The rounding errors arerepresented as rounding adjustment to ensure that thecosts shown in Cost Management align to the invoice.
ServiceFamilyMCAService family that the service belongs to.
ServiceInfo¹AllService-specific metadata.


TermAccounttypeDescriptionServiceInfo2AllLegacy field with optional service-specific metadata.
ServicePeriodEndDateMCAThe end date of the rating period that defined andlocked pricing for the consumed or purchased service.
ServicePeriodStartDateMCAThe start date of the rating period that defined andlocked pricing for the consumed or purchased service.
SubscriptionId¹AllUnique identifier for the Azure subscription.
SubscriptionNameAllName of the Azure subscription.
Tags¹AllTags assigned to the resource. Doesn't includeresource group tags. Can be used to group ordistribute costs for internal chargeback. For moreinformation, see Organize your Azure resources withtags.
TermAllDisplays the term for the validity of the offer. Forexample: In case of reserved instances, it displays 12months as the Term. For one-time purchases orrecurring purchases, Term is one month (SaaS,
Marketplace Support). Not applicable for Azureconsumption.
UnitOfMeasureAllThe unit of measure for billing for the service. Forexample, compute services are billed per hour.
UnitPriceEA, pay-
as-you-
goThe price per unit for the charge.

¹ Fields used to build a unique ID for a single cost record. Every record in your costdetails file should be considered unique.

The cost details file itself doesn’t uniquely identify individual records with an ID. Instead,
you can use fields in the file flagged with ¹ to create a unique ID yourself.

Some fields might differ in casing and spacing between account types. Older versions ofpay-as-you-go cost details files have separate sections for the statement and daily cost.

List of terms from older APIs

The following table maps terms used in older APIs to the new terms. Refer to the abovetable for those descriptions.


Old termOld termNew termNew termConsumedQuantityQuantityIncludedQuantityN/AInstanceIdResourceIdRateEffectivePriceUnitUnitOfMeasureUsageDateDateUsageEndDateUsageStartDate

Next steps

Get an overview of how to ingest cost data.
Learn more about Choose a cost details solution.
Create and manage exported data in the Azure portal with Exports.
Automate Export creation and ingestion at scale using the API.
Learn how to Get small cost datasets on demand.



Retrieve large cost datasets recurringlywith exports

Article
07/17/2022


This article helps you regularly export large amounts of data with exports from CostManagement. Exporting is the recommended way to retrieve unaggregated cost data.
Especially when usage files are too large to reliably call and download using the CostDetails API. Exported data is placed in the Azure Storage account that you choose. Fromthere, you can load it into your own systems and analyze it as needed. To configureexports in the Azure portal, see Export data.

If you want to automate exports at various scopes, the sample API request in the nextsection is a good starting point. You can use the Exports API to create automatic exportsas a part of your general environment configuration. Automatic exports help ensure thatyou have the data that you need. You can use in your own organization's systems as youexpand your Azure use.

Common export configurations

Before you create your first export, consider your scenario and the configuration optionsneed to enable it. Consider the following export options:

Recurrence - Determines how frequently the export job runs and when a file is putin your Azure Storage account. Choose between Daily, Weekly, and Monthly. Try toconfigure your recurrence to match the data import jobs used by yourorganization's internal system.
Recurrence Period - Determines how long the Export remains valid. Files are onlyexported during the recurrence period.
Time Frame - Determines the amount of data that's generated by the export on agiven run. Common options are MonthToDate and WeekToDate.
StartDate - Configures when you want the export schedule to begin. An export iscreated on the StartDate and then later based on your Recurrence.
Type - There are three export types:
ActualCost - Shows the total usage and costs for the period specified, as they'reaccrued and shows on your bill.
AmortizedCost - Shows the total usage and costs for the period specified, withamortization applied to the reservation purchase costs that are applicable.
Usage - All exports created before July 20 2020 are of type Usage. Update allyour scheduled exports as either ActualCost or AmortizedCost.






Columns – Defines the data fields you want included in your export file. Theycorrespond with the fields available in the Cost Details API.
Partitioning - Set the option to true if you have a large dataset and would like it tobe broken up into multiple files. This makes data ingestion much faster and easier.
For more information about partitioning, see File partitioning for large datasets.


Create a daily month-to-date export for asubscription

Request URL: PUThttps://management.azure.com/{scope}/providers/Microsoft.CostManagement/exports/{exportName}?api-version=2020-06-01

JSON{ 
"properties": { 
"schedule": { 
"status": "Active", 
"recurrence": "Daily", 
"recurrencePeriod": { 
"from": "2020-06-01T00:00:00Z", 
"to": "2020-10-31T00:00:00Z" 
} 
}, 
"format": "Csv", 
"deliveryInfo": { 
"destination": { 
"resourceId": "/subscriptions/00000000-0000-0000-0000-
000000000000/resourceGroups/MYDEVTESTRG/providers/Microsoft.Storage/storageAccounts/{yourStorageAccount} ", 
"container": "{yourContainer}", 
"rootFolderPath": "{yourDirectory}" 
} 
}, 
"definition": { 
"type": "ActualCost", 
"timeframe": "MonthToDate", 
"dataSet": { 
"granularity": "Daily", 
"configuration": { 
"columns": [ 
"Date", 
"MeterId", 
"ResourceId", 
"ResourceLocation", 
"Quantity" 
] 
}

 } 
}
}
Copy large Azure storage blobs

You can use Cost Management to schedule exports of your Azure usage details intoyour Azure Storage accounts as blobs. The resulting blob sizes could be over gigabytesin size. The Cost Management team worked with the Azure Storage team to test copyinglarge Azure storage blobs. The results are documented in the following sections. You canexpect to have similar results as you copy storage blobs from one Azure region toanother.

To test its performance, the team transferred blobs from storage accounts in the USWest region to the same and other regions. The team measured speeds that rangedfrom 2 GB per second in the same region to 150 MB per second to storage accounts inthe South East Asia region.

Test configuration

To measure blob transfer speeds, the team created a simple .NET console applicationreferencing the latest version (v2.0.1) of the Azure Data Movement Library (DLM) viaNuGet. DLM is an SDK provided by the Azure Storage team that enables programmaticaccess to their transfer services. Then they created Standard V2 storage accounts inmultiple regions and use the West US as the source region. They populated the storageaccounts there with containers, where each held ten 2-GB block blobs. They copied thecontainers to other storage accounts using DLM's TransferManager.CopyDirectoryAsync()
method with the CopyMethod.ServiceSideSyncCopy option. Tests were conducted on acomputer running Windows 10 with 12 cores and 1-GbE network.

Application settings used:

TransferManager.Configurations.ParallelOperations = Environment.ProcessorCount *
32. The team found the setting to have the most effect on overall throughput. Avalue of 32 times the number of cores provided the best throughput for the testclient.
ServicePointManager.DefaultConnectionLimit = int.MaxValue. Setting it to amaximum value effectively passes full control of transfer parallelism to theParallelOperations setting above.
TransferManager.Configurations.BlockSize = 4,194,304. It had some effect ontransfer rates with 4 MB, proving to be best for testing.



For more information and sample code, see links in the Next steps section.

Test results

TestnumberToregionBlobsTime(secs)
MB/sComments1WestUS2 GB x10102,0002WestUS22 GB x10336003EastUS2 GB x10673004EastUS2 GB x10 x 4992004 parallel transfers using 8 storage accounts: 4West to 4 East average per transfer6EastUS2 GB x10 x 4928704 parallel transfers from 1 storage account toanother5EastUS2G x10 x 81481358 parallel transfers using 8 storage accounts: 4West to 4x2 East average per transfer7SE Asia2 GB x101331508SE Asia2 GB x10 x 44441804 parallel transfers from 1 storage account toanother

Sync transfer characteristics

Here are some of the characteristics of the service-side sync transfer used with DML thatare relevant to its use:

DML can transfer a single blob or a directory. For directory transfer, you can use asearch pattern to match on blob prefix.
Block blob transfers happen in parallel. All complete towards the end of thetransfer process. Individual blob blocks are transferred in parallel.
The transfer is executed asynchronously on the client. The transfer status isavailable periodically via a callback to a method that can be defined in aTransferContext object.
The transfer creates checkpoints during its progress and exposes aTransferCheckpoint object. The object represents the latest checkpoint via theTransferContext object. If the TransferCheckpoint is saved before a transfer is



cancelled/aborted, the transfer can be resumed from the checkpoint for up toseven days. The transfer can be resumed from any checkpoint, not just the latest.
If the transfer client process is killed and restarted without implementing thecheckpoint feature.
Before any blob transfers have been completed, the transfer restarts.
After some of the blobs have been completed, the transfer restarts for only theincompleted blobs.



Pausing the client execution pauses the transfers.
The blob transfer feature abstracts the client from transient failures. For instance,
storage account throttling won't normally cause a transfer to fail but will slow thetransfer.
Service-side transfers have low client resource usage for CPU and memory, somenetwork bandwidth, and connections.


Async transfer characteristics

You can invoke the TransferManager.CopyDirectoryAsync() method with theCopyMethod.ServiceSideAsyncCopy option. It operates similar to the sync transfermechanism from the client perspective but with the following differences in operation:

Transfer rates are much slower than the equivalent sync transfer (typically 10 MB/sor less).
The transfer continues even if the client process terminates.
Although checkpoints are supported, resuming a transfer using aTransferCheckpoint won't resume at the checkpoint time but at the current state ofthe transfer.


Test summary

Azure blob storage supports high global transfer rates with its service-side sync transferfeature. Using the feature in .NET applications is straightforward using the DataMovement Library. It's possible for Cost Management exports to reliably copy hundredsof gigabytes of data to a storage account anywhere in less than an hour.

Next steps

See the Microsoft Azure Storage Data Movement Library source.
Transfer data with the Data Movement library.
See the AzureDmlBackup sample application source sample.
Read High-Throughput with Azure Blob Storage.



Get small cost datasets on demand

Article
05/10/2023


Use the Cost Details API to get raw, unaggregated cost data that corresponds to yourAzure bill. The API is useful when your organization needs a programmatic data retrievalsolution. Consider using the API if want to analyze smaller cost data sets of 2 GB (2million rows) or less. However, you should use Exports for ongoing data ingestionworkloads and for the download of larger datasets.

If you want to get large amounts of exported data regularly, see Retrieve large costdatasets recurringly with exports.

To learn more about the data in cost details (formerly referred to as usage details), seeIngest cost details data.

The Cost Details report is only available for customers with an Enterprise Agreement orMicrosoft Customer Agreement. If you're an MSDN, Pay-As-You-Go or Visual Studiocustomer, see Get cost details for a pay-as-you-go subscription.

Permissions

To use the Cost Details API, you need read only permissions for supported features andscopes.

Note

The Cost Details API doesn't support management groups for either EA or MCAcustomers.

For more information, see:

Azure RBAC scopes - role permissions for feature behavior
Enterprise Agreement scopes - role permissions for feature behavior
Microsoft Customer Agreement scopes - role permissions for feature behavior


Cost Details API best practices

Microsoft recommends the following best practices as you use the Cost Details API.

Request schedule


If you want to get the latest cost data, we recommend you query at most once per day.
Reports are refreshed every four hours. If you call more frequently, you'll receiveidentical data. Once you download your cost data for historical invoices, the chargeswon't change unless you're explicitly notified. We recommend caching your cost data ina queryable store on your side to prevent repeated calls for identical data.

Chunk your requests

Chunk your calls into small date ranges to get more manageable files that you candownload over the network. For example, we recommend chunking by day or by week ifyou have a large Azure cost file month-to-month. If you have scopes with a largeamount of cost data (for example a Billing Account), consider placing multiple calls tochild scopes so you get more manageable files that you can download. For moreinformation about Cost Management scopes, see Understand and work with scopes.
After you download the data, use Excel to analyze data further with filters and pivottables.

If your dataset is more than 2 GB (or roughly 2 million rows) month-to-month, considerusing Exports as a more scalable solution.

Latency and rate limits

On demand calls to the API are rate limited. The time it takes to generate your costdetails file is directly correlated with the amount of data in the file. To understand theexpected amount of time before your file becomes available for download, you can usethe retry-after header in the API response.

Supported dataset time ranges

The Cost Details API supports a maximum data set time range of one month per report.
Historical data can be retrieved for up to 13 months back from the current date. If you'relooking to seed a 13 month historical dataset, we recommend placing 13 calls for onemonth datasets going back 13 months.

Example Cost Details API requests

The following example requests are used by Microsoft customers to address commonscenarios. The data that's returned by the request corresponds to the date when thecost was received by the billing system. It might include costs from multiple invoices. It'san asynchronous API. As such, you place an initial call to request your report and receive


a polling link in the response header. From there, you can poll the link provided until thereport is available for you.

Use the retry-after header in the API response to dictate when to poll the API next.
The header provides an estimated minimum time that your report will take to generate.

To learn more about the API contract, see Cost Details API.

Actual cost versus amortized cost

To control whether you would like to see an actual cost or amortized cost report, changethe value used for the metric field in the initial request body. The available metric valuesare ActualCost or AmortizedCost.

Amortized cost breaks down your reservation purchases into daily chunks and spreadsthem over the duration of the reservation term. For example, instead of seeing a $365purchase on January 1, you'll see a $1.00 purchase every day from January 1 toDecember 31. In addition to basic amortization, the costs are also reallocated andassociated by using the specific resources that used the reservation. For example, if the$1.00 daily charge was split between two virtual machines, you'd see two $0.50 chargesfor the day. If part of the reservation isn't utilized for the day, you'd see one $0.50charge associated with the applicable virtual machine and another $0.50 charge with acharge type of UnusedReservation. Unused reservation costs are seen only when viewingamortized cost.

Because of the change in how costs are represented, it's important to note that actualcost and amortized cost views will show different total numbers. In general, the totalcost of months over time for a reservation purchase will decrease when viewingamortized costs. The months following a reservation purchase will increase.
Amortization is available only for reservation purchases and doesn't currently apply toAzure Marketplace purchases.

Initial request to create report

HTTPPOST 
https://management.azure.com/{scope}/providers/Microsoft.CostManagement/generateCostDetailsReport?api-version=2022-05-01
Request body:


An example request for an ActualCost dataset for a specified date range is providedbelow.

JSON{ 
"metric": "ActualCost", 
"timePeriod": { 
"start": "2020-03-01", 
"end": "2020-03-15" 
}
}
Available {scope} options to build the proper URI are documented at Identify theresource ID for a scope.

The available fields you can provide in the report request body are summarized below.

metric - The type of report requested. It can be either ActualCost orAmortizedCost. Not required. If the field isn't specified, the API will default to anActualCost report.
timePeriod - The requested date range for your data. Not required. This parametercan't be used alongside either the invoiceId or billingPeriod parameters. If atimePeriod, invoiceId or billingPeriod parameter isn't provided in the request bodythe API will return the current month's cost.
invoiceId - The requested invoice for your data. This parameter can only be usedby Microsoft Customer Agreement customers. Additionally, it can only be used atthe Billing Profile or Customer scope. This parameter can't be used alongsideeither the billingPeriod or timePeriod parameters. If a timePeriod, invoiceId orbillingPeriod parameter isn't provided in the request body the API will return thecurrent month's cost.
billingPeriod - The requested billing period for your data. This parameter can beused only by Enterprise Agreement customers. Use the YearMonth format. Forexample, 202008. This parameter can't be used alongside either the invoiceId ortimePeriod parameters. If a timePeriod, invoiceId or billingPeriod parameter isn'tprovided in the request body the API will return the current month's cost.


API response:

Response Status: 202 – Accepted : Indicates that the request will be processed. Use theLocation header to check the status.

Response headers:


NameNameTypeTypeFormatFormatDescriptionDescriptionLocationStringThe URL to check the result of the asynchronous operation.
Retry-
AfterIntegerInt32The expected time for your report to be generated. Wait for thisduration before polling again.

Report polling and download

Once you've requested to create a Cost Details report, poll for the report using theendpoint provided in the location header of the API response. An example pollingrequest is below.

Report polling request:

HTTPGET 
https://management.azure.com/{scope}/providers/Microsoft.CostManagement/costDetailsOperationStatus/{operationId}?api-version=2022-05-01
Response Status 200 – Succeeded: Indicates that the request has succeeded.

JSON{ 
"id": "subscriptions/00000000-0000-0000-0000-
000000000000/providers/Microsoft.CostManagement/operationResults/00000000-
0000-0000-0000-000000000000", 
"name": "00000000-0000-0000-0000-000000000000", 
"status": "Completed", 
"manifest": { 
"manifestVersion": "2022-05-01", 
"dataFormat": "Csv", 
"blobCount": 1, 
"byteCount": 160769, 
"compressData": false, 
"requestContext": { 
"requestScope": "subscriptions/00000000-0000-0000-0000-000000000000", 
"requestBody": { 
"metric": "ActualCost", 
"timePeriod": { 
"start": "2020-03-01", 
"end": "2020-03-15" 
} 
} 
}, 
"blobs": [ 
{

 "blobLink": "{downloadLink}", 
"byteCount": 32741 
} 
] 
}, 
"validTill": "2022-05-10T08:08:46.1973252Z"
}
A summary of the key fields in the API response is below:

manifestVersion - The version of the manifest contract that is used in theresponse. At this time, the manifest version will remain the same for a given APIversion.
dataFormat - CSV is the only supported file format provided by the API at thistime.
blobCount - Represents the number of individual data blobs present in the reportdataset. It's important to note that this API may provide a partitioned dataset ofmore than one file in the response. Design your data pipelines to be able to handlepartitioned files accordingly. Partitioning will allow you to be able to ingest largerdatasets more quickly moving forward.
byteCount - The total byte count of the report dataset across all partitions.
compressData - Compression is always set to false for the first release. The API willsupport compression in the future, however.
requestContext - The initial configuration requested for the report.
blobs - A list of n blob files that together comprise the full report.
blobLink - The download URL of an individual blob partition.
byteCount - The byte count of the individual blob partition.



validTill - The date at which the report will no longer be accessible.


Next steps

Read the Ingest cost details data article.
Learn more about Choose a cost details solution.
Understand cost details fields.
Create and manage exported data in the Azure portal with exports.
Automate Export creation and ingestion at scale using the API.



Get cost details for a pay-as-you-gosubscription

Article
07/18/2022


If you have an MSDN, Microsoft Online Service Program (MOSP) pay-as-you-go, orVisual Studio Azure subscription, we recommend that you use Exports or the Exports APIto get cost details data (formerly known as usage details). The Cost Details API reportisn't supported for your subscription type yet.

If you need to download small datasets and you don't want to use Azure Storage, youcan also use the Consumption Usage Details API. Instructions about how to use the APIare below.

Note

The API is deprecated for all customers except those with MSDN, pay-as-you-goand Visual Studio subscriptions. If you're an EA or MCA customer don't use this API.

The date that the API will be turned off is still being determined. The Cost Details APIwill be updated to support MSDN, pay-as-you-go and Visual studio subscriptions priorto the deprecation of the Consumption Usage Details API.

Example Consumption Usage Details APIrequests

The following example requests are used by Microsoft customers to address commonscenarios.

Get usage details for a scope during a specific date range

The data that's returned by the request corresponds to the date when the data wasreceived by the billing system. It might include costs from multiple invoices. The call touse varies by your subscription type.

For pay-as-you-go subscriptions, use the following call.

HTTP
GET 
https://management.azure.com/{scope}/providers/Microsoft.Consumption/usageDetails?$filter=properties%2FusageStart%20ge%20'2020-02-
01'%20and%20properties%2FusageEnd%20le%20'2020-02-29'&$top=1000&api-
version=2019-10-01
Get amortized cost details

If you need actual costs to show purchases as they're accrued, change the metric toActualCost in the following request. To use amortized and actual costs, you must useversion 2019-04-01-preview or later.

HTTPGET 
https://management.azure.com/{scope}/providers/Microsoft.Consumption/usageDetails?metric=AmortizedCost&$filter=properties/usageStart+ge+'2019-04-
01'+AND+properties/usageEnd+le+'2019-04-30'&api-version=2019-04-01-preview
Next steps

Read the Ingest cost details data article.
Learn how to Get small cost datasets on demand.
Understand cost details fields.
Create and manage exported data in the Azure portal with exports.
Automate Export creation and ingestion at scale using the API.



Get usage data with the Azure CLI

Article
04/13/2023


This article explains how you get cost and usage data with the Azure CLI. If you want toget usage data using the Azure portal, see View and download your Azure usage andcharges.

Set up the Azure CLI

Start by preparing your environment for the Azure CLI.

Use the Bash environment in Azure Cloud Shell. For more information, seeQuickstart for Bash in Azure Cloud Shell.




If you prefer to run CLI reference commands locally, install the Azure CLI. If you'rerunning on Windows or macOS, consider running Azure CLI in a Docker container.
For more information, see How to run the Azure CLI in a Docker container.

If you're using a local installation, sign in to the Azure CLI by using the az logincommand. To finish the authentication process, follow the steps displayed inyour terminal. For other sign-in options, see Sign in with the Azure CLI.


When you're prompted, install the Azure CLI extension on first use. For moreinformation about extensions, see Use extensions with the Azure CLI.


Run az version to find the version and dependent libraries that are installed. Toupgrade to the latest version, run az upgrade.







Configure an export job to export cost data toAzure storage

After you sign in, use the export commands to export usage data to an Azure storageaccount. You can download the data from there.

1. Create a resource group or use an existing resource group. To create a resourcegroup, run the group create command:

Azure CLI



az group create --name TreyNetwork --location "East US"
2. Create a storage account to receive the exports or use an existing storage account.
To create an account, use the storage account create command:

Azure CLIaz storage account create --resource-group TreyNetwork --name cmdemo
3. Run the export create command to create the export:

Azure CLIaz costmanagement export create --name DemoExport --type Usage \--scope 
"subscriptions/00000000-0000-0000-0000-000000000000" --storage-account-
id cmdemo \--storage-container democontainer --timeframe MonthToDate --
storage-directory demodirectory


Next steps

Read the Ingest usage details data article.
Learn how to Get small cost datasets on demand.
Understand usage details fields.
Create and manage exported data in the Azure portal with exports.
Automate Export creation and ingestion at scale using the API.



Automate budget creation

Article
03/26/2023


You can automate budget creation using the Budgets API. You can also create a budgetwith a budget template. Templates are an easy way for you to standardize Azuredeployments while ensuring cost control is properly configured and enforced.

Common Budgets API configurations

There are many ways to configure a budget in your Azure environment. Consider yourscenario first and then identify the configuration options that enable it. Review thefollowing options:

Time Grain - Represents the recurring period your budget uses to accrue andevaluate costs. The most common options are Monthly, Quarterly, and Annual.
Time Period - Represents how long your budget is valid. The budget activelymonitors and alerts you only while it remains valid.
Notifications
Contact Emails – The email addresses receive alerts when a budget accruescosts and exceeds defined thresholds.
Contact Roles - All users who have a matching Azure role on the given scopereceive email alerts with this option. For example, Subscription Owners couldreceive an alert for a budget created at the subscription scope.
Contact Groups - The budget calls the configured action groups when an alertthreshold is exceeded.



Cost dimension filters - The same filtering you can do in Cost Analysis or theQuery API can also be done on your budget. Use this filter to reduce the range ofcosts that you're monitoring with the budget.


After you've identified the budget creation options that meet your needs, create thebudget using the API. The example below helps get you started with a common budgetconfiguration.

Create a budget filtered to multiple resources and tags

Request URL: PUThttps://management.azure.com/subscriptions/{SubscriptionId}/providers/Microsoft.Consumption/budgets/{BudgetName}/?api-version=2019-10-01

JSON
{ 
"eTag": "\"1d34d016a593709\"", 
"properties": { 
"category": "Cost", 
"amount": 100.65, 
"timeGrain": "Monthly", 
"timePeriod": { 
"startDate": "2017-10-01T00:00:00Z", 
"endDate": "2018-10-31T00:00:00Z" 
}, 
"filter": { 
"and": [ 
{ 
"dimensions": { 
"name": "ResourceId", 
"operator": "In", 
"values": [ 
"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{meterName}", 
"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{meterName}" 
] 
} 
}, 
{ 
"tags": { 
"name": "category", 
"operator": "In", 
"values": [ 
"Dev", 
"Prod" 
] 
} 
}, 
{ 
"tags": { 
"name": "department", 
"operator": "In", 
"values": [ 
"engineering", 
"sales" 
] 
} 
} 
] 
}, 
"notifications": { 
"Actual_GreaterThan_80_Percent": { 
"enabled": true, 
"operator": "GreaterThan", 
"threshold": 80, 
"contactEmails": [

 "user1@contoso.com", 
"user2@contoso.com" 
], 
"contactRoles": [ 
"Contributor", 
"Reader" 
], 
"contactGroups": [ 
"/subscriptions/{subscriptionID}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/actionGroups/{actionGroupName} 
], 
"thresholdType": "Actual" 
} 
} 
}
}
Supported locales for budget alert emails

With budgets, you're alerted when costs cross a set threshold. You can set up to fiveemail recipients per budget. Recipients receive the email alerts within 24 hours ofcrossing the budget threshold. However, your recipient might need to receive an emailin a different language. You can use the following language culture codes with theBudgets API. Set the culture code with the locale parameter similar to the followingexample.

JSON{ 
"eTag": "\"1d681a8fc67f77a\"", 
"properties": { 
"timePeriod": { 
"startDate": "2020-07-24T00:00:00Z", 
"endDate": "2022-07-23T00:00:00Z" 
}, 
"timeGrain": "BillingMonth", 
"amount": 1, 
"currentSpend": { 
"amount": 0, 
"unit": "USD" 
}, 
"category": "Cost", 
"notifications": { 
"actual_GreaterThan_10_Percent": { 
"enabled": true, 
"operator": "GreaterThan", 
"threshold": 20, 
"locale": "en-us", 
"contactEmails": [

 "user@contoso.com" 
], 
"contactRoles": [], 
"contactGroups": [], 
"thresholdType": "Actual" 
} 
} 
}
}
Languages supported by a culture code:

Culture codeLanguageen-usEnglish (United States)
ja-jpJapanese (Japan)
zh-cnChinese (Simplified, China)
de-deGerman (Germany)
es-esSpanish (Spain, International)
fr-frFrench (France)
it-itItalian (Italy)
ko-krKorean (Korea)
pt-brPortuguese (Brazil)
ru-ruRussian (Russia)
zh-twChinese (Traditional, Taiwan)
cs-czCzech (Czech Republic)
pl-plPolish (Poland)
tr-trTurkish (Türkiye)
da-dkDanish (Denmark)
en-gbEnglish (United Kingdom)
hu-huHungarian (Hungary)
nb-noNorwegian Bokmal (Norway)
nl-nlDutch (Netherlands)
pt-ptPortuguese (Portugal)


Culture codeLanguagesv-seSwedish (Sweden)

Configure cost-based orchestration for budgetalerts

You can configure budgets to start automated actions using Azure Action Groups. Tolearn more about automating actions using budgets, see Automation with budgets.

Next steps

Learn more about Cost Management + Billing automation at Cost Managementautomation overview.
Assign permissions to Cost Management APIs.



Manage costs with budgets

Article
12/07/2022


Cost control is a critical component to maximizing the value of your investment in thecloud. There are several scenarios where cost visibility, reporting, and cost-basedorchestration are critical to continued business operations. Cost Management APIsprovide a set of APIs to support each of these scenarios. The APIs provide usage details,
allowing you to view granular instance level costs.

Budgets are commonly used as part of cost control. Budgets can be scoped in Azure.
For instance, you could narrow your budget view based on subscription, resourcegroups, or a collection of resources. In addition to using the budgets API to notify youvia email when a budget threshold is reached, you can use Azure Monitor action groupsto trigger an orchestrated set of actions resulting from a budget event.

A common budgets scenario for a customer running a non-critical workload could occurwhen they want to manage against a budget and also get to a predictable cost whenlooking at the monthly invoice. This scenario requires some cost-based orchestration ofresources that are part of the Azure environment. In this scenario, a monthly budget of$1000 for the subscription is set. Also, notification thresholds are set to trigger a feworchestrations. This scenario starts with an 80% cost threshold, which will stop all VMs inthe resource group Optional. Then, at the 100% cost threshold, all VM instances will bestopped.

To configure this scenario, you'll complete the following actions by using the stepsprovided in each section of this tutorial.

These actions included in this tutorial allow you to:

Create an Azure Automation Runbook to stop VMs by using webhooks.
Create an Azure Logic App to be triggered based on the budget threshold valueand call the runbook with the right parameters.
Create an Azure Monitor Action Group that will be configured to trigger the AzureLogic App when the budget threshold is met.
Create the budget with the wanted thresholds and wire it to the action group.


Create an Azure Automation Runbook

Azure Automation is a service that enables you to script most of your resourcemanagement tasks and run those tasks as either scheduled or on-demand. As part ofthis scenario, you'll create an Azure Automation runbook that will be used to stop VMs.


You'll use the Stop Azure V2 VMs graphical runbook from the gallery to build thisscenario. By importing this runbook into your Azure account and publishing it, you canstop VMs when a budget threshold is reached.

Create an Azure Automation account

1. Sign in to the Azure portal with your Azure account credentials.
2. Select the Create a resource button found on the upper left corner of Azure.
3. Select Management Tools > Automation.
Note

If you don't have an Azure account, you can create a free account.


4. Enter your account information. For Create Azure Run As account, choose Yes toautomatically enable the settings needed to simplify authentication to Azure.
5. When complete, select Create, to start the Automation account deployment.


Import the Stop Azure V2 VMs runbook

Using an Azure Automation runbook, import the Stop Azure V2 VMs graphicalrunbook from the gallery.

1. Sign in to the Azure portal with your Azure account credentials.
2. Open your Automation account by selecting All services > Automation Accounts.
Then, select your Automation Account.
3. Select Runbooks gallery from the Process Automation section.
4. Set the Gallery Source to Script Center and select OK.
5. Locate and select the Stop Azure V2 VMs gallery item within the Azure portal.
6. Select Import to display the Import area and select OK. The runbook overviewarea will be displayed.
7. Once the runbook has completed the import process, select Edit to display thegraphical runbook editor and publishing option.



Azure - Edit graphical runbook
8. Select Publish to publish the runbook and then select Yes when prompted. Whenyou publish a runbook, you override any existing published version with the draftversion. In this case, you've no published version because you've created therunbook.
For more information about publishing a runbook, see Create a graphicalrunbook.


Create webhooks for the runbook

Using the Stop Azure V2 VMs graphical runbook, you create two Webhooks to startthe runbook in Azure Automation through a single HTTP request. The first webhookinvokes the runbook at an 80% budget threshold with the resource group name as aparameter, allowing the optional VMs to be stopped. Then, the second webhookinvokes the runbook with no parameters (at 100%), which stops all remaining VMinstances.

1. From the Runbooks page in the Azure portal, select the StopAzureV2Vmrunbook that displays the runbook's overview area.
2. Select Webhook at the top of the page to open the Add Webhook area.
3. Select Create new webhook to open the Create a new webhook area.



4. Set the Name of the Webhook to Optional. The Enabled property must be Yes.
You don't need to change the Expires value. For more information about Webhookproperties, see Webhook properties.
5. Next to the URL value, select the copy icon to copy the URL of the webhook.
Important

Save the URL of the webhook named Optional in a safe place. You'll use theURL later in this tutorial. For security reasons, once you create the webhook,
you cannot view or retrieve the URL again.


6. Select OK to create the new webhook.
7. Select Configure parameters and run settings to view parameter values for therunbook.
Note

If the runbook has mandatory parameters, then you are not able to create thewebhook unless values are provided.


8. Select OK to accept the webhook parameter values.
9. Select Create to create the webhook.
10. Next, follow the steps above to create a second webhook named Complete.
Important

Be sure to save both webhook URLs to use later in this tutorial. For securityreasons, once you create the webhook, you cannot view or retrieve the URLagain.




You should now have two configured webhooks that are each available using the URLsthat you saved.


Webhooks - Optional and Complete


You're now done with the Azure Automation setup. You can test the webhooks with asimple Postman test to validate that the webhook works. Next, you must create theLogic App for orchestration.

Create an Azure Logic App for orchestration

Logic Apps helps you build, schedule, and automate processes as workflows so you canintegrate apps, data, systems, and services across enterprises or organizations. In thisscenario, the Logic App you create will do a little more than just call the automationwebhook you created.

Budgets can be set up to trigger a notification when a specified threshold is met. Youcan provide multiple thresholds to be notified at and the Logic App will demonstrate theability for you to perform different actions based on the threshold met. In this example,
you'll set up a scenario where you get a couple of notifications, the first notification isfor when 80% of the budget has been reached and the second notification is when100% of the budget has been reached. The logic app will be used to shut down all VMsin the resource group. First, the Optional threshold will be reached at 80%, then thesecond threshold will be reached where all VMs in the subscription will be shut down.

Logic apps allow you to provide a sample schema for the HTTP trigger, but require youto set the Content-Type header. Because the action group doesn't have custom headersfor the webhook, you must parse out the payload in a separate step. You'll use the Parseaction and provide it with a sample payload.

Create the logic app

The logic app will perform several actions. The following list provides a high-level set ofactions that the logic app will perform:


Recognizes when an HTTP request is received
Parse the passed in JSON data to determine the threshold value that has beenreached
Use a conditional statement to check whether the threshold amount has reached80% or more of the budget range, but not greater than or equal to 100%.
If this threshold amount has been reached, send an HTTP POST using thewebhook named Optional. This action will shut down the VMs in the "Optional"
group.



Use a conditional statement to check whether the threshold amount has reachedor exceeded 100% of the budget value.
If the threshold amount has been reached, send an HTTP POST using thewebhook named Complete. This action will shut down all remaining VMs.





The following steps are needed to create the logic app that will perform the abovesteps:

1. In the Azure portal, select Create a resource > Integration > Logic App.
Azure - Select the Logic App resource
2. In the Create logic app area, provide the details need to create your logic app,
select Pin to dashboard, and select Create.



Azure - Create a Logic App


After Azure deploys your logic app, the Logic Apps Designer opens and shows an areawith an introduction video and commonly used triggers.

Add a trigger

Every logic app must start with a trigger, which fires when a specific event happens orwhen a specific condition is met. Each time the trigger fires, the Logic Apps enginecreates a logic app instance that starts and runs your workflow. Actions are all the stepsthat happen after the trigger.

1. Under Templates of the Logic Apps Designer area, choose Blank Logic App.
2. Add a trigger by entering "http request" in the Logic Apps Designer search box tofind and select the trigger named Request – When an HTTP request is received.



Azure - Logic app - Http trigger
3. Select New step > Add an action.
Azure - New step - Add an action
4. Search for "parse JSON" in the Logic Apps Designer search box to find and selectthe Data Operations - Parse JSON action.



Azure - Logic app - Add parse JSON action
5. Enter "Payload" as the Content name for the Parse JSON payload or use the "Body"
tag from dynamic content.
6. Select the Use sample payload to generate schema option in the Parse JSON box.
Azure - Logic app - Use sample JSON data to generate schema
7. Paste the following JSON sample payload into the textbox:
{"schemaId":"AIPBudget Notification","data":{"SubscriptionName":"CCM - Microsoft AzureEnterprise - 1","SubscriptionId":"
<GUID>","SpendingAmount":"100","BudgetStartDate":"6/1/2018","Budget":"50","Unit":"USD","BudgetCreator":"email@contoso.com","BudgetName":"BudgetName","BudgetType":"Cost","ResourceGroup":"","NotificationThresholdAmount":"0.8"}}
The



textbox will appear as:
Azure - Logic app - The sample JSON payload
8. Select Done.


Add the first conditional action

Use a conditional statement to check whether the threshold amount has reached 80% ormore of the budget range, but not greater than or equal to 100%. If this thresholdamount has been reached, send an HTTP POST using the webhook named Optional.
This action will shut down the VMs in the Optional group.

1. Select New step > Add a condition.
Azure - Logic app - Add a condition



2. In the Condition box, select the textbox containing Choose a value to display a listof available values.
Azure - Logic app - Condition box






3. Select Expression at the top of the list and enter the following expression in theexpression editor:
float()
Azure - Logic app - Float expression



4. Select Dynamic content, place the cursor inside the parenthesis (), and selectNotificationThresholdAmount from the list to populate the complete expression.
The expression will be:
float(body('Parse_JSON')?['data']?['NotificationThresholdAmount'])


5. Select OK to set the expression.


6. Select is greater than or equal to in the dropdown box of the Condition.


7. In the Choose a value box of the condition, enter .8.
Screenshot shows the Condition dialog box with values selected.






8. Select Add > Add row within the Condition box to add an additional part of thecondition.


9. In the Condition box, select the textbox containing Choose a value.


10. Select Expression at the top of the list and enter the following expression in theexpression editor:
float()


11. Select Dynamic content, place the cursor inside the parenthesis (), and selectNotificationThresholdAmount from the list to populate the complete expression.


12. Select OK to set the expression.


13. Select is less than in the dropdown box of the Condition.


14. In the Choose a value box of the condition, enter 1.
Screenshot shows the Condition dialog box with two conditions.



15. In the If true box, select Add an action. You'll add an HTTP POST action that willshut down optional VMs.
Azure - Logic app - Add an action






16. Enter HTTP to search for the HTTP action and select the HTTP – HTTP action.
Azure - Logic app - Add HTTP action



17. Select Post for the Method value.


18. Enter the URL for the webhook named Optional that you created earlier in thistutorial as the Uri value.






Azure - Logic app - HTTP action URI



19. Select Add an action in the If true box. You'll add an email action that will send anemail notifying the recipient that the optional VMs have been shut down.


20. Search for "send email" and select a send email action based on the email serviceyou use.
Azure - Logic app - Send email action






For personal Microsoft accounts, select Outlook.com. For Azure work or schoolaccounts, select Office 365 Outlook. If you don't already have a connection, you'reasked to sign in to your email account. Logic Apps creates a connection to youremail account.
You'll need to allow the Logic App to access your email information.
Azure - Logic app - Access notice






21. Add the To, Subject, and Body text for the email that notifies the recipient that theoptional VMs have been shut down. Use the BudgetName and theNotificationThresholdAmount dynamic content to populate the subject and bodyfields.
Azure - Logic app - Email details





Add the second conditional action

Use a conditional statement to check whether the threshold amount has reached orexceeded 100% of the budget value. If the threshold amount has been reached, send anHTTP POST using the webhook named Complete. This action will shut down allremaining VMs.

1. Select New step > Add a Condition.
Screenshot shows the If true dialog box with Add an action called out.
2. In the Condition box, select the textbox containing Choose a value to display a listof available values.
3. Select Expression at the top of the list and enter the following expression in theexpression editor:
float()
4. Select Dynamic content, place the cursor inside the parenthesis (), and selectNotificationThresholdAmount from the list to populate the complete expression.
The expression will resemble:
float(body('Parse_JSON')?['data']?['NotificationThresholdAmount'])
5. Select OK to set the expression.
6. Select is greater than or equal to in the dropdown box of the Condition.



7. In the Choose a value box for the condition, enter 1.
Azure - Logic app - Set condition value
8. In the If true box, select Add an action. You'll add an HTTP POST action that willshut down all the remaining VMs.
Screenshot shows the If true dialog box with where you can add an H T T P POST action.
9. Enter HTTP to search for the HTTP action and select the HTTP – HTTP action.
10. Select Post as the Method value.
11. Enter the URL for the webhook named Complete that you created earlier in thistutorial as the Uri value.
Screenshot shows the H T T P dialog box where you can enter the U R L value.
12. Select Add an action in the If true box. You'll add an email action that will send anemail notifying the recipient that the remaining VMs have been shut down.
13. Search for "send email" and select a send email action based on the email serviceyou use.
14. Add the To, Subject, and Body text for the email that notifies the recipient that theoptional VMs have been shut down. Use the BudgetName and theNotificationThresholdAmount dynamic content to populate the subject and body



fields.
Azure - Logic app - Send email details
15. Select Save at the top of the Logic App Designer area.


Logic App summary

Here's what your Logic App looks like once you're done. In the most basic of scenarioswhere you don't need any threshold-based orchestration, you could directly call theautomation script from Monitor and skip the Logic App step.

Azure - Logic app - Complete view


When you saved your logic app, a URL was generated that you'll be able to call. You'lluse this URL in the next section of this tutorial.




Create an Azure Monitor Action Group

An action group is a collection of notification preferences that you define. When an alertis triggered, a specific action group can receive the alert by being notified. An Azurealert proactively raises a notification based on specific conditions and provides theopportunity to take action. An alert can use data from multiple sources, includingmetrics and logs.

Action groups are the only endpoint that you'll integrate with your budget. You can setup notifications in a number of channels, but for this scenario you'll focus on the LogicApp you created earlier in this tutorial.

Create an action group in Azure Monitor

When you create the action group, you'll point to the Logic App that you created earlierin this tutorial.

1. If you are not already signed-in to the Azure portal, sign in and select Allservices > Monitor.
2. Select Alerts then select Manage actions.
3. Select Add an action group from the Action groups area.
4. Add and verify the following items:
Action group name
Short name
Subscription
Resource group
Azure - Logic app - Add an action group



5. Within the Add action group pane, add a LogicApp action. Name the actionBudget-BudgetLA. In the Logic App pane, select the Subscription and theResource group. Then, select the Logic app that you created earlier in this tutorial.
6. Select OK to set the Logic App. Then, select OK in the Add action group pane tocreate the action group.



You're done with all the supporting components needed to effectively orchestrate yourbudget. Now all you need to do is create the budget and configure it to use the actiongroup you created.

Create the budget

You can create a budget in the Azure portal using the Budget feature in CostManagement. Or, you can create a budget using REST APIs, PowerShell cmdlets, or usethe CLI. The following procedure uses the REST API. Before calling the REST API, you'llneed an authorization token. To create an authorization token, you can use theARMClient project. The ARMClient allows you to authenticate yourself to the AzureResource Manager and get a token to call the APIs.

Create an authentication token

1. Navigate to the ARMClient project on GitHub.


2. Clone the repo to get a local copy.


3. Open the project in Visual Studio and build it.


4. Once the build is successful, the executable should be in the \bin\debug folder.


5. Run the ARMClient. Open a command prompt and navigate to the \bin\debugfolder from the project root.


6. To sign in and authenticate, enter the following command at the commandprompt:
ARMClient login prod


7. Copy the subscription guid from the output.


8. To copy an authorization token to your clipboard, enter the following command atthe command prompt, but sure to use the copied subscription ID from the stepabove: 
ARMClient token <subscription GUID from previous step>

Once you have completed the step above, you'll see:
Token copied to clipboard successfully.


9. Save the token to be used for steps in the next section of this tutorial.




Create the Budget


Next, you'll configure Postman to create a budget by calling the Azure ConsumptionREST APIs. Postman is an API Development environment. You'll import environment andcollection files into Postman. The collection contains grouped definitions of HTTPrequests that call Azure Consumption REST APIs. The environment file contains variablesthat are used by the collection.

1. Download and open the Postman REST client to execute the REST APIs.


2. In Postman, create a new request.
Postman - Create a new request






3. Save the new request as a collection, so that the new request has nothing on it.
Postman - Save the new request



4. Change the request from a Get to a Put action.


5. Modify the following URL by replacing {subscriptionId} with the Subscription IDthat you used in the previous section of this tutorial. Also, modify the URL toinclude "SampleBudget" as the value for {budgetName}:
https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Consumption/budgets/{budgetName}?api-version=2018-03-31


6. Select the Headers tab within Postman.


7. Add a new Key named "Authorization".





8. Set the Value to the token that was created using the ArmClient at the end of thelast section.


9. Select Body tab within Postman.


10. Select the raw button option.


11. In the textbox, paste in the below sample budget definition, however you mustreplace the subscriptionID, resourcegroupname, and actiongroupname parameterswith your subscription ID, a unique name for your resource group, and the actiongroup name you created in both the URL and the request body:

 { 
"properties": { 
"category": "Cost", 
"amount": 100.00, 
"timeGrain": "Monthly", 
"timePeriod": { 
"startDate": "2018-06-01T00:00:00Z", 
"endDate": "2018-10-31T00:00:00Z" 
}, 
"filters": {}, 
"notifications": { 
"Actual_GreaterThan_80_Percent": { 
"enabled": true, 
"operator": "GreaterThan", 
"threshold": 80, 
"contactEmails": [], 
"contactRoles": [], 
"contactGroups": [ 
"/subscriptions/{subscriptionid}/resourceGroups/{resourcegroupname}/providers/microsoft.insights/actionGroups/{actiongroupname}" 
] 
}, 
"Actual_EqualTo_100_Percent": { 
"operator": "EqualTo", 
"threshold": 100, 
"contactGroups": [ 
"/subscriptions/{subscriptionid}/resourceGroups/{resourcegroupname}/providers/microsoft.insights/actionGroups/{actiongroupname}" 
] 
} 
} 
} 
}
12. Press Send to send the request.





You now have all the pieces you need to call the budgets API. The budgets API referencehas additional details on the specific requests, including:

budgetName - Multiple budgets are supported. Budget names must be unique.
category - Must be either Cost or Usage. The API supports both cost and usagebudgets.
timeGrain - A monthly, quarterly, or yearly budget. The amount resets at the endof the period.
filters - Filters allow you to narrow the budget to a specific set of resources withinthe selected scope. For example, a filter could be a collection of resource groupsfor a subscription level budget.
notifications – Determines the notification details and thresholds. You can set upmultiple thresholds and provide an email address or an action group to receive anotification.


Summary

By using this tutorial, you learned:

How to create an Azure Automation Runbook to stop VMs.
How to create an Azure Logic App that is triggered based on the budget thresholdvalues and call the related runbook with the right parameters.
How to create an Azure Monitor Action Group that was configured to trigger theAzure Logic App when the budget threshold is met.
How to create the budget with the desired thresholds and wire it to the actiongroup.


You now have a fully functional budget for your subscription that will shut down yourVMs when you reach your configured budget thresholds.

Next steps

For more information about Azure billing scenarios, see Billing and costmanagement automation scenarios.



APIs for Azure reservation automation

Article
12/07/2022


Use Azure APIs to programmatically get information for your organization about Azureservice or software reservations.

Find reservation plans to buy

Use the Reservation recommendation API to get recommendations on whichreservations plan to buy based on your organization's usage. For more information, seeReservation Recommendations.

You can also analyze your resource usage by using the Consumption API Usage Detail.
For more information, see Usage Details - List For Billing Period By Billing Account. TheAzure resources that you use consistently are usually the best candidate for areservation.

Buy a reservation

You can purchase Azure reservations and software plans programmatically by usingREST APIs. To learn more, see Reservation Order - Purchase API.

Here's a sample request to purchase by using the REST API:

HTTPPUT 
https://management.azure.com/providers/Microsoft.Capacity/reservationOrders/
<GUID>?api-version=2019-04-01
Request body:

JSON{ 
"sku": { 
"name": "standard_D1" 
}, 
"location": "westus", 
"properties": { 
"reservedResourceType": "VirtualMachines", 
"billingScopeId": "/subscriptions/ed3a1871-612d-abcd-a849-c2542a68be83", 
"term": "P1Y", 
"quantity": "1",

 "displayName": "TestReservationOrder", 
"appliedScopes": null, 
"appliedScopeType": "Shared", 
"reservedResourceProperties": { 
"instanceFlexibility": "On" 
} 
}
}
You can also buy a reservation in the Azure portal. For more information, see thefollowing articles:

Service plans:

Virtual machine
Azure Cosmos DB
SQL Database


Software plans:

SUSE Linux software


Get reservations

If you're an Azure customer with an Enterprise Agreement (EA customer), you can getthe reservations your organization bought by using the Reservation Transactions - List.
For other subscriptions, get the list of reservations you bought and have permissions toview by using the API Reservation Order - List. By default, the account owner or personthat bought the reservation has permissions to view the reservation.

See reservation usage

If you're an EA customer, you can programmatically view how the reservations in yourorganization are being used. For more information, see
Reservation Transactions - List.
For other subscriptions, use the API Reservations Summaries - List By Reservation OrderAnd Reservation.

If you find that your organization's reservations are being under-used:

Make sure the virtual machines that your organization creates match the VM sizethat's on the reservation.
Make sure instance size flexibility is on. For more information, see Managereservations - Change optimize setting for Reserved VM Instances.



Change the scope of reservation to shared so that it applies more broadly. Formore information, see Manage reservations - Change the scope for a reservation.
Exchange the unused quantity. For more information, see Manage reservations.


Give access to reservations

Get the list of all reservations that a user has access to by using the Reservation -
Operation - List API. To give access to a reservation programmatically, see one of thefollowing articles:

Add or remove Azure role assignments using the REST API
Add or remove Azure role assignments using Azure PowerShell
Add or remove Azure role assignments using Azure CLI


Split or merge reservation

After you buy more than one resource instance within a reservation, you may want toassign instances within that reservation to different subscriptions. You can change thereservation scope so that it applies to all subscriptions within the same billing context.
But for cost management or budgeting purposes, you may want to keep the scope as"single subscription" and assign reservation instances to a specific subscription.

To split a reservation, use the API Reservation - Split. You can also split a reservation byusing PowerShell. For more information, see Manage reservations - Split reservation intotwo reservations.

To merge two reservations into one reservation, use the API Reservation - Merge.

Change scope for a reservation

The scope of a reservation can be single subscription, single resource group or allsubscriptions in your billing context. If you set the scope to single subscription or singleresource group, the reservation is matched to running resources in the selectedsubscription. If you delete or move the subscription or the resource group, thereservation will not be utilized. If you set the scope to shared, Azure matches thereservation to resources that run in all the subscriptions within the billing context. Thebilling context is dependent on the subscription you used to buy the reservation. Youcan select the scope at purchase or change it anytime after purchase. For moreinformation, see Manage Reservations - Change the scope.

To change the scope programmatically, use the API Reservation - Update.




Learn more

What are reservations for Azure
Understand how the VM reservation discount is applied
Understand how the SUSE Linux Enterprise software plan discount is applied
Understand how other reservation discounts are applied
Understand reservation usage for your Pay-As-You-Go subscription
Understand reservation usage for your Enterprise enrollment
Windows software costs not included with reservations
Azure Reservations in Partner Center Cloud Solution Provider (CSP) program



Migrate from Azure Enterprise Reporting toMicrosoft Cost Management APIs overview

Article
12/19/2022


This article helps developers that have built custom solutions using the Azure Enterprise Reporting APIsto migrate to Microsoft Cost Management APIs. Service principal support is available in the newer CostManagement APIs and they are still actively being developed. Consider migrating to them instead ofusing the older Azure Enterprise Reporting APIs. The older APIs are being deprecated. This article helpsyou understand the differences between the Azure Enterprise Reporting APIs and the Cost ManagementAPIs, what to expect when you migrate to the Cost Management APIs, and the new capabilities that areavailable with the Cost Management APIs.

API differences

The following information describes the differences between the older Azure Enterprise Reporting APIsand the newer Cost Management APIs.

UseAzure Enterprise Reporting APIsMicrosoft Cost Management APIsAuthenticationAPI key provisioned in the Enterprise Agreement (EA)
portalAzure Active Directory (Azure AD)
Authentication using user tokens orservice principals. Service principalstake the place of API keys.
Scopes andpermissionsAll requests are at the enrollment scope. API Keypermission assignments will determine whether data forthe entire enrollment, a department, or a specific accountis returned. No user authentication.
Users or service principals areassigned access to the enrollment,
department, or account scope.
URI Endpointhttps://consumption.azure.comhttps://management.azure.comDevelopmentstatusIn maintenance mode. On the path to deprecation.In active developmentAvailable APIsLimited to what's currently availableEquivalent APIs are available toreplace each EA API. Additional CostManagement APIs are also available,
including: 
- Budgets
- Alerts
- Exports

Migration checklist

Familiarize yourself with the Azure Resource Manager REST APIs.
Determine which Enterprise Reporting APIs you use and see which Cost Management APIs to moveto at Migrate from Azure Enterprise Reporting to Microsoft Cost Management APIs.
Configure service authorization and authentication for the Cost Management APIs. For moreinformation, see Assign permission to ACM APIs.



Test the APIs and then update any programming code to replace Enterprise Reporting API callswith Cost Management API calls.
Update error handling to use new error codes. Some considerations include:
Cost Management APIs have a timeout period of 60 seconds.
Cost Management APIs have rate limiting in place. This results in a 429 throttling error if ratesare exceeded. Build your solutions so that you don't make too many API calls in a short timeperiod.



Review the other Cost Management APIs available through Azure Resource Manager and assess foruse later. For more information, see Migrate from Azure Enterprise Reporting to Microsoft CostManagement APIs.


Enterprise Reporting API mapping to new CostManagement APIs

Use the following information to identify the Enterprise Reporting APIs that you currently use and thereplacement Cost Management API to use instead.

ScenarioEnterprise Reporting APIsCost Management APIsMigrate from EAUsage Details APIs/usagedetails/download
/usagedetails/submit
/usagedetails
/usagedetailsbycustomdateUse Microsoft.CostManagement/Exports for all recurring dataingestion workloads. 
Use the Cost Details report for small on-demand datasets.
Migrate from EABalance SummaryAPIs/balancesummaryMicrosoft.Consumption/balancesMigrate from EAPrice Sheet APIs/pricesheetFor negotiated prices, useMicrosoft.Consumption/pricesheets/default
For retail prices, use Retail Prices APIMigrate from EAReserved InstanceUsage Details API/reservationdetailsMicrosoft.CostManagement/generateReservationDetailsReportMigrate from EAReserved InstanceUsage SummaryAPIs/reservationsummariesMicrosoft.Consumption/reservationSummariesMigrate from EAReserved InstanceRecommendationsAPIs/SharedReservationRecommendations
/SingleReservationRecommendationsMicrosoft.Consumption/reservationRecommendationsMigrate from EAReserved InstanceCharges APIs/reservationchargesMicrosoft.Consumption/reservationTransactions

Use additional Cost Management APIs


After you've migrated to the Cost Management APIs for your existing reporting scenarios, you can usemany other APIs, too. The APIs are also available through Azure Resource Manager and can beautomated using service principal-based authentication. Here's a quick summary of the new capabilitiesthat you can use.

Budgets - Use to set thresholds to proactively monitor your costs, alert relevant stakeholders, andautomate actions in response to threshold breaches.
Alerts - Use to view alert information including, but not limited to, budget alerts, invoice alerts,
credit alerts, and quota alerts.
Exports - Use to schedule recurring data export of your charges to an Azure Storage account ofyour choice. It's the recommended solution for customers with a large Azure presence who want toanalyze their data and use it in their own internal systems.


Next steps

Familiarize yourself with the Azure Resource Manager REST APIs.
If needed, determine which Enterprise Reporting APIs you use and see which Cost ManagementAPIs to move to at Migrate from Azure Enterprise Reporting to Microsoft Cost Management APIs.
If you're not already using Azure Resource Manager APIs, register your client app with Azure AD.
If needed, update any of your programming code to use Azure AD authentication with your serviceprincipal.



Migrate from EA Usage Details APIs

Article
07/18/2022


EA customers who were previously using the Enterprise Reporting APIs behind theconsumption.azure.com endpoint to obtain usage details and marketplace charges needto migrate to new and improved solutions. Instructions are outlined below along withcontract differences between the old API and the new solutions.

The dataset is referred to as cost details instead of usage details.

New solutions generally available

The following table provides a summary of the migration destinations that are availablealong with a summary of what to consider when choosing which solution is best for you.

SolutionDescriptionConsiderationsOnboardinginfoExportsRecurring datadumps to storageon a schedule- The most scalable solution for yourworkloads.
- Can be configured to use file partitioning forbigger datasets.
- Great for establishing and growing a costdataset that can be integrated with your ownqueryable data stores.
-Requires access to a storage account that canhold the data.
- Configure inAzure portal
AutomateExport creationwith the API
- Export APIReferenceCostDetailsAPIOn demanddownload- Useful for small cost datasets.
- Useful for scenarios when Exports to Azurestorage aren't feasible due to security ormanageability concerns.
- Get smallcost datasetson demand
- Cost DetailsAPI

Generally we recommend using Exports if you have ongoing data ingestion needsand/or a large monthly cost details dataset. For more information, see Ingest costdetails data. If you need additional information to help you make a decision for yourworkload, see Choose a cost details solution.

Assign permissions to an SPN to call the APIs

If you're looking to call either the Exports or Cost Details APIs programmatically, you'llneed to configure a Service Principal with the correct permission. For more information,


see Assign permissions to ACM APIs.

Avoid the Microsoft Consumption Usage Details API

The Consumption Usage Details API is another endpoint that currently supports EAcustomers. Don't migrate to this API. Migrate to either Exports or the Cost Details API, asoutlined earlier in this document. The Consumption Usage Details API will bedeprecated in the future and is located behind the endpoint below.

HTTPGET 
https://management.azure.com/{scope}/providers/Microsoft.Consumption/usageDetails?api-version=2021-10-01
This API is a synchronous endpoint and will be unable to scale as both your spendingand the size of your month over month cost dataset increases. If you're currently usingthe Consumption Usage Details API, we recommend migrating off of it to either Exportsof the Cost Details API as soon as possible. A formal deprecation announcement will bemade at a future date and a timeline for retirement will be provided. To learn moreabout migrating away from Consumption Usage Details, see Migrate from ConsumptionUsage Details API.

Migration benefits

Our new solutions provide many benefits over the EA Reporting Usage Details APIs.
Here's a summary:

Security and stability - New solutions require Service Principal and/or user tokensin order to access data. They're more secure than the API keys that are used forauthenticating to the EA Reporting APIs. Keys in these legacy APIs are valid for sixmonths and can expose sensitive financial data if leaked. Additionally, if keys aren'trenewed and integrated into workloads prior to their six month expiry data accessis revoked. This breaks customer workloads.
Scalability - The EA Reporting APIs aren't built to scale well as your Azure usageincreases. The usage details dataset can get exceedingly large as you deploy moreresources into the cloud. The new solutions are asynchronous and have extensiveinfrastructure enhancements behind them to ensure successful downloads for anysize dataset.
Single dataset for all usage details - Azure and Azure Marketplace usage detailshave been merged into one dataset in the new solutions. The single dataset



reduces the number of APIs that you need to call to see all your charges.
Purchase amortization - Customers who purchase Reservations can see anAmortized view of their costs using the new solutions.
Schema consistency - Each solution that is available provides files with matchingfields. It allows you to easily move between solutions based on your scenario.
Cost Allocation integration - Enterprise Agreement and Microsoft CustomerAgreement customers can use the new solution to view charges in relation to thecost allocation rules that they've configured. For more information about costallocation, see Allocate costs.
Go forward improvements - The new solutions are being actively developedmoving forward. They'll receive all new features as they're released.


Enterprise Usage APIs to migrate off

The table below summarizes the different APIs that you may be using today to ingestcost details data. If you're using one of the APIs below, you'll need to migrate to one ofthe new solutions outlined above. All APIs below are behind thehttps://consumption.azure.com endpoint.

EndpointAPIComments/v3/enrollments/{enrollmentNumber}/usagedetails/download?billingPeriod=
{billingPeriod}
- API method:
GET
-
Synchronous(non polling)
- Data format:
CSV/v3/enrollments/{enrollmentNumber}/usagedetails/download?startTime=2017-01-
01&endTime=2017-01-10- API method:
GET 
-
Synchronous(non polling)
- Data format:
CSV/v3/enrollments/{enrollmentNumber}/usagedetails- API method:
GET
-
Synchronous(non polling)
- Data format:
JSON


EndpointAPIComments/v3/enrollments/{enrollmentNumber}/billingPeriods/{billingPeriod}/usagedetails- API method:
GET
-
Synchronous(non polling)
- Data format:
JSON/v3/enrollments/{enrollmentNumber}/usagedetailsbycustomdate?startTime=2017-01-
01&endTime=2017-01-10- API method:
GET
-
Synchronous(non polling)
- Data format:
JSON/v3/enrollments/{enrollmentNumber}/usagedetails/submit?billingPeriod=
{billingPeriod}
- API method:
POST
-
Asynchronous(pollingbased)
- Data format:
CSV/v3/enrollments/{enrollmentNumber}/usagedetails/submit?startTime=2017-04-
01&endTime=2017-04-10- API method:
POST
-
Asynchronous(pollingbased)
- Data format:
CSV

Enterprise Marketplace Store Charge APIs tomigrate off

In addition to the usage details APIs outlined above, you'll need to migrate off theEnterprise Marketplace Store Charge APIs. All Azure and Marketplace charges have beenmerged into a single file that is available through the new solutions. You can identifywhich charges are Azure versus Marketplace charges by using the PublisherType fieldthat is available in the new dataset. The table below outlines the applicable APIs. All ofthe following APIs are behind the https://consumption.azure.com endpoint.


EndpointAPIComments/v3/enrollments/{enrollmentNumber}/marketplacecharges- APImethod: GET
-
Synchronous(non polling)
- Dataformat:
JSON/v3/enrollments/{enrollmentNumber}/billingPeriods/{billingPeriod}/marketplacecharges- APImethod: GET
-
Synchronous(non polling)
- Dataformat:
JSON/v3/enrollments/{enrollmentNumber}/marketplacechargesbycustomdate?startTime=2017-01-
01&endTime=2017-01-10- APImethod: GET
-
Synchronous(non polling)
- Dataformat:
JSON

Data field mapping

The table below provides a summary of the old fields available in the solutions you'recurrently using along with the field to use in the new solutions.

Old fieldNew fieldCommentsserviceNameMeterCategoryserviceTierMeterSubCategorylocationResourceLocationchargesBilledSeparatelyisAzureCreditEligibleThe properties are opposites. IfisAzureCreditEnabled is true,
ChargesBilledSeparately would be false.
partNumberPartNumber


Old fieldNew fieldCommentsresourceGuidMeterIdValues vary. resourceGuid is a GUID value.
meterId is a long number.
offerIdOfferIdcostCostInBillingCurrencyaccountIdAccountIdresourceLocationIdNot available.
consumedServiceIdConsumedServiceconsumedServiceId only provides a numbervalue. ConsumedService provides the name ofthe service.
departmentIdInvoiceSectionIdaccountOwnerEmailAccountOwnerIdaccountNameAccountNamesubscriptionIdSubscriptionIdsubscriptionGuidSubscriptionIdsubscriptionNameSubscriptionNamedateDateproductProductNamemeterIdMeterIdmeterCategoryMeterCategorymeterSubCategoryMeterSubCategorymeterRegionMeterRegionmeterNameMeterNameconsumedQuantityQuantityresourceRateEffectivePriceresourceLocationResourceLocationconsumedServiceConsumedServiceinstanceIdResourceId


Old fieldNew fieldCommentsserviceInfo1ServiceInfo1serviceInfo2ServiceInfo2additionalInfoAdditionalInfotagsTagsstoreServiceIdentifierNot available.
departmentNameInvoiceSectionNamecostCenterCostCenterunitOfMeasureUnitOfMeasureresourceGroupResourceGroupisRecurringChargeWhere applicable, use the Frequency and Termfields moving forward.
extendedCostCostInBillingCurrencyplanNamePlanNamepublisherNamePublisherNameorderNumberNot available.
usageStartDateDateusageEndDateDate

Next steps

Read the Migrate from EA Reporting to Azure Resource Manager APIs overviewarticle.



Migrate from EA Balance Summary API

Article
07/17/2022


EA customers who were previously using the Enterprise Reportingconsumption.azure.com API to get their balance summary need to migrate to areplacement Azure Resource Manager API. Instructions to do this are outlined belowalong with any contract differences between the old API and the new API.

Assign permissions to an SPN to call the API

Before calling the API, you need to configure a Service Principal with the correctpermission. You use the service principal to call the API. For more information, seeAssign permissions to ACM APIs.

Call the Balance Summary API

Use the following request URIs when calling the new Balance Summary API. Yourenrollment number should be used as the billingAccountId.

Supported requests

Get for Enrollment

HTTPhttps://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/balances?api-version=2019-
10-01
Response body changes

Old response body:

JSON{ 
"id": "enrollments/100/billingperiods/201507/balancesummaries", 
"billingPeriodId": 201507, 
"currencyCode": "USD", 
"beginningBalance": 0, 
"endingBalance": 1.1, 
"newPurchases": 1,

 "adjustments": 1.1, 
"utilized": 1.1, 
"serviceOverage": 1, 
"chargesBilledSeparately": 1, 
"totalOverage": 1, 
"totalUsage": 1.1, 
"azureMarketplaceServiceCharges": 1, 
"newPurchasesDetails": [ 
{ 
"name": "", 
"value": 1 
} 
], 
"adjustmentDetails": [ 
{ 
"name": "Promo Credit", 
"value": 1.1 
}, 
{ 
"name": "SIE Credit", 
"value": 1 
} 
]
}
New response body:

The same data is now available in the properties field of the new API response. Theremight be minor changes to the spelling on some of the field names.

JSON{ 
"id": 
"/providers/Microsoft.Billing/billingAccounts/123456/providers/Microsoft.Billing/billingPeriods/201702/providers/Microsoft.Consumption/balances/balanceId1", 
"name": "balanceId1", 
"type": "Microsoft.Consumption/balances", 
"properties": { 
"currency": "USD ", 
"beginningBalance": 3396469.19, 
"endingBalance": 2922371.02, 
"newPurchases": 0, 
"adjustments": 0, 
"utilized": 474098.17, 
"serviceOverage": 0, 
"chargesBilledSeparately": 0, 
"totalOverage": 0, 
"totalUsage": 474098.17, 
"azureMarketplaceServiceCharges": 609.82, 
"billingFrequency": "Month", 
"priceHidden": false,

 "newPurchasesDetails": [ 
{ 
"name": "Promo Purchase", 
"value": 1 
} 
], 
"adjustmentDetails": [ 
{ 
"name": "Promo Credit", 
"value": 1.1 
}, 
{ 
"name": "SIE Credit", 
"value": 1 
} 
] 
}
}
Next steps

Read the Migrate from EA Reporting to ARM APIs – Overview article.



Migrate from EA Price Sheet API

Article
04/06/2023


EA customers who were previously using the Enterprise Reportingconsumption.azure.com API to get their price sheet need to migrate to a replacementAzure Resource Manager API. Instructions to do this are outlined below along with anycontract differences between the old API and the new API.

Assign permissions to an SPN to call the API

Before calling the API, you need to configure a Service Principal with the correctpermission. You use the service principal to call the API. For more information, seeAssign permissions to ACM APIs.

Call the Price Sheet API

Use the following request URIs when calling the new Price Sheet API.

Supported requests

You can call the API using the following scopes:

Enrollment: providers/Microsoft.Billing/billingAccounts/{billingAccountId}
Subscription: subscriptions/{subscriptionId}


Get for current Billing Period

HTTPhttps://management.azure.com/{scope}/providers/Microsoft.Consumption/pricesheets/default?api-version=2019-10-01 
Get for specified Billing Period

HTTPhttps://management.azure.com/{scope}/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/pricesheets/default?api-version=2019-10-01 
Response body changes


Old response:

JSON[ 
{ 
"id": 
"enrollments/57354989/billingperiods/201601/products/343/pricesheets", 
"billingPeriodId": "201704", 
"meterId": "dc210ecb-97e8-4522-8134-2385494233c0", 
"meterName": "A1 VM", 
"unitOfMeasure": "100 Hours", 
"includedQuantity": 0, 
"partNumber": "N7H-00015", 
"unitPrice": 0.00, 
"currencyCode": "USD" 
}, 
{ 
"id": 
"enrollments/57354989/billingperiods/201601/products/2884/pricesheets", 
"billingPeriodId": "201404", 
"meterId": "dc210ecb-97e8-4522-8134-5385494233c0", 
"meterName": "Locally Redundant Storage Premium Storage - 
Snapshots - AU East", 
"unitOfMeasure": "100 GB", 
"includedQuantity": 0, 
"partNumber": "N9H-00402", 
"unitPrice": 0.00, 
"currencyCode": "USD" 
}, 
... 
]
New response:

Old data is now in the pricesheets field of the new API response. Meter detailsinformation is also provided.

JSON{ 
"id": "/subscriptions/00000000-0000-0000-0000-
000000000000/providers/Microsoft.Billing/billingPeriods/201702/providers/Microsoft.Consumption/pricesheets/default", 
"name": "default", 
"type": "Microsoft.Consumption/pricesheets", 
"properties": { 
"nextLink": "https://management.azure.com/subscriptions/00000000-0000-
0000-0000-000000000000/providers/microsoft.consumption/pricesheets/default?
api-version=2018-01-
31&$skiptoken=AQAAAA%3D%3D&$expand=properties/pricesheets/meterDetails", 
"pricesheets": [

 { 
"billingPeriodId": "/subscriptions/00000000-0000-0000-0000-
000000000000/providers/Microsoft.Billing/billingPeriods/201702", 
"meterId": "00000000-0000-0000-0000-000000000000", 
"unitOfMeasure": "100 Hours", 
"includedQuantity": 100, 
"partNumber": "XX-11110", 
"unitPrice": 0.00000, 
"currencyCode": "EUR", 
"offerId": "OfferId 1", 
"meterDetails": { 
"meterName": "Data Transfer Out (GB)", 
"meterCategory": "Networking", 
"unit": "GB", 
"meterLocation": "Zone 2", 
"totalIncludedQuantity": 0, 
"pretaxStandardRate": 0.000 
} 
} 
] 
}
}
Next steps

Read the Migrate from EA Reporting to ARM APIs overview article.



Migrate from EA Reserved InstanceUsage Details API

Article
07/17/2022


EA customers who were previously using the Enterprise Reportingconsumption.azure.com API to obtain reserved instance usage details need to migrateto a parity Azure Resource Manager API. Instructions to do this are outlined below alongwith any contract differences between the old API and the new API.

Assign permissions to an SPN to call the API

Before calling the API, you need to configure a Service Principal with the correctpermission. You use the service principal to call the API. For more information, seeAssign permissions to ACM APIs.

Call the Reserved instance usage details API

Microsoft isn't updating the older synchronous-based Reservation Details APIs. Werecommend at you move to the newer SPN-supported asynchronous API call pattern asa part of the migration. Asynchronous requests better handle large amounts of data andreduce timeout errors.

Supported requests

Use the following request URIs when calling the new Asynchronous Reservation DetailsAPI. Your enrollment number should be used as the billingAccountId. You can call theAPI with the following scopes:

Enrollment: providers/Microsoft.Billing/billingAccounts/{billingAccountId}


Sample request to generate a reservation details report

HTTPPOST 
https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/generateReservationDetailsReport?startDate={startDate}&endDate={endDate}&api-version=2019-11-01 



Sample request to poll report generation status

HTTPGET 
https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/reservationDetailsOperationResults/{operationId}?api-version=2019-11-01 
Sample poll response

JSON{ 
"status": "Completed", 
"properties": { 
"reportUrl": 
"https://storage.blob.core.windows.net/details/20200911/00000000-0000-0000-
0000-000000000000?sv=2016-05-
31&sr=b&sig=jep8HT2aphfUkyERRZa5LRfd9RPzjXbzB%2F9TNiQ", 
"validUntil": "2020-09-12T02:56:55.5021869Z" 
}
}
Response body changes

The response of the older synchronous based Reservation Details API is below.

Old response:

JSON{ 
"reservationOrderId": "00000000-0000-0000-0000-000000000000", 
"reservationId": "00000000-0000-0000-0000-000000000000", 
"usageDate": "2018-02-01T00:00:00", 
"skuName": "Standard_F2s", 
"instanceId": "/subscriptions/00000000-0000-0000-0000-
000000000000/resourcegroups/resourvegroup1/providers/microsoft.compute/virtualmachines/VM1", 
"totalReservedQuantity": 18.000000000000000, 
"reservedHours": 432.000000000000000, 
"usedHours": 400.000000000000000
}
New response:


The new API creates a CSV file for you. See the following file fields.

Old propertyNew propertyNotesInstanceFlexibilityGroupNew property for instance flexibility.
InstanceFlexibilityRatioNew property for instance flexibility.
instanceIdInstanceNameKindIt's a new property. Value is None,
Reservation, or IncludedQuantity.
reservationIdReservationIdreservationOrderIdReservationOrderIdreservedHoursReservedHoursskuNameSkuNametotalReservedQuantityTotalReservedQuantityusageDateUsageDateusedHoursUsedHours

Next steps

Read the Migrate from EA Reporting to ARM APIs overview article.



Migrate from EA Reserved InstanceUsage Summary API

Article
07/17/2022


EA customers who were previously using the Enterprise Reportingconsumption.azure.com API to obtain reserved instance usage summaries need tomigrate to a parity Azure Resource Manager API. Instructions to do this are outlinedbelow along with any contract differences between the old API and the new API.

Assign permissions to an SPN to call the API

Before calling the API, you need to configure a Service Principal with the correctpermission. You use the service principal to call the API. For more information, seeAssign permissions to ACM APIs.

Call the Reserved Instance Usage Summary API

Use the following request URIs to call the new Reservation Summaries API.

Supported requests

Call the API with the following scopes:

Enrollment: providers/Microsoft.Billing/billingAccounts/{billingAccountId}


Get Reservation Summary Daily

HTTPhttps://management.azure.com/{scope}/Microsoft.Consumption/reservationSummaries?grain=daily&$filter=properties/usageDate ge 2017-10-01 AND 
properties/usageDate le 2017-11-20&api-version=2019-10-01 
Get Reservation Summary Monthly

HTTPhttps://management.azure.com/{scope}/Microsoft.Consumption/reservationSummaries?grain=daily&$filter=properties/usageDate ge 2017-10-01 AND 
properties/usageDate le 2017-11-20&api-version=2019-10-01 



Response body changes

Old response:

JSON[ 
{ 
"reservationOrderId": "00000000-0000-0000-0000-000000000000", 
"reservationId": "00000000-0000-0000-0000-000000000000", 
"skuName": "Standard_F1s", 
"reservedHours": 24, 
"usageDate": "2018-05-01T00:00:00", 
"usedHours": 23, 
"minUtilizationPercentage": 0, 
"avgUtilizationPercentage": 95.83, 
"maxUtilizationPercentage": 100 
}
]
New response:

JSON{ 
"value": [ 
{ 
"id": 
"/providers/Microsoft.Billing/billingAccounts/12345/providers/Microsoft.Consumption/reservationSummaries/reservationSummaries_Id1", 
"name": "reservationSummaries_Id1", 
"type": "Microsoft.Consumption/reservationSummaries", 
"tags": null, 
"properties": { 
"reservationOrderId": "00000000-0000-0000-0000-000000000000", 
"reservationId": "00000000-0000-0000-0000-000000000000", 
"skuName": "Standard_B1s", 
"reservedHours": 720, 
"usageDate": "2018-09-01T00:00:00-07:00", 
"usedHours": 0, 
"minUtilizationPercentage": 0, 
"avgUtilizationPercentage": 0, 
"maxUtilizationPercentage": 0 
} 
} 
]
}
Next steps


Read the Migrate from EA Reporting to ARM APIs overview article.



Migrate from EA Reserved InstanceRecommendations API

Article
07/17/2022


EA customers who were previously using the Enterprise Reportingconsumption.azure.com API to obtain reserved instance recommendations need tomigrate to a parity Azure Resource Manager API. Instructions to do this are outlinedbelow along with any contract differences between the old API and the new API.

Assign permissions to an SPN to call the API

Before calling the API, you need to configure a Service Principal with the correctpermission. You use the service principal to call the API. For more information, seeAssign permissions to ACM APIs.

Call the reserved instance recommendations API

Use the following request URIs to call the new Reservation Recommendations API.

Supported requests

Call the API with the following scopes:

Enrollment: providers/Microsoft.Billing/billingAccounts/{billingAccountId}
Subscription: subscriptions/{subscriptionId}
Resource Groups:
subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}


Get Recommendations

Both the shared and the single scope recommendations are available through this API.
You can also filter on the scope as an optional API parameter.

HTTPhttps://management.azure.com/providers/Microsoft.Billing/billingAccounts/123456/providers/Microsoft.Consumption/reservationRecommendations?api-
version=2019-10-01 



Response body changes

Recommendations for Shared and Single scopes are combined into one API.

Old response:

JSON[{ 
"subscriptionId": "1111111-1111-1111-1111-111111111111", 
"lookBackPeriod": "Last7Days", 
"meterId": "2e3c2132-1398-43d2-ad45-1d77f6574933", 
"skuName": "Standard_DS1_v2", 
"term": "P1Y", 
"region": "westus", 
"costWithNoRI": 186.27634908960002, 
"recommendedQuantity": 9, 
"totalCostWithRI": 143.12931642978083, 
"netSavings": 43.147032659819189, 
"firstUsageDate": "2018-02-19T00:00:00"
}
]
New response:

JSON{ 
"value": [ 
{ 
"id": 
"billingAccount/123456/providers/Microsoft.Consumption/reservationRecommendations/00000000-0000-0000-0000-000000000000", 
"name": "00000000-0000-0000-0000-000000000000", 
"type": "Microsoft.Consumption/reservationRecommendations", 
"location": "westus", 
"sku": "Standard_DS1_v2", 
"kind": "legacy", 
"properties": { 
"meterId": "00000000-0000-0000-0000-000000000000", 
"term": "P1Y", 
"costWithNoReservedInstances": 12.0785105, 
"recommendedQuantity": 1, 
"totalCostWithReservedInstances": 11.4899644807748, 
"netSavings": 0.588546019225182, 
"firstUsageDate": "2019-07-07T00:00:00-07:00", 
"scope": "Shared", 
"lookBackPeriod": "Last7Days", 
"instanceFlexibilityRatio": 1, 
"instanceFlexibilityGroup": "DSv2 Series", 
"normalizedSize": "Standard_DS1_v2", 
"recommendedQuantityNormalized": 1,

 "skuProperties": [ 
{ 
"name": "Cores", 
"value": "1" 
}, 
{ 
"name": "Ram", 
"value": "1" 
} 
] 
} 
}, 
]
}
Next steps

Read the Migrate from EA Reporting to ARM APIs overview article.



Migrate from EA Reserved InstanceCharges API

Article
07/17/2022


EA customers who were previously using the Enterprise Reportingconsumption.azure.com API to obtain reserved instance charges need to migrate to aparity Azure Resource Manager API. Instructions to do this are outlined below alongwith any contract differences between the old API and the new API.

Assign permissions to an SPN to call the API

Before calling the API, you need to configure a Service Principal with the correctpermission. You use the service principal to call the API. For more information, seeAssign permissions to ACM APIs.

Call the Reserved Instance Charges API

Use the following request URIs to call the new Reserved Instance Charges API.

Supported requests

Get Reservation Charges by Date Range

HTTPhttps://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/reservationTransactions?
$filter=properties/eventDate+ge+2020-05-20+AND+properties/eventDate+le+2020-
05-30&api-version=2019-10-01 
Response body changes

Old response:

JSON[ 
{ 
"purchasingEnrollment": "string", 
"armSkuName": "Standard_F1s", 
"term": "P1Y",

 "region": "eastus", 
"PurchasingsubscriptionGuid": "00000000-0000-0000-0000-
000000000000", 
"PurchasingsubscriptionName": "string", 
"accountName": "string", 
"accountOwnerEmail": "string", 
"departmentName": "string", 
"costCenter": "", 
"currentEnrollment": "string", 
"eventDate": "string", 
"reservationOrderId": "00000000-0000-0000-0000-000000000000", 
"description": "Standard_F1s eastus 1 Year", 
"eventType": "Purchase", 
"quantity": int, 
"amount": double, 
"currency": "string", 
"reservationOrderName": "string" 
}
]
New response:

JSON{ 
"value": [ 
{ 
"id": 
"/billingAccounts/123456/providers/Microsoft.Consumption/reservationtransactions/201909091919", 
"name": "201909091919", 
"type": "Microsoft.Consumption/reservationTransactions", 
"tags": {}, 
"properties": { 
"eventDate": "2019-09-09T19:19:04Z", 
"reservationOrderId": "00000000-0000-0000-0000-000000000000", 
"description": "Standard_DS1_v2 westus 1 Year", 
"eventType": "Cancel", 
"quantity": 1, 
"amount": -21, 
"currency": "USD", 
"reservationOrderName": "Transaction-DS1_v2", 
"purchasingEnrollment": "123456", 
"armSkuName": "Standard_DS1_v2", 
"term": "P1Y", 
"region": "westus", 
"purchasingSubscriptionGuid": "11111111-1111-1111-1111-11111111111", 
"purchasingSubscriptionName": "Infrastructure Subscription", 
"accountName": "Microsoft Infrastructure", 
"accountOwnerEmail": "admin@microsoft.com", 
"departmentName": "Unassigned", 
"costCenter": "", 
"currentEnrollment": "123456",

 "billingFrequency": "recurring" 
} 
}, 
]
}
Next steps

Read the Migrate from EA Reporting to ARM APIs overview article.



Migrate from Enterprise Agreement to Microsoft CustomerAgreement APIs

Article
09/21/2022


This article helps you understand the data structure, API, and other system integration differences between Enterprise Agreement (EA) andMicrosoft Customer Agreement (MCA) accounts. Cost Management supports APIs for both account types. Review the Setup billing accountfor Microsoft Customer Agreement article before continuing.

Organizations with an existing EA account should review this article when they set up an MCA account. Previously, renewing an EA accountrequired some minimal work to move from an old enrollment to a new one. However, migrating to an MCA account requires extra effort.
Extra effort is because of changes in the underlying billing subsystem, which affect all cost-related APIs and service offerings.

MCA APIs and integration

MCA APIs and new integration allow you to:

Have complete API availability through native Azure APIs.
Configure multiple invoices in a single billing account.
Access a combined API with Azure service usage, third-party Marketplace usage, and Marketplace purchases.
View costs across billing profiles (the same as enrollments) using Cost Management.
Access new APIs to show costs, get notified when costs exceed predefined thresholds, and export raw data automatically.


Migration checklist

The following items help you transition to MCA APIs.

Familiarize yourself with the new Microsoft Customer Agreement billing account.
Determine which APIs you use and see which ones are replaced in the following section.
Familiarize yourself with Azure Resource Manager REST APIs.
If you're not already using Azure Resource Manager APIs, register your client app with Azure AD.
Grant the application that was created during Azure AD app registration read access to the billing account using Access control (IAM).
Update any programming code to use Azure AD authentication.
Update any programming code to replace EA API calls with MCA API calls.
Update error handling to use new error codes.
Review other integration offerings like Power BI for other needed action.


EA APIs replaced with MCA APIs

EA APIs use an API key for authentication and authorization. MCA APIs use Azure AD authentication.

PurposeEA APIMCA APIBalance andcredits/balancesummaryMicrosoft.Billing/billingAccounts/billingProfiles/availableBalanceussUsage (JSON)/usagedetails/usagedetailsbycustomdateChoose a cost details solutionUsage (CSV)/usagedetails/download/usagedetails/submitChoose a cost details solutionMarketplaceUsage (CSV)
/marketplacecharges/marketplacechargesbycustomdateChoose a cost details solutionBilling periods/billingperiodsMicrosoft.Billing/billingAccounts/billingProfiles/invoicesPrice sheet/pricesheetMicrosoft.Billing/billingAccounts/billingProfiles/pricesheet/default/dMicrosoft.Billing/billingAccounts/…/billingProfiles/…/invoices/… /priformat=json|csvMicrosoft.Billing/billingAccounts/../billingProfiles/../providers/MicroReservationpurchases/reservationchargesMicrosoft.Billing/billingAccounts/billingProfiles/transactionsReservationrecommendations/SharedReservationRecommendations/SingleReservationRecommendationsMicrosoft.Consumption/reservationRecommendations


PurposeEA APIMCA APIReservation usage/reservationdetails/reservationsummariesMicrosoft.Consumption/reservationDetailsMicrosoft.Consumption/r

¹ Azure service and third-party Marketplace usage are available with the Usage Details API.

The following APIs are available to MCA billing accounts:

PurposeMicrosoft Customer Agreement (MCA) APIBilling accounts²Microsoft.Billing/billingAccountsBilling profiles²Microsoft.Billing/billingAccounts/billingProfilesInvoice sections²Microsoft.Billing/billingAccounts/invoiceSectionsInvoicesMicrosoft.Billing/billingAccounts/billingProfiles/invoicesBilling subscriptions{scope}/billingSubscriptions

² APIs return lists of objects, which are scopes, where Cost Management experiences in the Azure portal and APIs operate. For moreinformation about Cost Management scopes, see Understand and work with scopes.

If you use any existing EA APIs, you need to update them to support MCA billing accounts. The following table shows other integrationchanges:

PurposeOld offeringNew offeringPower BIMicrosoft Consumption Insights content pack and connectorAzure Consumption Insights connector

APIs to get balance and credits

The Get Balance Summary API gives you a monthly summary of:

Balances
New purchases
Azure Marketplace service charges
Adjustments
Service overage charges


All Consumption APIs are replaced by native Azure APIs that use Azure AD for authentication and authorization. For more informationabout calling Azure REST APIs, see Getting started with REST.

The Get Balance Summary API is replaced by the Microsoft.Billing/billingAccounts/billingProfiles/availableBalance API.

To get available balances with the Available Balance API:

MethodRequest URIGEThttps://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/availableBalances?
api-version=2018-11-01-preview

APIs to get cost and usage

Get a daily breakdown of costs from Azure service usage, third-party Marketplace usage, and other Marketplace purchases with thefollowing APIs. The following separate APIs were merged for Azure services and third-party Marketplace usage. The old APIs are replacedby either Exports or the Cost Details API. To choose the solution that's right for you, see Choose a cost details solution. Both solutionsprovide the same Cost Details file and have marketplace purchases in the data, which were previously only shown in the balance summaryto date.

Get usage detail/download
Get usage detail/submit
Get usage detail/usagedetails
Get usage detail/usagedetailsbycustomdate
Get marketplace store charge/marketplacecharges
Get marketplace store charge/marketplacechargesbycustomdate



Exports and the Cost Details API, as with all Cost Management APIs, are available at multiple scopes. For invoiced costs, as you wouldtraditionally receive at an enrollment level, use the billing profile scope. For more information about Cost Management scopes, seeUnderstand and work with scopes.

TypeID formatBilling account/Microsoft.Billing/billingAccounts/{billingAccountId}
Billing profile/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}
Subscription/subscriptions/{subscriptionId}
Resource group/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}

Some property names have changed in the new Cost Details dataset available through Exports and Cost Details API. The following tableshows corresponding properties.

Old propertyNew propertyNotesAccountIdN/AThe subscription creator isn't tracked. Use invoiceSectionId (same asdepartmentId).
AccountNameAccountOwnerId andAccountOwnerEmailN/AThe subscription creator isn't tracked. Use invoiceSectionName (same asdepartmentName).
AdditionalInfoadditionalInfoChargesBilledSeparatelyisAzureCreditEligibleThe properties are opposites. If isAzureCreditEnabled is true,
ChargesBilledSeparately would be false.
ConsumedQuantityquantityConsumedServiceconsumedServiceExact string values might differ.
ConsumedServiceIdNoneCostCentercostCenterDate and usageStartDatedateDayNoneParses day from date.
DepartmentIdinvoiceSectionIdExact values differ.
DepartmentNameinvoiceSectionNameExact string values might differ. Configure invoice sections to match departments,
if needed.
ExtendedCost and CostcostInBillingCurrencyInstanceIdresourceIdIs Recurring ChargeNoneLocationlocationMeterCategorymeterCategoryExact string values might differ.
MeterIdmeterIdExact string values differ.
MeterNamemeterNameExact string values might differ.
MeterRegionmeterRegionExact string values might differ.
MeterSubCategorymeterSubCategoryExact string values might differ.
MonthNoneParses month from date.
Offer NameNoneUse publisherName and productOrderName.
OfferIDNoneOrder NumberNonePartNumberNoneUse meterId and productOrderName to uniquely identify prices.
Plan NameproductOrderNameProductProduct


Old propertyNew propertyNotesProductIdproductIdExact string values differ.
Publisher NamepublisherNameResourceGroupresourceGroupNameResourceGuidmeterIdExact string values differ.
ResourceLocationresourceLocationResourceLocationIdNoneResourceRateeffectivePriceServiceAdministratorIdN/AServiceInfo1serviceInfo1ServiceInfo2serviceInfo2ServiceNamemeterCategoryExact string values might differ.
ServiceTiermeterSubCategoryExact string values might differ.
StoreServiceIdentifierN/ASubscriptionGuidsubscriptionIdSubscriptionIdsubscriptionIdSubscriptionNamesubscriptionNameTagstagsThe tags property applies to the root object, not to the properties nestedproperty.
UnitOfMeasureunitOfMeasureExact string values differ.
usageEndDatedateYearNoneParses year from date.
(new)billingCurrencyCurrency used for the charge.
(new)billingProfileIdUnique ID for the billing profile (same as enrollment).
(new)billingProfileNameName of the billing profile (same as enrollment).
(new)chargeTypeUse to differentiate Azure service usage, Marketplace usage, and purchases.
(new)invoiceIdUnique ID for the invoice. Empty for the current, open month.
(new)publisherTypeType of publisher for purchases. Empty for usage.
(new)serviceFamilyType of purchase. Empty for usage.
(new)servicePeriodEndDateEnd date for the purchased service.
(new)servicePeriodStartDateStart date for the purchased service.

Billing Periods API replaced by Invoices API

MCA billing accounts don't use billing periods. Instead, they use invoices to scope costs to specific billing periods. The Billing Periods API isreplaced by the Invoices API. All Consumption APIs are replaced by native Azure APIs that use Azure AD for authentication andauthorization. For more information about calling Azure REST APIs, see Getting started with REST.

To get invoices with the Invoices API:

MethodRequest URIGEThttps://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoices?
api-version=2018-11-01-preview

Price Sheet APIs


This section discusses existing Price Sheet APIs and provides recommendations to move to the Price Sheet API for Microsoft CustomerAgreements. It also discusses the Price Sheet API for Microsoft Customer Agreements and explains fields in the price sheets. The EnterpriseGet price sheet and Enterprise Get billing periods APIs are replaced by the Price Sheet API for Microsoft Customer Agreements(Microsoft.Billing/billingAccounts/billingProfiles/pricesheet). The new API supports both JSON and CSV formats, in asynchronous RESTformats. All Consumption APIs are replaced by native Azure APIs that use Azure AD for authentication and authorization. For moreinformation about calling Azure REST APIs, see Getting started with REST.

Billing Enterprise APIs

You used Billing Enterprise APIs with Enterprise enrollments to get price and billing period information. Authentication and authorizationused Azure Active Directory web tokens.

To get applicable prices for the specified Enterprise Enrollment with the Price Sheet and Billing Period APIs:

MethodRequest URIGEThttps://consumption.azure.com/v2/enrollments/{enrollmentNumber}/pricesheetGEThttps://consumption.azure.com/v2/enrollments/{enrollmentNumber}/billingPeriods/{billingPeriod}/pricesheet

Price Sheet API for Microsoft Customer Agreements

Use the Price Sheet API for Microsoft Customer Agreements to view prices for all Azure Consumption and Marketplace consumptionservices. The prices shown for the billing profile apply to all subscriptions that belong to the billing profile.

Use the Price Sheet API to view all Azure Consumption services Price Sheet data in CSV format:

MethodRequest URIPOSThttps://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/pricesheet/default/
api-version=2018-11-01-preview&startDate=2019-01-01&endDate=2019-01-31&format=csv

Use the Price Sheet API to view all Azure Consumption services Price Sheet data in JSON format:

MethodRequest URIPOSThttps://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/pricesheet/default/
api-version=2018-11-01-preview&startDate=2019-01-01&endDate=2019-01-31&format=json

Using the API returns the price sheet for the entire account. However, you can also get a condensed version of the price sheet in PDFformat. The summary includes Azure Consumption and Marketplace consumption services that are billed for a specific invoice. The invoiceis identified by the {invoiceId}, which is the same as the Invoice Number shown in the Invoice Summary PDF files. Here's an example.

Example image showing the Invoice Number that corresponds to the InvoiceId


To view invoice information with the Price Sheet API in CSV format:

MethodRequest URIPOSThttps://management.azure.com/providers/Microsoft.Billing/billingAccounts/2909cffc-b0a2-5de1-bb7b-5d3383764184/billingProfiles/2dcffe0c-
ee92-4265-8647-515b8fe7dc78/invoices/{invoiceId}/pricesheet/default/download?api-version=2018-11-01-preview&format=csv


To view invoice information with the Price Sheet API in JSON Format:

MethodRequest URIPOSThttps://management.azure.com/providers/Microsoft.Billing/billingAccounts/2909cffc-b0a2-5de1-bb7b-5d3383764184/billingProfiles/2dcffe0c-
ee92-4265-8647-515b8fe7dc78/invoices/{invoiceId}/pricesheet/default/download?api-version=2018-11-01-preview&format=json

You can also see estimated prices for any Azure Consumption or Marketplace consumption service in the current open billing cycle orservice period.

To view estimated prices for consumption services with the Price Sheet API in CSV format:

MethodRequest URIPOSThttps://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/pricesheet/default/download?api-version=2018-11-01-preview&format=csv

To view estimated prices for consumption services with the Price Sheet API in JSON format:

MethodRequest URIPOSThttps://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/pricesheet/default/download?api-version=2018-11-01-preview&format=json

The Microsoft Customer Agreement Price Sheet APIs are asynchronous REST APIs. The responses for the APIs changed from the oldersynchronous APIs. The body of the API response also changed.

Old response body

Here's an example of the synchronous REST API response:

[ 
{ 
"id": "enrollments/573549891/billingperiods/2016011/products/343/pricesheets", 
"billingPeriodId": "201704", 
"meterId": "dc210ecb-97e8-4522-8134-2385494233c0", 
"meterName": "A1 VM", 
"unitOfMeasure": "100 Hours", 
"includedQuantity": 0, 
"partNumber": "N7H-00015", 
"unitPrice": 0.00, 
"currencyCode": "USD" 
}, 
{ 
]
New response body

The APIs support the Azure REST asynchronous format. Call the API using GET and you receive the following response:

No Response Body
HTTP Status 202 Accepted
The following headers are sent with the location of the output:

Location:https://management.azure.com/providers/Microsoft.Consumption/operationresults/{operationId}?
sessiontoken=XZDFSnvdkbkdsb==
Azure-AsyncOperation:https://managment.azure.com/providers/Microsoft.Consumption/operationStatus/{operationId}?
sessiontoken=XZDFSnvdkbkdsb==
Retry-After: 10

OData-EntityId: {operationId}
Make another GET call to the location. The response to the GET call is the same until the operation reaches a completion or failure state.
When completed, the response to the GET call location returns the download URL as if the operation was executed at the same time. Here'san example:

HTTP Status 200
{ 
"id": "providers/Microsoft.Consumption/operationresults/{operationId}", 
"name": {operationId}, 
"type": “Microsoft.Consumption/operationResults", 
"properties" : { 
"downloadUrl": {urltoblob}, 
"validTill": "Date" 
}
}
The client can also make a GET call for the Azure-AsyncOperation. The endpoint returns the status for the operation.

The following table shows fields in the older Enterprise Get price sheet API. It includes corresponding fields in the new price sheet forMicrosoft Customer Agreements:

Old propertyNew propertyNotesbillingPeriodIdNot applicableNot applicable. For Microsoft Customer Agreements, the invoice and associated price sheet replaced the conceptof billingPeriodId.
meterIdmeterIdunitOfMeasureunitOfMeasureExact string values might differ.
includedQuantityincludedQuantityNot applicable for services in Microsoft Customer Agreements.
partNumberNot applicableInstead, use a combination of productOrderName (same as offerID) and meterID.
unitPriceunitPriceUnit price is applicable for services consumed in Microsoft Customer Agreements.
currencyCodepricingCurrencyMicrosoft Customer Agreements have price representations in pricing currency and billing currency. ThecurrencyCode corresponds to the pricingCurrency in Microsoft Customer Agreements.
offerIDproductOrderNameInstead of OfferID, you can use productOrderName but isn't the same as OfferID. However, productOrderNameand meter determine pricing in Microsoft Customer Agreements related to meterId and OfferID in legacyenrollments.

Consumption Price Sheet API operations

For Enterprise Agreements, you used the Consumption Price Sheet API Get and Get By Billing Period operations for a scope bysubscriptionId or a billing period. The API uses Azure Resource Management authentication.

To get the Price Sheet information for a scope with the Price Sheet API:

MethodRequest URIGEThttps://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Consumption/pricesheets/default?api-version=2018-10-01

To get Price Sheet information by billing period with the Price Sheet API:

MethodRequest URIGEThttps://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Conapi-version=2018-10-01

Instead of the above API endpoints, use the following ones for Microsoft Customer Agreements:

Price Sheet API for Microsoft Customer Agreements (asynchronous REST API)

This API is for Microsoft Customer Agreements and it provides extra attributes.


Price Sheet for a Billing Profile scope in a Billing Account

This API is the existing API. It was updated to provide the price sheet for a billing profile in a billing account.

Price Sheet for a scope by billing account

Azure Resource Manager authentication is used when you get the Price Sheet at the enrollment scope in a billing account.

To get the Price Sheet at the enrollment account in a billing account:

MethodRequest URIGET/providers/Microsoft.Billing/billingAccounts/65085863/providers/Microsoft.Consumption/pricesheets/download?api-version=2019-01-01

For a Microsoft Customer Agreement, use the information in the following section. It provides the field properties used for MicrosoftCustomer agreements.

Price Sheet for a billing profile scope in a billing account

The updated Price Sheet by billing account API gets the Price Sheet in CSV format. To get the Price Sheet at the billing profile scope for anMCA:

MethodRequest URIGET/providers/Microsoft.Billing/billingAccounts/28ae4b7f-41bb-581e-9fa4-8270c857aa5f/billingProfiles/ef37facb-cd6f-437a-9261-
65df15b673f9/providers/Microsoft.Consumption/pricesheets/download?api-version=2019-01-01

At the EA's enrollment scope, the API response and properties are identical. The properties correspond to the same MCA properties.

The older properties for Azure Resource Manager Price Sheet APIs and the same new properties are in the following table.

Old Azure ResourceManager Price SheetAPI PropertyNew Microsoft CustomerAgreement Price SheetAPI propertyDescriptionMeter IDmeterIdUnique identifier for the meter. Same as meterID.
Meter namemeterNameName of the meter. Meter represents the Azure service deployable resource.
Meter categoryserviceName of the classification category for the meter. Same as the service in the Microsoft CustomerAgreement Price Sheet. Exact string values differ.
Meter subcategorymeterSubCategoryName of the meter subclassification category. Based on the classification of high-level feature setdifferentiation in the service. For example, Basic SQL DB vs Standard SQL DB.
Meter regionmeterRegionUnitNot applicableCan be parsed from unitOfMeasure.
Unit of measureunitOfMeasurePart numberNot applicableInstead of part number, use productOrderName and MeterID to uniquely identify the price for abilling profile. Fields are listed on the MCA invoice instead of the part number in MCA invoices.
Unit priceunitPriceMicrosoft Customer Agreement unit price.
Currency codepricingCurrencyMicrosoft Customer Agreements represent prices in pricing currency and billing currency.
Currency code is the same as the pricingCurrency in Microsoft Customer Agreements.
Included quantityincludedQuantityNot applicable to services in Microsoft Customer Agreements. Show with values of zero.
Offer IDproductOrderNameInstead of OfferID, use productOrderName. Not the same as OfferID, however theproductOrderName and meter determine pricing in Microsoft Customer Agreements. Related tometerId and OfferID in legacy enrollments.

The price for Microsoft Customer Agreements is defined differently than Enterprise agreements. The price for services in the Enterpriseenrollment is unique for product, part number, meter, and offer. The part number isn't used in Microsoft Customer Agreements.

The Azure Consumption service price that's part of a Microsoft Customer Agreement is unique for productOrderName and meterID. Theyrepresent the service meter and the product plan.

To reconcile between the price sheet and the usage in the Usage Details API, you can use the productOrderName and meterID.


Users that have billing profile owner, contributor, reader, and invoice manager rights can download the price sheet.

The price sheet includes prices for services whose price is based on usage. The services include Azure consumption and Marketplaceconsumption. The latest price at the end of each service period is locked and applied to usage in a single service period. For Azureconsumption services, the service period is usually a calendar month.

Retired Price Sheet API fields

The following fields are either not available in Microsoft Customer Agreement Price Sheet APIs or have the same fields.

Retired fieldDescriptionbillingPeriodIdNo applicable. Corresponds to InvoiceId for MCA.
offerIDNot applicable. Corresponds to productOrderName in MCA.
meterCategoryNot applicable. Corresponds to Service in MCA.
unitNot applicable. Can be parsed from unitOfMeasure.
currencyCodeSame as the pricingCurrency in MCA.
meterLocationSame as the meterRegion in MCA.
partNumberNot applicable because part number isn't listed in MCA invoices. Instead of part number, use the meterId and productOrderNamecombination to uniquely identify prices.
totalIncludedQuantityNot applicable.
pretaxStandardRateNot applicable.

Reservation Instance Charge API replaced

You can get billing transactions for reservation purchases with the Reserved Instance Charge API. The new API includes all purchases,
including third-party Marketplace offerings. All Consumption APIs are replaced by native Azure APIs that use Azure AD for authenticationand authorization. For more information about calling Azure REST APIs, see Getting started with REST. The Reserved Instance Charge API isreplaced by the Transactions API.

To get reservation purchase transactions with the Transactions API:

MethodRequest URIGEThttps://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/transactions?
api-version=2018-11-01-preview

Recommendations APIs replaced

Reserved Instance Purchase Recommendations APIs provide virtual machine usage over the last 7, 30, or 60 days. APIs also providereservation purchase recommendations. They include:

Shared Reserved Instance Recommendation API
Single Reserved Instance Recommendations API


All Consumption APIs are replaced by native Azure APIs that use Azure AD for authentication and authorization. For more informationabout calling Azure REST APIs, see Getting started with REST. The reservation recommendations APIs listed previously are replaced by theMicrosoft.Consumption/reservationRecommendations API.

To get reservation recommendations with the Reservation Recommendations API:

MethodRequest URIGEThttps://management.azure.com/providers/Microsoft.Consumption/reservationRecommendations?api-version=2019-01-01

Reservation Usage APIs replaced

You can get reservation usage in an enrollment with the Reserved Instance Usage API. If there's more than one reserved instance in anenrollment, you can also get the usage of all the reserved instance purchases using this API.


They include:

Reserved Instance Usage Details
Reserved Instance Usage Summary


All Consumption APIs are replaced by native Azure APIs that use Azure AD for authentication and authorization. For more informationabout calling Azure REST APIs, see Getting started with REST. The reservation recommendations APIs listed previously are replaced by theMicrosoft.Consumption/reservationDetails and Microsoft.Consumption/reservationSummaries APIs.

To get reservation details with the Reservation Details API:

MethodRequest URIGEThttps://management.azure.com/providers/Microsoft.Consumption/reservationDetails?api-version=2019-01-01

To get reservation summaries with the Reservation Summaries API:

MethodRequest URIGEThttps://management.azure.com/providers/Microsoft.Consumption/reservationSummaries?api-version=2019-01-01

Power BI integration

You can also use Power BI for cost reporting. The Cost Management connector for Power BI Desktop can be used to create powerful,
customized reports that help you better understand your Azure spend. The Cost Management connector currently supports customers witheither a Microsoft Customer Agreement or an Enterprise Agreement (EA).

Next steps

Read the Cost Management documentation to learn how to monitor and control Azure spending. Or, if you want to optimize resourceuse with Cost Management.



Migrate from Consumption UsageDetails API

Article
09/21/2022


This article discusses migration away from the Consumption Usage Details API. TheConsumption Usage Details API is deprecated. The date that the API will be turned off isstill being determined. We recommend that you migrate away from the API as soon aspossible.

Migration destinations

Read the Choose a cost details solution article before you choose which solution is rightfor your workload. Generally, we recommend Exports if you have ongoing data ingestionneeds and or a large monthly usage details dataset. For more information, see Ingestusage details data.

If you have a smaller usage details dataset or a scenario that isn't met by Exports,
consider using the Cost Details report instead. For more information, see Get small costdatasets on demand.

Note

The Cost Details report is only available for customers with an EnterpriseAgreement or Microsoft Customer Agreement. If you have an MSDN, pay-as-you-
go, or Visual Studio subscription, you can migrate to Exports or continue using theConsumption Usage Details API.

Migration benefits

New solutions provide many benefits over the Consumption Usage Details API. Here's asummary:

Single dataset for all usage details - Azure and Azure Marketplace usage detailswere merged into one dataset. It reduces the number of APIs that you need to callto get see all your charges.
Scalability - The Marketplaces API is deprecated because it promotes a call patternthat isn't able to scale as your Azure usage increases. The usage details dataset canget extremely large as you deploy more resources into the cloud. The



Marketplaces API is a paginated synchronous API so it isn't optimized to effectivelytransfer large volumes of data over a network with high efficiency and reliability.
Exports and the Cost Details API are asynchronous. They provide you with a CSVfile that can be directly downloaded over the network.
API improvements - Exports and the Cost Details API are the solutions that Azuresupports moving forward. All new features are being integrated into them.
Schema consistency - The Cost Details report and Exports provide files withmatching fields os you can move from one solution to the other, based on yourscenario.
Cost Allocation integration - Enterprise Agreement and Microsoft CustomerAgreement customers using Exports or the Cost Details API can view charges inrelation to the cost allocation rules that they have configured. For moreinformation about cost allocation, see Allocate costs.


Field Differences

The following table summarizes the field differences between the Consumption UsageDetails API and Exports/Cost Details API. Exports and the Cost Details API provide a CSVfile download instead of the paginated JSON response that's provided by theConsumption API.

Enterprise Agreement field mapping

Enterprise Agreement customers who are using the Consumption Usage Details APIhave usage details records of the kind legacy. A legacy usage details record is shownbelow. All Enterprise Agreement customers have records of this kind due to theunderlying billing system that's used for them.

JSON{ 
"value": [ 
{ 
"id": "{id}", 
"name": "{name}", 
"type": "Microsoft.Consumption/usageDetails", 
"kind": "legacy", 

 "tags": { 
"env": "newcrp", 
"dev": "tools" 
}, 
"properties": { 
…... 
} 
} 
A full example legacy Usage Details record is shown at Usage Details - List - REST API(Azure Consumption)

The following table provides a mapping between the old and new fields. New propertiesare available in the CSV files produced by Exports and the Cost Details API. To learnmore about the fields, see Understand usage details fields.

Bold property names are unchanged.

Old PropertyNew PropertyaccountNameAccountNameAccountOwnerIdAccountOwnerIdadditionalInfoAdditionalInfoAvailabilityZoneAvailabilityZonebillingAccountIdBillingAccountIdbillingAccountNameBillingAccountNamebillingCurrencyBillingCurrencyCodebillingPeriodEndDateBillingPeriodEndDatebillingPeriodStartDateBillingPeriodStartDatebillingProfileIdBillingProfileIdbillingProfileNameBillingProfileNamechargeTypeChargeType


Old PropertyNew PropertyconsumedServiceConsumedServicecostCostInBillingCurrencycostCenterCostCenterdateDateeffectivePriceEffectivePricefrequencyFrequencyinvoiceSectionInvoiceSectionNameInvoiceSectionIdInvoiceSectionIdisAzureCreditEligibleIsAzureCreditEligiblemeterCategoryMeterCategorymeterIdMeterIdmeterNameMeterNameMeterRegionMeterRegionmeterSubCategoryMeterSubCategoryofferIdOfferIdpartNumberPartNumberPayGPricePayGPricePlanNamePlanNamePricingModelPricingModelproductProductNameProductOrderIdProductOrderIdProductOrderNameProductOrderNamePublisherNamePublisherNamePublisherTypePublisherTypequantityQuantityReservationIdReservationId


Old PropertyNew PropertyReservationNameReservationNameresourceGroupResourceGroupresourceIdResourceIdresourceLocationResourceLocationresourceNameResourceNameserviceFamilyServiceFamilyServiceInfo1ServiceInfo1ServiceInfo2ServiceInfo2subscriptionIdSubscriptionIdsubscriptionNameSubscriptionNameTagsTagsTermTermunitOfMeasureUnitOfMeasureunitPriceUnitPriceCostAllocationRuleNameCostAllocationRuleName

Microsoft Customer Agreement field mapping

Microsoft Customer Agreement customers that use the Consumption Usage Details APIhave usage details records of the kind modern. A modern usage details record is shownbelow. All Microsoft Customer Agreement customers have records of this kind due tothe underlying billing system that is used for them.

JSON{ 
"value": [ 
{ 
"id": "{id}", 
"name": "{name}", 

 "type": "Microsoft.Consumption/usageDetails", 
"kind": "modern", 
"tags": { 
"env": "newcrp", 
"dev": "tools" 
}, 
"properties": { 
…... 
} 
} 
An full example legacy Usage Details record is shown at Usage Details - List - REST API(Azure Consumption)

A mapping between the old and new fields are shown in the following table. Newproperties are available in the CSV files produced by Exports and the Cost Details API.
Fields that need a mapping due to differences across the solutions are shown in boldtext.

For more information, see Understand usage details fields.

Old propertyNew propertyinvoiceIdinvoiceIdpreviousInvoiceIdpreviousInvoiceIdbillingAccountIdbillingAccountIdbillingAccountNamebillingAccountNamebillingProfileIdbillingProfileIdbillingProfileNamebillingProfileNameinvoiceSectionIdinvoiceSectionIdinvoiceSectionNameinvoiceSectionNamepartnerTenantIdpartnerTenantId


Old propertyNew propertypartnerNamepartnerNameresellerNameresellerNameresellerMpnIdresellerMpnIdcustomerTenantIdcustomerTenantIdcustomerNamecustomerNamecostCentercostCenterbillingPeriodEndDatebillingPeriodEndDatebillingPeriodStartDatebillingPeriodStartDateservicePeriodEndDateservicePeriodEndDateservicePeriodStartDateservicePeriodStartDatedatedateserviceFamilyserviceFamilyproductOrderIdproductOrderIdproductOrderNameproductOrderNameconsumedServiceconsumedServicemeterIdmeterIdmeterNamemeterNamemeterCategorymeterCategorymeterSubCategorymeterSubCategorymeterRegionmeterRegionproductIdentifierProductIdproductProductNamesubscriptionGuidSubscriptionIdsubscriptionNamesubscriptionNamepublisherTypepublisherTypepublisherIdpublisherId


Old propertyNew propertypublisherNamepublisherNameresourceGroupresourceGroupNameinstanceNameResourceIdresourceLocationNormalizedlocationresourceLocationlocationeffectivePriceeffectivePricequantityquantityunitOfMeasureunitOfMeasurechargeTypechargeTypebillingCurrencyCodebillingCurrencypricingCurrencyCodepricingCurrencycostInBillingCurrencycostInBillingCurrencycostInPricingCurrencycostInPricingCurrencycostInUsdcostInUsdpaygCostInBillingCurrencypaygCostInBillingCurrencypaygCostInUSDpaygCostInUsdexchangeRatePricingToBillingexchangeRatePricingToBillingexchangeRateDateexchangeRateDateisAzureCreditEligibleisAzureCreditEligibleserviceInfo1serviceInfo1serviceInfo2serviceInfo2additionalInfoadditionalInfotagstagspartnerEarnedCreditRatepartnerEarnedCreditRatepartnerEarnedCreditAppliedpartnerEarnedCreditAppliedmarketPricePayGPrice


Old propertyNew propertyfrequencyfrequencytermtermreservationIdreservationIdreservationNamereservationNamepricingModelpricingModelunitPriceunitPriceexchangeRatePricingToBillingexchangeRatePricingToBilling

Next steps

Learn more about Cost Management + Billing automation at Cost Managementautomation overview.



Migrate from ConsumptionMarketplaces API

Article
07/17/2022


This article discusses migration away from the Consumption Marketplaces API. TheConsumption Marketplaces API is deprecated. The date that the API will be turned off isstill being determined. We recommend that you migrate away from the API as soon aspossible.

This article only applies to customers with an Enterprise Agreement or an MSDN, pay-
as-you-go, or Visual Studio subscription.

Migration destinations

We've merged Azure Marketplace and Azure usage records into a single usage detailsdataset. Read the Choose a cost details solution article before you choose the solutionthat's right for your workload. Generally, we recommend using Exports if you haveongoing data ingestion needs or a large monthly usage details dataset. For moreinformation, see Ingest usage details data.

If you have a smaller usage details dataset or a scenario that isn't met by Exports,
consider using the Cost Details report instead. For more information, see Get small costdatasets on demand.

Note

The Cost Details report is only available for customers with an EnterpriseAgreement or Microsoft Customer Agreement. If you have an MSDN, pay-as-you-
go, or Visual Studio subscription, you can migrate to Exports or continue using theConsumption Usage Details API.

Migration benefits

New solutions provide many benefits over the Consumption Usage Details API. Here's asummary:

Single dataset for all usage details - Azure and Azure Marketplace usage detailswere merged into one dataset. It reduces the number of APIs that you need to callto get see all your charges.



Scalability - The Marketplaces API is deprecated because it promotes a call patternthat isn't able to scale as your Azure usage increases. The usage details dataset canget exceedingly large as you deploy more resources into the cloud. TheMarketplaces API is a paginated synchronous API so it isn't optimized to effectivelytransfer large volumes of data over a network with high efficiency and reliability.
Exports and the Cost Details report are asynchronous. They provide you with a CSVfile that can be directly downloaded over the network.
API improvements - Exports and the Cost Details API are the solutions that Azuresupports moving forward. All new features are being integrated into them.
Schema consistency - The Cost Details API and Exports process provide files withmatching fields os you can move from one solution to the other, based on yourscenario.
Cost Allocation integration - Enterprise Agreement and Microsoft CustomerAgreement customers using Exports or the Cost Details API can view charges inrelation to the cost allocation rules that they've configured. For more informationabout cost allocation, see Allocate costs.


Field differences

The following table summarizes the field mapping needed to transition from the dataprovided by the Marketplaces API to Exports and the Cost Details API. Both of thesolutions provide a CSV file download as opposed to the paginated JSON responsethat's provided by the Consumption API.

Usage records can be identified as marketplace records in the combined datasetthrough the PublisherType field. Also, there are many new fields in the newer solutionsthat might be useful to you. For more information about available fields, see Understandusage details fields.

Old PropertyNew PropertyNotesPublisherTypeUsed to identify a marketplace usage recordaccountNameAccountNameadditionalPropertiesAdditionalInfocostCenterCostCenterdepartmentNameBillingProfileNamebillingPeriodIdUse BillingPeriodStartDate / BillingPeriodEndDateusageStartUse Date


Old PropertyNew PropertyNotesusageEndUse DateinstanceNameResourceNameinstanceIdResourceIdcurrencyBillingCurrencyCodeconsumedQuantityQuantitypretaxCostCostInBillingCurrencyisEstimatedNot availablemeterIdMeterIdofferNameOfferIdresourceGroupResourceGrouporderNumberNot availablepublisherNamePublisherNameplanNamePlanNameresourceRateEffectivePricesubscriptionGuidSubscriptionIdsubscriptionNameSubscriptionNameunitOfMeasureUnitOfMeasureisRecurringChargeWhere applicable, use the Frequency and Termfields moving forward.

Next steps

Learn more about Cost Management automation at Cost Management automationoverview.



Exports

Reference


Service:Cost ManagementAPI Version:2023-03-01
Operations

Create Or UpdateThe operation to create or update a export. Update operationrequires latest eTag to be set in the request. You may obtain thelatest eTag by performing a get o...

DeleteThe operation to delete a export.

ExecuteThe operation to run an export.

GetThe operation to get the export for the defined scope by exportname.

Get Execution HistoryThe operation to get the run history of an export for the definedscope and export name.

ListThe operation to list all exports at the given scope.




Generate Cost Details Report

Reference


Service:Cost ManagementAPI Version:2023-03-01
Operations

Create OperationThis API is the replacement for all previously release UsageDetails APIs. Request to generate a cost details report for theprovided date range, billing period...

Get Operation ResultsGet the result of the specified operation. This link is provided inthe CostDetails creation request response Location header.




Microsoft Cost Management

Article
06/07/2022


The Cost Management APIs provide the ability to explore cost and usage data viamultidimensional analysis, where creating customized filters and expressions allow youto answer consumption-related questions for your Azure resources. These APIs arecurrently available for Azure Enterprise customers.

REST Operation Groups

OperationGroupDescriptionDimensionsProvides operations to get supported dimensions for your usage under a variety ofscopes. You can retrieve a list of dimensions that can be used as inputs forgenerating queries with the Query or Exports API.
QueryProvides operations to get aggregated cost and usage data based on the query yousupply. Data can be filtered, sorted, and grouped by all available Dimensions(accessible through the Dimensions API).
ExportsProvides operations to schedule recurring exports of cost and usage data to blobstorage. Data can be filtered, sorted, and grouped by all available Dimensions(accessible through the Dimensions API).

See also

Azure consumption REST API documentation


Az.CostManagement

Reference


Microsoft Azure PowerShell: Cost cmdlets

Cost Management

Get-AzCostManagementExportThe operation to get the export for thedefined scope by export name.

Get-AzCostManagementExportExecutionHistoryThe operation to get the executionhistory of an export for the definedscope and export name.

Invoke-AzCostManagementExecuteExportThe operation to execute an export.

Invoke-AzCostManagementQueryQuery the usage data for scopedefined.

Invoke-AzCostManagementReservationDetailReportGenerates the reservations detailsreport for provided date rangeasynchronously based on enrollment id.
The Reservation usage details can beviewed only by certain enterprise roles.
For more details on the roles see,
https://learn.microsoft.com/en-
us/azure/cost-management-
billing/manage/understand-ea-
roles#usage-and-costs-access-by-role

New-AzCostManagementDetailReportThis API is the replacement for allpreviously release Usage Details APIs.
Request to generate a cost detailsreport for the provided date range,
billing period (Only enterprisecustomers) or Invoice Idasynchronously at a certain scope.
Theinitial call to request a report will returna 202 with a 'Location' and 'Retry-After'header.
The 'Location' header willprovide the endpoint to poll to get theresult of the report generation.
The'Retry-After' provides the duration towait before polling for the generatedreport.
A call to poll the reportoperation will provide a 202 responsewith a 'Location' header if the operation




is still in progress.
Once the reportgeneration operation completes, thepolling endpoint will provide a 200response along with details on thereport blob(s) that are available fordownload.
The details on the file(s)
available for download will be availablein the polling response body.

New-AzCostManagementExportThe operation to create or update aexport.
Update operation requireslatest eTag to be set in the request.
Youmay obtain the latest eTag byperforming a get operation.
Createoperation does not require eTag.

New-
AzCostManagementQueryComparisonExpressionObject
Create a in-memory object forQueryComparisonExpression

New-AzCostManagementQueryFilterObjectCreate a in-memory object forQueryFilter

Remove-AzCostManagementExportThe operation to delete a export.

Update-AzCostManagementExportThe operation to create or update aexport.
Update operation requireslatest eTag to be set in the request.
Youmay obtain the latest eTag byperforming a get operation.
Createoperation does not require eTag.




Cost Management automation FAQ

Article
10/12/2022


The following sections cover the most commonly asked questions and answers aboutCost Management automation.

What are Cost Details versus Usage Details?

Both are different names for the same dataset. Usage Details is the original name of thedataset back when only Azure consumption resource usage records were present. Overtime, more types of cost have been added to the dataset, including marketplace usage,
Azure purchases (such as Reservations), marketplace purchases and even Microsoft 365costs. Cost Details is the name being used moving forward for the dataset.

Why do I get Usage Details API timeouts?

Cost datasets available from the Usage Details API can often be overly large (multipleGBs or more). The larger the size of the dataset that you request, the longer the servicetakes to compile the data before sending it to you. Because of the delay, synchronousAPI solutions like the paginated JSON Usage Details API might time out before yourdata is provided. If you encounter timeouts or have processes that frequently need topull a large amount of cost data, see Retrieve large cost datasets recurringly withExports.

What is the difference between legacy and modern usagedetails?

A legacy versus modern usage details record is identified by the kind field in the UsageDetails API. The field is used to distinguish between data that’s returned for differentcustomer types. The call patterns to obtain legacy and modern usage details areessentially the same. The granularity of the data is the same. The main difference is thefields available in the usage details records themselves. If you’re an EA customer, you’llalways get legacy usage details records. If you’re a Microsoft Customer Agreementcustomer, you'll always get modern usage details records.

How do I see my recurring charges?

Recurring charges are available in the Cost Details report when viewing Actual Cost.




Where can I see tax information in Cost Details?

Cost details data is all pre-tax. Tax related charges are only available on your invoice.

Why is PAYGPrice zero in my cost details file?

If you’re an EA customer, we don’t currently support showing pay-as-you-go pricesdirectly in the usage details data. To see the pricing, use the Retail Prices API.

Does Cost Details have Reservation charges?

Yes it does. You can see those charges according to when the actual charges occurred(Actual Cost). Or, you can see the charges spread across the resources that consumedthe Reservation (Amortized Cost). For more information, see Get Azure consumptionand reservation usage data using API.

Am I charged for using the Cost Details API?

No the Cost Details API is free. Make sure to abide by the rate-limiting policies, however.

What's the difference between the Invoices API, theTransactions API, and the Cost Details API?

These APIs provide a different view of the same data:

The Invoices API provides an aggregated view of your monthly charges.
The Transactions API provides a view of your monthly charges aggregated atproduct/service family level.
The Cost Details report provides a granular view of the usage and cost records foreach day. The Cost Details API is available for Enterprise Agreement and MicrosoftCustomer Agreement accounts. For pay-as-you-go subscriptions, use the ExportsAPI. If Exports don't meet your needs and you need an on-demand solution, seeGet Cost Details for a pay-as-you-go subscription.


I recently migrated from an EA to an MCA agreement.
How do I migrate my API workloads?

See Migrate from EA to MCA APIs.

When will the Enterprise Reporting APIs get turned off?


The Enterprise Reporting APIs are deprecated. The date that the API will be turned off isstill being determined. We recommend that you migrate away from the APIs as soon aspossible. For more information, see Migrate from Azure Enterprise Reporting toMicrosoft Cost Management APIs.

When will the Consumption Usage Details API get turnedoff?

The Consumption Usage Details API is deprecated. The date that the API will bet turnedoff is still being determined. We recommend that you migrate away from the API assoon as possible. For more information, see Migrate from Consumption Usage DetailsAPI.

When will the Consumption Marketplaces API get turnedoff?

The Marketplaces API is deprecated. The date that the API will be turned off is still beingdetermined. Data from the API is available in the Cost Details report. We recommendthat you migrate to it as soon as possible. For more information, see Migrate fromConsumption Marketplaces API.

When will the Consumption Forecasts API get turned off?

The Forecasts API is deprecated. The date that the API will be turned off is still beingdetermined. Data from the API is available in the Cost Management Forecast API. Werecommend that you migrate to it as soon as possible.

Next steps

Learn more about Cost Management + Billing automation at Cost Managementautomation overview.



